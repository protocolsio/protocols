{"id":49419,"title":"Investigating Invalid DOIs in COCI","title_html":"<p>Investigating Invalid DOIs in COCI<\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.buhjnt4n","doi_status":2,"uri":"investigating-invalid-dois-in-coci-buhjnt4n","type_id":1,"template_id":5,"published_on":1619629382,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":1,"version_data":{"id":"1","code":"buhjnt4n","parent_id":49047,"parent_uri":"investigating-invalid-dois-in-coci-bt5xnq7n","is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":true},"created_on":1619430846,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Sara Coppini","affiliation":null,"affiliations":[],"username":"m4vle152y1t4ule1","note":null,"link":null,"image":{"source":"\/img\/avatars\/001.png","placeholder":"\/img\/avatars\/001.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":16,"authors":[{"name":"Nooshin Shahidzadeh","affiliation":"University of Bologna","affiliations":[],"username":"m4vle152w1s4wle1","note":null,"link":null,"image":{"source":"https:\/\/lh3.googleusercontent.com\/-JyXkvY_GkJ8\/AAAAAAAAAAI\/AAAAAAAAQM0\/AMZuuckwTaJ5CYq_-NQHetIJrXUXbEmx9w\/s96-c\/photo.jpg","placeholder":"https:\/\/lh3.googleusercontent.com\/-JyXkvY_GkJ8\/AAAAAAAAAAI\/AAAAAAAAQM0\/AMZuuckwTaJ5CYq_-NQHetIJrXUXbEmx9w\/s96-c\/photo.jpg"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Alessia Cioffi","affiliation":"University of Bologna","affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Arianna Moretti","affiliation":"University of Bologna","affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Sara Coppini","affiliation":"University of Bologna","affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":22817,"uri":"open-science-20202021","title":"Open Science 2020\/2021","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":22817,"uri":"open-science-20202021","title":"Open Science 2020\/2021","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":false,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Investigating Invalid DOIs in COCI","title_html":"Investigating Invalid DOIs in COCI","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"investigating-invalid-dois-in-coci-buhjnt4n","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1618395700,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/investigating-invalid-dois-in-coci-buhjnt4n","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"DE532354E10C4745A4F98389C1A68172","state_version_id":572,"steps":[{"id":1167227,"guid":"0E42880B6425435386AE0A2F9BA6BB1C","previous_id":1167246,"previous_guid":"67A217C0A67611EB82736D80AFE29455","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"31F40DE83CF1471E80295E6AF49E91BA","order_id":1,"type_id":6,"title":"Section","source":{"title":"Reading the CSV Data"}},{"id":1054724,"guid":"37C8A4926BF2401383E80DC580A3D56B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">First we read the CSV of the invalid DOIs, containing all the invalid cited DOIs in one column and their valid citing counterparts in another.<\/div><\/div>"}},{"id":1054725,"guid":"5693F7409B8711EB8E5115F12A6921AC","order_id":2,"type_id":9,"title":"dataset","source":{"name":"Citations to invalid DOI-identified entities","link":"https:\/\/zenodo.org\/record\/4625300#.YHQ2Si2l1dg"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167228,"guid":"729EB195985E43DF988BC30723E06F29","previous_id":1167227,"previous_guid":"0E42880B6425435386AE0A2F9BA6BB1C","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"58D21DC9F083432EAD0274B9BF3BDE0B","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating the Output JSON File"}},{"id":1054724,"guid":"4D3DC63ADDE6435E91216617C7B7BCC6","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We create a JSON file for the output data that strictly answer the research questions and data for the visualizations of our findings. We opted for JSON file format to store all the data answering the research questions, because this file format allows us to store more heterogeneous information in a more complex and structured way. Indeed, we stored information not directly requested by the research questions, such as the number of missing citations for each single publisher, to provide a more precise answer. For what concerns the visualizations, the JSON file format allows us to separate different kinds of data and save also data that is relevant for the graphic representations of our findings but not strictly related to the research questions (e.g. which publishers were involved in citations that were originally invalid and then validated with the DOI API request).<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167229,"guid":"F7CC9549C46D4B9CBC6AD8FD5561A8E5","previous_id":1167228,"previous_guid":"729EB195985E43DF988BC30723E06F29","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"26FC488989B647348FFBC11771083217","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating the Output JSON File"}},{"id":1054724,"guid":"DCAC5C65D6CF4789B8741DD77A8183B9","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We add a key called \"responsible_publishers\" that will include a dictionary containing all publisher data for citing articles.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167230,"guid":"EFB4D75CFDC4481591ACB020E927397A","previous_id":1167229,"previous_guid":"F7CC9549C46D4B9CBC6AD8FD5561A8E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"55E839D165FB4345B41E5795EC24D0CD","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating the Output JSON File"}},{"id":1054724,"guid":"AA06838ACF7D4FE09B55C39D6C1D8F67","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We add a key called \"receiving_publishers\" that will include a dictionary containing all publisher data for cited articles.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167231,"guid":"90151B4D3FA044F7998B79B742BD0A38","previous_id":1167230,"previous_guid":"EFB4D75CFDC4481591ACB020E927397A","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"01CFCEC1B57F4656A343293C8EE27323","order_id":1,"type_id":6,"title":"Section","source":{"title":"Creating the Output JSON File"}},{"id":1054724,"guid":"97A8B113FFED432393ACF4490ABF638E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We add a key called \"total_number\u200c_of\u200c_corrected\u200c_dois\" that will hold only a number.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167232,"guid":"D907F06449B14DA69D65FCF9E67FF139","previous_id":1167231,"previous_guid":"90151B4D3FA044F7998B79B742BD0A38","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A9F9F1E0F96941AFA0846A6F5761D481","order_id":1,"type_id":6,"title":"Section","source":{"title":"Processing Each Line in the CSV File and Extracting the Needed Information"}},{"id":1054724,"guid":"0B0A24D049E4429F82617DE2623A7B1B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We use the DOI REST API (https:\/\/doi.org\/api\/handles\/[doi]) to search for each of the invalid cited DOIs in the CSV. If we receive the response code \"1\", we know that the citation data is now valid, we now have two cases.<\/div><\/div>"}}],"cases":[{"guid":"860AA8BC32CA40E89C7C4796884B2718","step_guid":"D907F06449B14DA69D65FCF9E67FF139","title":"If the invalid cited DOI is still invalid","short_title":null,"description":"{\"blocks\":[{\"key\":\"cqc85\",\"text\":\"In this case we will have to extract the publisher data for both the citing and the cited articles.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","first_step_id":1167233,"first_step_guid":"603D99BE013945BE90F2376D21EAA3AC"},{"guid":"FE95502283E94EEDAD465E71287B1892","step_guid":"D907F06449B14DA69D65FCF9E67FF139","title":"If the invalid cited DOI is now valid","short_title":null,"description":"{\"blocks\":[{\"key\":\"diju3\",\"text\":\"In this case we don't have to extract the publisher data since the citation is now invalid.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","first_step_id":1167240,"first_step_guid":"63DEF0559E8A4AB8A257CA634467649F"}],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167233,"guid":"603D99BE013945BE90F2376D21EAA3AC","previous_id":1167232,"previous_guid":"D907F06449B14DA69D65FCF9E67FF139","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"B5FE89842869447CADC8BE1E8E60E978","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"7B3D06FE274E4A3D80451DA526648903","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We search through the REST API for Crossref for the id of the publisher, which is the prefix of the DOI (i.e., all the characters preceding the backslash) using: https:\/\/api.crossref.org\/prefixes\/<\/div><div class = \"text-block\">The request returns a JSON file with information about the member code of the publisher, the name of the publisher, and the prefix.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167234,"guid":"E52DEC97CA3941A895EC288056F74225","previous_id":1167233,"previous_guid":"603D99BE013945BE90F2376D21EAA3AC","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D22E9504CD6B49B1BB1FF9750CB3DA0E","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"9665329A3E9140CFA436DCA3A717AB14","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We check if the publisher ID exists in the \"responsible_publishers\" dictionary as a key. If it does not, we create a new item in the dictionary: the key is the ID of the publisher, and the value is a dictionary containing the name of the publisher and the number of invalid citation data it has sent to Crossref (which at the time of creation would be 1). If, on the other hand, it does exist, we just increment the number inside the inner dictionary of that publisher by 1.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167235,"guid":"2F3336C243B94066A22364C8A1CD1373","previous_id":1167234,"previous_guid":"E52DEC97CA3941A895EC288056F74225","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"6AB90E2C95684964ABDF180BFF1867C2","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"E0C171AE575D49D99745EA50BB26D6DF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We assume the first 6 characters of the invalid cited DOI to be the ID of the publisher to which the invalid citation is pointing. <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167236,"guid":"5863006595044071821A7734089B6881","previous_id":1167235,"previous_guid":"2F3336C243B94066A22364C8A1CD1373","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"077A0F7C2B5A4B0EB14BF464923E9F57","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"39C5A3FA04464639815C38A79E5AF78E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We check the validity of this ID through the Crossref REST API. If this ID exists and belongs to a publisher, we add it to the \"receiving_publisher\" dictionary as a key, the value of which would be a dictionary containing the number of the citations received and the name of the publisher. (Similar to step 4.1 above)<\/div><\/div>"}}],"cases":[{"guid":"06BF2C05CE3F41EAA4F1DE5F3DD166D4","step_guid":"5863006595044071821A7734089B6881","title":"If the first 6 characters are not a valid ID","short_title":null,"description":"{\"blocks\":[{\"key\":\"drk29\",\"text\":\"In this case we will try to find the publisher name through other ways.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","first_step_id":1167237,"first_step_guid":"8649199F8C3A4200A6A6603F39128AAA"},{"guid":"75BBDCE0622C476DA34B603A3EBBE16F","step_guid":"5863006595044071821A7734089B6881","title":"If the first 6 characters are a valid ID","short_title":null,"description":"{\"blocks\":[{\"key\":\"908n1\",\"text\":\"In this case we skip to the next step.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","first_step_id":null,"first_step_guid":null}],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167237,"guid":"8649199F8C3A4200A6A6603F39128AAA","previous_id":1167236,"previous_guid":"5863006595044071821A7734089B6881","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"64CADA32E4C542868D5DBC7BB3E74C13","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"A9F7CED096AD4E95B7BF04CC84F286FD","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We search through the REST API of Crossref for the reference list of the citing article and see if there is any additional data (for example in the \"unstructured\" field) given in the XML that could lead us to the cited publisher.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167238,"guid":"B2CA0D599E82440B88FC5A23B2FE6C74","previous_id":1167237,"previous_guid":"8649199F8C3A4200A6A6603F39128AAA","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1B0EAACE1FC14B95A10852C235E31D38","order_id":1,"type_id":6,"title":"Section","source":{"title":"Extracting Publisher Data for Citing and Cited Articles"}},{"id":1054724,"guid":"623206810B684DEF8A9DCC9AA2207288","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">If additional data was found, then we use the \"query\" attribute of the Crossref REST API to search for the newly found string. If any publication was found, we add the \"publisher\" field of that publication to the \"receiving_publishers\" dictionary, in the form explained above.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167239,"guid":"5B8A546D3A384B5FAFBBB519A5677845","previous_id":1167238,"previous_guid":"B2CA0D599E82440B88FC5A23B2FE6C74","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1EBC8AFBA4AB4FA6BCB7A9E802B978ED","order_id":1,"type_id":6,"title":"Section","source":{"title":"Output"}},{"id":1054724,"guid":"0ABC34BE14B647C2AF5973752DD946F0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We return the completed JSON file after processing all the lines. (CSV addition possible later.)<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#E57785","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167240,"guid":"63DEF0559E8A4AB8A257CA634467649F","previous_id":1167232,"previous_guid":"D907F06449B14DA69D65FCF9E67FF139","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8CF46814B3C34F64AF63ACD2A7A8564B","order_id":1,"type_id":6,"title":"Section","source":{"title":"Action Plan for Corrected DOI"}},{"id":1054724,"guid":"E81CB69907704D7D9E8489C20D2CB6DA","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We add the citing and cited DOIs to a list as a tuple to later be put back into the COCI data.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167241,"guid":"F8327434072349558CF3DBD651CA75BD","previous_id":1167240,"previous_guid":"63DEF0559E8A4AB8A257CA634467649F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4B0D636593554738B80C90664A9AA7C9","order_id":1,"type_id":6,"title":"Section","source":{"title":"Action Plan for Corrected DOI"}},{"id":1054724,"guid":"97B174C01EB444FE8D1C52C63135ED7B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Increment the \"total_number\u200c_of\u200c_corrected\u200c_dois\" by 1.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1167246,"guid":"67A217C0A67611EB82736D80AFE29455","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"575AA19EF4334FFC9884803DE3A238EB","order_id":1,"type_id":6,"title":"Section","source":{"title":"Input material"}},{"id":1054724,"guid":"EAA87326F9AC479F9DFE5E5AE0C48E2A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Given the academic background of the project, we got our input material from Peroni, S. (2021). Citations to invalid DOI-identified entities obtained from processing DOI-to-DOI citations to add in COCI (1.0). Zenodo. <\/div><div class = \"text-block\"><a href=\"https:\/\/doi.org\/10.5281\/ZENODO.4625300\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/doi.org\/10.5281\/ZENODO.4625300<\/span><\/a><\/div><div class = \"text-block\">. As explained in the description of the resource, this dataset contains a two-column CSV file, where the first column (\"Valid_citing_DOI\") contains the DOI of a citing entity retrieved in Crossref, while the second column (\"Invalid_cited_DOI\") contains the invalid DOI of a cited entity identified by looking at the field \"reference\" in the JSON document returned by querying the <\/div><div class = \"text-block\"><a href=\"https:\/\/api.crossref.org\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Crossref API<\/span><\/a><\/div><div class = \"text-block\"> with the citing DOI.<\/div><div class = \"text-block\">These citations to invalid DOIs have been retrieved while processing Crossref data for adding open citations in COCI, but they have not been added in COCI since they point to a non-resolvable cited document.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">A preliminary note<\/span><\/div><div class = \"text-block\"><span>This protocol illustrates the workflow adopted within a scholarly research that operates within the OpenCitations environment, which is an independent infrastructure organization for open scholarship dedicated to the publication of open bibliographic and citation data by the use of <\/span><a href=\"https:\/\/en.wikipedia.org\/wiki\/Semantic_Web\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Semantic Web<\/span><\/a><span> (<\/span><a href=\"https:\/\/en.wikipedia.org\/wiki\/Linked_data\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Linked Data<\/span><\/a><span>) technologies. COCI is the OpenCitations Index of Crossref open DOI-to-DOI citations.<\/span><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Purpose<\/span><\/div><div class = \"text-block\">The purpose of this research is to find the publishers responsible for the missing citations in COCI by sending incorrect metadata to Crossref, the publishers to whom such invalid citations point to and the number of previously invalid citations which are currently valid. The ultimate aim would be of contributing to the resolution of this type of problem in order to insert the citations now valid in COCI, and correct those still invalid always in order to increase the number of open citations available and indexed in the OpenCitations project.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Study design\/methodology<\/span><\/div><div class = \"text-block\"><span>In the beginning, we use an already generated CSV file, containing the valid citing DOIs and the invalid cited DOIs, which is available from Peroni, S. (2021). Citations to invalid DOI-identified entities obtained from processing DOI-to-DOI citations to add in COCI (1.0). Zenodo. <\/span><a href=\"https:\/\/doi.org\/10.5281\/ZENODO.4625300\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/doi.org\/10.5281\/ZENODO.4625300<\/span><\/a><span>. These citations to invalid DOIs have been retrieved while processing Crossref data for adding open citations in COCI, but they have not been added in COCI since they point to a non-resolvable cited document.<\/span><\/div><div class = \"text-block\">Two REST API services can be of help: the DOI REST API to check if the invalid cited DOI is now valid; and the Crossref REST API to retrieve the publisher from the prefix of the DOI, both for the cited publications and the citing ones.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Findings<\/span><\/div><div class = \"text-block\">In addition to collecting the names of the publishers involved in these missing citations, either as the publisher of the citing article or as the publisher of the cited article, which was sufficient to answer our research questions, we have decided to collect additional information that can help us to get a better picture of the situation. As regards the JSON file, we found for each individual publisher 1) the number of incorrect given citations metadata sent, and 2) the number of invalid citations received. <\/div><div class = \"text-block\">On the other hand, as required by the initial research questions, we also extracted the total number of invalid citations that have since been corrected.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Originality\/value<\/span><\/div><div class = \"text-block\">The results of this research may point us to publishers who generally send out incorrect citation metadata and, inversely, those who generally receive invalid citations. These findings can first of all raise awareness of the accuracy of certain publishing houses in managing their metadata (or lack thereof). Moreover, finding these trends and showcasing the labor of the corrections may lead to increasingly valid citations if the proper measures are taken.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Research limitations\/implications<\/span><\/div><div class = \"text-block\">Based on the available data for the COCI, there may be a slight bias in our sample, causing some publishers to be incorrectly represented.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Minimal bibliography on related projects<\/span><\/div><div class = \"text-block\"><span>Heibi, I., Peroni, S. & Shotton, D. Software review: COCI, the OpenCitations Index of Crossref open DOI-to-DOI citations.<\/span><span style = \"font-style:italic;\">Scientometrics <\/span><span>121, 1213\u20131228 (2019). https:\/\/doi.org\/10.1007\/s11192-019-03217-6.<\/span><\/div><div class = \"text-block\"><span>Silvio Peroni, David Shotton (2020). OpenCitations, an infrastructure organization for open scholarship. <\/span><a href=\"https:\/\/www.mitpressjournals.org\/toc\/qss\/1\/1\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Quantitative Science Studies, 1(1)<\/span><\/a><span>: 428-444. <\/span><a href=\"https:\/\/doi.org\/10.1162\/qss_a_00023\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/doi.org\/10.1162\/qss_a_00023<\/span><\/a><span style = \":;\">.<\/span><\/div><div class = \"text-block\"><span>Peroni, S. (2021). Citations to invalid DOI-identified entities obtained from processing DOI-to-DOI citations to add in COCI (1.0). Zenodo. <\/span><a href=\"https:\/\/doi.org\/10.5281\/ZENODO.4625300\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/doi.org\/10.5281\/ZENODO.4625300<\/span><\/a><span style = \":;\">.<\/span><\/div><\/div>","changed_on":1619629382}