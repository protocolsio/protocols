{"access":{"can_view":true,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":false,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"acknowledgements":"","authors":[{"name":"Dakota Betz","affiliation":"ucsd","affiliation_url":null,"username":"dakota-betz","link":"","user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0},"note":"","is_verified_user":true}],"before_start":"","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1635356003,"creator":{"name":"Marina McCowin","affiliation":"UCSD- Scripps Institution of Oceanography","affiliation_url":"","username":"marina-mccowin2","link":"","user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0},"badges":[{"id":4,"name":"Gold power author!","image":{"source":"/img/badges/gold.svg","placeholder":"/img/badges/gold.svg"}}],"affiliations":[{"affiliation":"UCSD- Scripps Institution of Oceanography","url":"","job_title":null,"is_default":true}]},"cross_cloud_origin":null,"description":"{\"blocks\":[{\"key\":\"ero56\",\"text\":\"Our protocols are constantly evolving and old versions will be deleted.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fussd\",\"text\":\"The documents here are not intended to be cited in publications\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"{\"blocks\":[{\"key\":\"33fr7\",\"text\":\"Our protocols are constantly evolving and old versions will be deleted.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dgofo\",\"text\":\"The documents here are not intended to be cited in publications\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","document":"","documents":null,"doi":"dx.doi.org/10.17504/protocols.io.e6nvw5w7zvmk/v1","doi_status":2,"ethics_statement":"","fork_id":null,"fork_info":null,"fork_info_status":"not_fork","forks":[],"funders":[],"groups":[{"id":1686,"uri":"rouse-lab","title":"Rouse Lab","is_public":true,"image":{"source":"https://s3.amazonaws.com/protocols-files/files/BE269A2C2A7F11ECAB100A58A9FEAC02-placeholder.png","placeholder":"https://s3.amazonaws.com/protocols-files/files/BE269A2C2A7F11ECAB100A58A9FEAC02-placeholder.png"},"tech_support":{"email":"","phone":null,"use_email":false,"hide_contact":false,"url":null}}],"guid":"F9708AE0374B11EC8D6BE5F4AD2C1254","guidelines":"","has_references":false,"has_step_reagents":false,"has_versions":false,"id":54586,"image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"image_attribution":"","in_trash":false,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":false,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":841068,"journal":null,"keywords":null,"last_modified":1749844817,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","mention":null,"mentions":[],"ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"","public":true,"public_fork_note":"","published_on":1749844817,"references":[],"related_equipments":[],"related_materials":[],"reserved_doi":"","retraction_reason":null,"samples":{},"shared_access_id":265,"show_comparison":false,"sign_info":null,"space_access":{"can_view":false,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":true,"can_get_doi":true,"can_share":false,"can_move":false,"can_move_outside":false,"can_transfer":false,"can_download":false,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"space_id":1707,"state_version_id":1877,"stats":{"is_voted":false,"number_of_views":12,"number_of_steps":25,"number_of_bookmarks":0,"number_of_comments":7,"number_of_bookmarked_comments":0,"number_of_steps_comments":7,"number_of_protocol_comments":0,"number_of_exports":1,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it's working"},"steps":[{"id":1277294,"guid":"03BE7B60374C11EC8D6BE5F4AD2C1254","previous_id":0,"previous_guid":null,"section":"\u003cp\u003ePrograms and Dependencies\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"tft3\",\"text\":\"IQ-Tree\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":7}],\"entityRanges\":[],\"data\":{}},{\"key\":\"duqlp\",\"text\":\"Download: http://www.iqtree.org/\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":10,\"length\":22}],\"data\":{}},{\"key\":\"7h84i\",\"text\":\"Additional information/tutorials: http://www.iqtree.org/doc/Advanced-Tutorial\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":34,\"length\":43}],\"data\":{}},{\"key\":\"8dhd1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1nmih\",\"text\":\"Mesquite\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c9d0e\",\"text\":\"Download: https://www.mesquiteproject.org/Installation.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":10,\"length\":49}],\"data\":{}},{\"key\":\"3se2i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2k97\",\"text\":\"RAxML-ng\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5gt9t\",\"text\":\"Download: https://github.com/amkozlov/raxml-ng\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":10,\"length\":36}],\"data\":{}},{\"key\":\"52cmt\",\"text\":\"GUI 2.0 (compatible with ng): https://antonellilab.github.io/raxmlGUI/\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":4,\"offset\":30,\"length\":40}],\"data\":{}},{\"key\":\"69qtg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1pe7e\",\"text\":\"Text Editor (options below)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":12}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cdbjg\",\"text\":\"SublimeText:  https://www.sublimetext.com/3\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":5,\"offset\":14,\"length\":29}],\"data\":{}},{\"key\":\"c0a08\",\"text\":\"BBEdit: https://www.barebones.com/products/bbedit/download.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":6,\"offset\":8,\"length\":55}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"148DA9173CE111EC86E10A58A9FEAC02\",\"url\":\"http://www.iqtree.org\"}},\"1\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"09B30FA13CE111EC86E10A58A9FEAC02\",\"url\":\"http://www.iqtree.org/doc/Advanced-Tutorial\"}},\"2\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"27B5F2E73CE111EC86E10A58A9FEAC02\",\"url\":\"https://www.mesquiteproject.org/Installation.html\"}},\"3\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"7389C8F33CE111EC86E10A58A9FEAC02\",\"url\":\"https://github.com/amkozlov/raxml-ng\"}},\"4\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"7D2DC3293CE111EC86E10A58A9FEAC02\",\"url\":\"https://antonellilab.github.io/raxmlGUI\"}},\"5\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"44B80B9F3CE111EC86E10A58A9FEAC02\",\"url\":\"https://www.sublimetext.com/3\"}},\"6\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"57E7D0363CE111EC86E10A58A9FEAC02\",\"url\":\"https://www.barebones.com/products/bbedit/download.html\"}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1","cases":[],"critical":null},{"id":1277295,"guid":"0A7BCB10374C11EC8D6BE5F4AD2C1254","previous_id":1282731,"previous_guid":"A3A0B8103CE111EC8A145BEBBA8FB9C9","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"949ni\",\"text\":\"Make sure you have a copy of your original RAxML tree (against which you would like to test your constraint tree, which you have not created yet). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4pc2a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ciebn\",\"text\":\"Open your original tree in FigTree if it is a .tre file and convert it to a nexus file. To do this, click:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d8t1d\",\"text\":\"File \\u003e Export Trees\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":19}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ds5qq\",\"text\":\"And choose Nexus from the dropdown menu. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":11,\"length\":5}],\"entityRanges\":[],\"data\":{}},{\"key\":\"34uqa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"25k4d\",\"text\":\"Append the filename of this nexus file with \\\"_original.nex\\\" so that it's easy to tell apart from the constraint you will make.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null},{"id":1277303,"guid":"2963F970374D11EC83D957C59EDD8240","previous_id":1277295,"previous_guid":"0A7BCB10374C11EC8D6BE5F4AD2C1254","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8vj6o\",\"text\":\"You will use the original file as a base to start your constraint. Open your tree file \\\"_original.nex\\\" in Mesquite. Re-save it as \\\"_constraint.nex\\\" before you begin making changes. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"4","cases":[],"critical":null},{"id":1277304,"guid":"7CD64770374D11EC83D957C59EDD8240","previous_id":1277303,"previous_guid":"2963F970374D11EC83D957C59EDD8240","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"5ef7v\",\"text\":\"Collapse  all of the nodes in your tree into a single polytomy, including the outgroup. See image below of the collapse tool:\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":9,\"length\":1}],\"data\":{}},{\"key\":\"6vl30\",\"text\":\"  \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dv505\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"imageblock\",\"mutability\":\"\",\"data\":{\"guid\":\"763B8D783CC111EC86E10A58A9FEAC02\",\"height\":\"26\",\"is_video\":false,\"mime\":null,\"original_name\":null,\"placeholder\":\"https://lh6.googleusercontent.com/o3_Ps9OMGpHtjB-lxwO88JYP48BZsj9mO8tkpY0hMcFDgpI__cXAKRpVJvDGBAA1ubnlhuubwHNxJz1VSw63ZY5VwabbCNUtl9Kuc9IHXGAlTtjLu32fGfy2Z9NXKbKORbIGXjNa\",\"source\":\"https://lh6.googleusercontent.com/o3_Ps9OMGpHtjB-lxwO88JYP48BZsj9mO8tkpY0hMcFDgpI__cXAKRpVJvDGBAA1ubnlhuubwHNxJz1VSw63ZY5VwabbCNUtl9Kuc9IHXGAlTtjLu32fGfy2Z9NXKbKORbIGXjNa\",\"width\":\"31\"}},\"1\":{\"type\":\"image\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"62B7931E341F11EE9D4302C0B41BC903\",\"height\":82.75862068965517,\"id\":588083,\"is_video\":false,\"legend\":\"{\\\"blocks\\\":null,\\\"entityMap\\\":null}\",\"mime\":\"image/png\",\"nestedSelector\":null,\"original_name\":\"collapse.png\",\"placeholder\":\"https://content.protocols.io/files/fvgrbbujp.png\",\"shadow\":false,\"source\":\"https://content.protocols.io/files/t8jvbbujp.jpg\",\"webp_source\":\"https://content.protocols.io/files/t8jubbujp.webp\",\"width\":100}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5","cases":[],"critical":null},{"id":1277305,"guid":"81D6A4E0374D11EC83D957C59EDD8240","previous_id":1277304,"previous_guid":"7CD64770374D11EC83D957C59EDD8240","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"cegbm\",\"text\":\"Now select only the taxa you want to constrain and make those a single polytomy using the arrow cursor tool (they should be separate from the other polytomy which is the rest of the tree). The tree should now have a total of 2 polytomies. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":11,\"length\":35},{\"style\":\"italic\",\"offset\":64,\"length\":16},{\"style\":\"bold\",\"offset\":90,\"length\":12}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e8olv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1s9t\",\"text\":\"Reminder: the outgroup is not separated out--it can be in the polytomy with the remaining taxa that you are not intending to constrain. Save again just in case (remember filename should now be \\\"_constraint.nex\\\").\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":1277306,"guid":"BD2D8810374D11EC83D957C59EDD8240","previous_id":1277305,"previous_guid":"81D6A4E0374D11EC83D957C59EDD8240","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"dps1p\",\"text\":\"Select Tree \\u003e Store tree in other block as and give your tree a name (e.g. \\\"constraint\\\"). Then Store in new tree block   and name the new tree block. Select switch to new tree and select your new tree. To export this, click File \\u003e Export \\u003e Export Nexus tree file from tree source \\u003e stored trees. Make sure you select the tree you want (constraint). Check the box to include taxa block, then click Export \\u003e Save. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":7,\"length\":35},{\"style\":\"bold\",\"offset\":95,\"length\":25},{\"style\":\"bold\",\"offset\":157,\"length\":18},{\"style\":\"bold\",\"offset\":224,\"length\":70},{\"style\":\"bold\",\"offset\":366,\"length\":18},{\"style\":\"bold\",\"offset\":397,\"length\":13}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"7","cases":[],"critical":null},{"id":1277308,"guid":"CA030DD0374D11EC83D957C59EDD8240","previous_id":1277306,"previous_guid":"BD2D8810374D11EC83D957C59EDD8240","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"a2af6\",\"text\":\"You should be able to open the newly saved \\\"_constraint.nex\\\" file in FigTree. If not, make a copy  of this file outside mesquite (should be a .nex file) and add the extension .tre instead (works on Mac OS only). Now open the \\\"_constraint.tre\\\" tree in FigTree.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"38fr7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"958oa\",\"text\":\"Once you have confirmed that Mesquite/FigTree saved the topology you wanted, export as a .nex file again from FigTree. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"8","cases":[],"critical":null},{"id":1277310,"guid":"D861F2B0374D11EC83D957C59EDD8240","previous_id":1281943,"previous_guid":"0F70E9303CC311EC92D8499BFAA7817A","section":"\u003cp\u003eRAxML Likelihood Estimation\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"3550c\",\"text\":\"Make sure you have the following settings in the RAxML GUI: RAxML-ng, ML Tree Inference, 1 run. Select the same outgroup that you used in your unconstrained analysis. Change the output name and folder to something that makes sense (e.g. \\\"_RAxMLconstrained\\\"). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":60,\"length\":34}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4q6et\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e3q3q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dq43c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"notes\",\"mutability\":\"\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":67,\"offset\":0,\"style\":\"italic\"}],\"key\":\"pft8\",\"text\":\"Note: You do NOT need to bootstrap anything at this point in RAxML.\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"13","cases":[],"critical":null},{"id":1277312,"guid":"EA8A62B0374D11EC83D957C59EDD8240","previous_id":1281938,"previous_guid":"4138DB903CC211EC92D8499BFAA7817A","section":"\u003cp\u003eRAxML Likelihood Estimation\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8aht5\",\"text\":\"For this part of the protocol, you will need the data and partitions you used to create your original/unconstrained tree, i.e.:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"13dpm\",\"text\":\"your concatenated dataset (nucleotide or amino acid)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1our4\",\"text\":\"your partitions for your concatenated dataset (if applicable)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6g0uh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"cj5q0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"notes\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":237,\"offset\":0,\"style\":\"italic\"}],\"key\":\"3u0uq\",\"text\":\"If you used RAxML-ng and the GUI 2.0 to make your unconstrainted tree, your concatenated file will be generated for you, and should end in  \\\"concat.txt\\\". Your partitions file should also be generated for you, ending in \\\"concat.part.txt\\\".\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"10","cases":[],"critical":null},{"id":1277340,"guid":"70EE87A0374E11EC83D957C59EDD8240","previous_id":1277310,"previous_guid":"D861F2B0374D11EC83D957C59EDD8240","section":"\u003cp\u003eRAxML Likelihood Estimation\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"4h733\",\"text\":\"Run RAxML. The resulting \\\"best tree\\\" will be the constrained tree that you test against your \\\"_original\\\" unconstrained tree for the AU test. Name it something like \\\"_RAxMLconstrained\\\" so you can tell the difference between this and the constraint tree you made in Mesquite. To make the tree easier to open in FigTree, add the .tre extension to the end of the filename.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":3}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"14","cases":[],"critical":null},{"id":1277341,"guid":"85D68CD0374E11EC83D957C59EDD8240","previous_id":1277340,"previous_guid":"70EE87A0374E11EC83D957C59EDD8240","section":"\u003cp\u003eCombining Tree Files\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"fpkbh\",\"text\":\"Ensure both your \\\"_original\\\" and your new \\\"_RAxMLconstrained\\\" trees are in Nexus format. You can do this by opening them in FigTree and exporting them as Nexus files as in this step:   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":183,\"length\":1}],\"data\":{}},{\"key\":\"3c4gt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"gotostep\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"634688E03CEF11EC8A145BEBBA8FB9C9\",\"id\":0,\"step_guid\":\"0A7BCB10374C11EC8D6BE5F4AD2C1254\",\"title\":\"\"}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"15","cases":[],"critical":null},{"id":1277342,"guid":"14AE8B10374F11EC83D957C59EDD8240","previous_id":1277341,"previous_guid":"85D68CD0374E11EC83D957C59EDD8240","section":"\u003cp\u003eCombining Tree Files\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"9ckp4\",\"text\":\"Open one of your trees in a text editor (e.g. SublimeText). Resave it as \\\"_combined.nex\\\" before you begin to make changes.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dhttd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5g78o\",\"text\":\"Make sure the label (probably \\\"tree_1\\\" in the text file) is edited to reflect which tree this is. For ex: if you opened your constrained tree first and renamed the file, make sure \\\"tree_1\\\" in this file is replaced with \\\"constrained\\\". \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bpqr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"16","cases":[],"critical":null},{"id":1277343,"guid":"2543B0E0374F11EC83D957C59EDD8240","previous_id":1277342,"previous_guid":"14AE8B10374F11EC83D957C59EDD8240","section":"\u003cp\u003eCombining Tree Files\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ftukg\",\"text\":\"Open your other tree in a text editor. Copy and paste the tree notation (with the name, be sure to edit it to reflect which tree it is like you did in the previous step) into your \\\"_combined.nex\\\" file. Be sure to appropriately label this tree as well (this will be \\\"original\\\" if you opened the constrained first in the above step). Save and close your \\\"_combined.nex\\\" file. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"17","cases":[],"critical":null},{"id":1277608,"guid":"EE0D55D0377711EC8A9E9705CBDAD7DC","previous_id":1468561,"previous_guid":"93B81C10289811ED9A2D935152A7D73F","section":"\u003cp\u003eCombining Tree Files\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"9d5i8\",\"text\":\"Open your \\\"_combined.tre\\\" file in FigTree to check that the trees look as expected. Export the tree in Newick format (same procedure as exporting for nexus, but select newick from the dropdown menu and \\\"select all trees\\\") with a .txt extension at the end of the filename. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":168,\"length\":6}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"19","cases":[],"critical":null},{"id":1277609,"guid":"21AFB810377811EC8A9E9705CBDAD7DC","previous_id":1281951,"previous_guid":"623FE0603CC511EC92D8499BFAA7817A","section":"\u003cp\u003eRunning the AU Test\u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"f5g78\",\"text\":\"It's easiest to proceed if your terminal working directory is the same one that IQTree is in. For ease of use, open the IQTree folder on your computer and place a copy  of the following files:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9vof\",\"text\":\"your combined trees in newick format (\\\"_combined.txt\\\")\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3rsf3\",\"text\":\"your nucleotide dataset (concatenated) in phylip format (\\\"nuc_concat.phy\\\")\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"15d7u\",\"text\":\"your partitions for above dataset (\\\"partitions.txt\\\" or \\\"partitions.nex\\\")\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ajtku\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"fpjct\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"notes\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":165,\"offset\":0,\"style\":\"italic\"},{\"length\":15,\"offset\":79,\"style\":\"bold\"}],\"key\":\"3a89e\",\"text\":\"Alternatively, you can keep your files where they are if you make sure you use absolute paths to all files and programs involved (including IQTree, your files, etc).\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"23","cases":[],"critical":null},{"id":1277610,"guid":"6C6C1AB0377811EC8A9E9705CBDAD7DC","previous_id":1277609,"previous_guid":"21AFB810377811EC8A9E9705CBDAD7DC","section":"\u003cp\u003eRunning the AU Test\u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"64j\",\"text\":\"Use the following code to run the AU Test with a likelihood approximation:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bro22\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c29dj\",\"text\":\"For partitioned data that uses a single model:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":4,\"length\":42}],\"entityRanges\":[],\"data\":{}},{\"key\":\"25q0f\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"a0tlm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9bch\",\"text\":\"For partitioned data using multiple models (remember you will need the nexus-style partition file from Steps 18-20 for this):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":4,\"length\":39}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2f1uq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bfc7q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c80c1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"2sfu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"can_edit\":1,\"command_name\":\"\",\"description\":\"Note: GTR+I+G is an example model. Other models can be specified in the format MODEL+FreqType+RateType\",\"guid\":\"47C38B57341F11EE9D4302C0B41BC903\",\"name\":\"iqtree -s nuc_concat.phy -m GTR+G+I -q partitions.txt -z combined.txt -n 0 -zb 10000 -au\",\"os_name\":null,\"os_version\":null}},\"1\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"can_edit\":1,\"command_name\":\"\",\"description\":null,\"guid\":\"47C38B9B341F11EE9D4302C0B41BC903\",\"name\":\"iqtree -s nuc_concat.phy -spp partitions.nex -z combined.txt -n 0 -zb 10000 -au\",\"os_name\":null,\"os_version\":null}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"24","cases":[],"critical":null},{"id":1277611,"guid":"B237B040377811EC8A9E9705CBDAD7DC","previous_id":1277610,"previous_guid":"6C6C1AB0377811EC8A9E9705CBDAD7DC","section":"\u003cp\u003eRunning the AU Test\u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"3d2fv\",\"text\":\"The results of the test are contained in the file ending in \\\".iqtree\\\".\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"25","cases":[],"critical":null},{"id":1281938,"guid":"4138DB903CC211EC92D8499BFAA7817A","previous_id":1277308,"previous_guid":"CA030DD0374D11EC83D957C59EDD8240","section":"\u003cp\u003eFile Preparation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6bsa4\",\"text\":\"Drag this file (\\\"_constraint.nex\\\") into a text editor (e.g. SublimeText) and remove everything except the tree notation/newick format (the portion in parentheses). See below for an example of what this looks like. Save this as \\\"_constraint.txt\\\". in case the .nex version fails in RAxML. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"83hkb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bpew\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7jeth\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"image\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"62B7936F341F11EE9D4302C0B41BC903\",\"height\":58,\"id\":588085,\"is_video\":false,\"legend\":\"{\\\"blocks\\\":null,\\\"entityMap\\\":null}\",\"mime\":\"image/png\",\"nestedSelector\":null,\"original_name\":\"treenotation.png\",\"placeholder\":\"https://content.protocols.io/files/fvgtbbujp.png\",\"shadow\":false,\"source\":\"https://content.protocols.io/files/t8jxbbujp.jpg\",\"webp_source\":\"https://content.protocols.io/files/t8jwbbujp.webp\",\"width\":550}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9","cases":[],"critical":null},{"id":1281940,"guid":"B95BDCD03CC211EC92D8499BFAA7817A","previous_id":1277312,"previous_guid":"EA8A62B0374D11EC83D957C59EDD8240","section":"\u003cp\u003eRAxML Likelihood Estimation\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6rb5s\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"mln1\",\"text\":\"Open the RAxML GUI and ensure you're set to run using RAxML-ng. Load in your concatenated dataset (concat.txt) file from your original/unconstrained phylogenetic analysis in RAxML. Load in your partition file (part.txt) from that analysis as well.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"11","cases":[],"critical":null},{"id":1281943,"guid":"0F70E9303CC311EC92D8499BFAA7817A","previous_id":1281940,"previous_guid":"B95BDCD03CC211EC92D8499BFAA7817A","section":"\u003cp\u003eRAxML Likelihood Estimation\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6m9j3\",\"text\":\"Now you will import the constraint tree file into RAxMLng as a multifurcating constraint. You can do this in the GUI by selecting (at the top menu) Analysis \\u003e Enforce Constraint \\u003e Use multifurcating constraint. When prompted, open your constraint tree file in either .nex or .txt format (either should work, but if .nex fails, try .txt).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":24,\"length\":10},{\"style\":\"bold\",\"offset\":63,\"length\":25},{\"style\":\"bold\",\"offset\":148,\"length\":61}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"12","cases":[],"critical":null},{"id":1281949,"guid":"CD28EA303CC411EC92D8499BFAA7817A","previous_id":1277608,"previous_guid":"EE0D55D0377711EC8A9E9705CBDAD7DC","section":"\u003cp\u003eFor Multiple Models: Prepare Partition File \u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"esmc5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ob1s\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"3kf78\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"notes\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":175,\"offset\":0,\"style\":\"italic\"}],\"key\":\"5g08o\",\"text\":\"If you plan on only applying a SINGLE model to your data (with or without partitions) for the AU test, ignore this section. You  can proceed with a RAxML-style partition file.\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"cc5in\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":236,\"offset\":0,\"style\":\"italic\"}],\"key\":\"17ed6\",\"text\":\"If you would like to apply different models to different partitions for the AU test, you will need to create the more flexible nexus-style partition file (instead of the RAxML-style). Proceed with this section for detailed instructions.\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"20","cases":[],"critical":null},{"id":1281950,"guid":"09255C303CC511EC92D8499BFAA7817A","previous_id":1281949,"previous_guid":"CD28EA303CC411EC92D8499BFAA7817A","section":"\u003cp\u003eFor Multiple Models: Prepare Partition File \u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8q9tk\",\"text\":\"Open your RAxML-style partition file in a text editor. You will need to convert it to a nexus-style partition file (example below). This file constrains a SETS block with CharSet and CharPartition commands to specify individual genes and the partition, respectively.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":155,\"length\":4},{\"style\":\"bold\",\"offset\":171,\"length\":7},{\"style\":\"bold\",\"offset\":183,\"length\":13}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dp1ng\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"wswig\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bofeb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"f484u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"image\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"62B77A4A341F11EE9D4302C0B41BC903\",\"height\":102,\"id\":588087,\"is_video\":false,\"legend\":\"{\\\"blocks\\\":[{\\\"key\\\":\\\"5pfft\\\",\\\"text\\\":\\\"Example of nexus-style partition file. HKY+G model is applied to the first partition, while GTR+I+G is applied to the second partition.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\"mime\":\"image/png\",\"nestedSelector\":null,\"original_name\":\"nexus_partitions.png\",\"placeholder\":\"https://content.protocols.io/files/fvehbbujp.png\",\"shadow\":false,\"source\":\"https://content.protocols.io/files/t8jzbbujp.jpg\",\"webp_source\":\"https://content.protocols.io/files/t8jybbujp.webp\",\"width\":550}},\"1\":{\"type\":\"notes\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":216,\"offset\":0,\"style\":\"italic\"}],\"key\":\"7m6bk\",\"text\":\"It is very easy to make typos in this file (missing or extra semicolons, commas, spaces, etc), so if you run into any errors during your AU test and are unsure what the issue is, double/triple-check this file first. \",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"21","cases":[],"critical":null},{"id":1281951,"guid":"623FE0603CC511EC92D8499BFAA7817A","previous_id":1281950,"previous_guid":"09255C303CC511EC92D8499BFAA7817A","section":"\u003cp\u003eFor Multiple Models: Prepare Partition File \u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"eapo5\",\"text\":\"Save your nexus-style partition file as a .nex file (e.g. \\\"partitions.nex\\\")\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eo1uv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"jru0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"notes\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[{\"key\":0,\"length\":43,\"offset\":206}],\"inlineStyleRanges\":[{\"length\":298,\"offset\":0,\"style\":\"italic\"}],\"key\":\"a86k5\",\"text\":\"IQTree also allows combining sub-alignments from different alignment files, which is helpful if you want to combine mixed data (e.g. DNA and protein) in a single analysis. You can see an example of this at http://www.iqtree.org/doc/Advanced-Tutorial (search \\\"Partitioned analysis with mixed data\\\").\",\"type\":\"unstyled\"}],\"entityMap\":{\"0\":{\"data\":{\"guid\":\"324BB20F3CC611EC86E10A58A9FEAC02\",\"url\":\"http://www.iqtree.org/doc/Advanced-Tutorial\"},\"mutability\":\"\",\"type\":\"link\"}}}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"22","cases":[],"critical":null},{"id":1282731,"guid":"A3A0B8103CE111EC8A145BEBBA8FB9C9","previous_id":1277294,"previous_guid":"03BE7B60374C11EC8D6BE5F4AD2C1254","section":"\u003cp\u003ePrograms and Dependencies\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"2s5jg\",\"text\":\"This protocol assumes you have already completed initial tree inference. It is designed to test another topology (constrained) against your unconstrained analysis. Before beginning this protocol, you will need:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8a4dp\",\"text\":\" a copy of your unconstrained tree (.tre file)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9miid\",\"text\":\"the data you used to create the unconstrained tree (.phy file, probably nucleotide data)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7mvk4\",\"text\":\"knowledge/list of model(s) applied to your data\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e6jrn\",\"text\":\"if you're running a partitioned analysis (multiple genes or data types), you will also need a partition file (.txt or .nex file)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"2","cases":[],"critical":null},{"id":1468561,"guid":"93B81C10289811ED9A2D935152A7D73F","previous_id":1277343,"previous_guid":"2543B0E0374F11EC83D957C59EDD8240","section":"\u003cp\u003eCombining Tree Files\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"d76ei\",\"text\":\"When you save this tree in newick format, you'll lose the tree names youo created. This step will help you create a record or which tree was which so you can check back later if needed. Re-save tthe combined.nex file you just created as \\\"_combined.tre\\\". Now delete everything except the tree notation (look for parentheses/at example in this step :   ). This includes the tree names and any other symbols, except the parentheses involved with the trees themselves (do not delete those) and the semicolon after each tree. Now if you forget which tree is which, you know they're in the same order in this file as in the \\\"_combined.nex\\\"  file and can check back there if needed.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":468,\"length\":3}],\"entityRanges\":[{\"key\":0,\"offset\":349,\"length\":1}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"gotostep\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"F650D1B3289811ED9AC90A58A9FEAC02\",\"id\":0,\"step_guid\":\"4138DB903CC211EC92D8499BFAA7817A\",\"title\":\"\"}}}}","data":null,"protocol_id":54586,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"18","cases":[],"critical":null}],"template_id":5,"title":"AU Test with IQTree ","title_html":"\u003cp\u003eAU Test with IQTree \u003c/p\u003e","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"µg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"°К","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"μV","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (µM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"µm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":207,"type_id":3,"name":"V","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"au-test-with-iqtree-bzi2p4ge","url":"https://www.protocols.io/view/au-test-with-iqtree-bzi2p4ge","version_class":54586,"version_data":{"id":0,"code":"bzi2p4ge","version_class":54586,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"parent_owner":{"name":"","affiliation":null,"affiliation_url":null,"username":"","link":null,"user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0}},"merge_request":null},"version_id":0,"version_uri":"au-test-with-iqtree-e6nvw5w7zvmk/v1","versions":[{"id":54586,"title":"AU Test with IQTree ","title_html":"\u003cp\u003eAU Test with IQTree \u003c/p\u003e","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.e6nvw5w7zvmk/v1","uri":"au-test-with-iqtree-bzi2p4ge","published_on":1749844817,"modified_on":1749844817,"version_class":54586,"version_id":0,"version_code":"bzi2p4ge","version_uri":"au-test-with-iqtree-e6nvw5w7zvmk/v1","created_on":1635356003,"categories":null,"type_id":1,"creator":{"name":"Marina McCowin","affiliation":"UCSD- Scripps Institution of Oceanography","affiliation_url":"","username":"marina-mccowin2","link":"","user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0}},"stats":{"number_of_comments":7,"last_comment_time":1661890329}}],"warning":""}