{"access":{"can_view":true,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":false,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"authors":[{"name":"Moritz Negwer","affiliation":"Radboudumc Nijmegen","affiliation_url":null,"username":"m4yle1w1w105vle1","link":null,"image":{"source":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","placeholder":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","webp_source":""},"note":"","is_verified_user":true,"orcid":""}],"before_start":"","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1649637181,"creator":{"name":"Moritz Negwer","affiliation":"","affiliation_url":null,"username":"m4yle1w1w105vle1","link":null,"image":{"source":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","placeholder":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","webp_source":""},"badges":[{"id":3,"name":"Power author!","image":{"source":"/img/badges/silver.svg","placeholder":"/img/badges/silver.svg"}}],"affiliations":[]},"description":"{\"blocks\":[{\"key\":\"ct9mf\",\"text\":\"Supplemementary protocol for our submitted paper \\\"FriendlyClearMap: An optimized toolkit for mouse brain mapping and analysis\\\".\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bk8n2\",\"text\":\"This protocol describes how to pre-process cell locations in mouse brains (in different reference atlases) and visualize them using BrainRender (Claudi et al,. eLife 2021). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"","document":"","documents":[],"doi":"dx.doi.org/10.17504/protocols.io.dm6gpbdwdlzp/v1","doi_status":2,"ethics_statement":null,"fork_id":null,"fork_info":null,"forks":[],"funders":[],"groups":[],"guid":"EE874780B92E11EC981E59D6DC04D954","guidelines":"","has_references":true,"has_step_reagents":false,"has_versions":false,"id":60561,"image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"image_attribution":"","in_trash":false,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":false,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":902298,"journal":null,"journals":[],"keywords":null,"last_modified":1684444163,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"","public":true,"public_fork_note":"","published_on":1684444163,"references":[{"step_number":"1","field_name":null,"title":"Visualizing anatomically registered data with brainrender.","doi":"https://doi.org/pii:e65751.10.7554/eLife.65751","authors":"Claudi F, Tyson AL, Petrucco L, Margrie TW, Portugues R, Branco T"}],"related_equipments":[],"related_materials":[],"reserved_doi":"","retraction_reason":null,"samples":{},"shared_access_id":16,"show_comparison":false,"sign_info":null,"state_version_id":1680,"stats":{"is_voted":false,"number_of_views":40,"number_of_steps":8,"number_of_bookmarks":0,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it's working"},"steps":[{"id":1380499,"guid":"F5D676F0B92E11EC981E59D6DC04D954","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eSetup\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"7is9u\",\"text\":\"After you have generated your cell table with Clearmap 1 or 2, do the following: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4gd4s\",\"text\":\"(Note this has only been tested on Ubuntu Linux 20.04 and 21.10) \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":1,\"length\":4}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9kpj9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eqbl5\",\"text\":\"1. If you haven't, install Conda and Spyder \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bivat\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6lopg\",\"text\":\"https://docs.anaconda.com/anaconda/install/linux/\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":49}],\"data\":{}},{\"key\":\"9fhrb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"60erj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eut2c\",\"text\":\"Create a new conda environment:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7irg\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"2skg\",\"text\":\"(this might take several minutes)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ap1bg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ckfsi\",\"text\":\"Install Spyder with all dependendcies via conda:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3or77\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"52hh3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3nqkk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5fa1e\",\"text\":\"2. Install Brainrender from here: https://github.com/brainglobe/brainrender\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":4,\"offset\":34,\"length\":41}],\"data\":{}},{\"key\":\"pc1n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":5,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"4q6jc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"28std\",\"text\":\"3. Install Elastix (e.g. on Ubuntu / Debian Linux): \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"969vm\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":6,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ajko2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2aqqr\",\"text\":\"4. Download the brainrender script from github: https://github.com/MoritzNegwer/FriendlyClearMap-scripts/tree/main/Young_Mouse_Atlas_Alignments\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":7,\"offset\":48,\"length\":95}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"EA6D69A3B93111ECB45C0A58A9FEAC02\",\"url\":\"https://docs.anaconda.com/anaconda/install/linux\"}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"d7m9q\",\"text\":\"sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"2\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1i0e9\",\"text\":\"conda create --name brainrender\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3kil7\",\"text\":\"conda activate brainrender\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"75ehj\",\"text\":\"conda update --all\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"3\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4e3gj\",\"text\":\"conda install spyder\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"4\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"2E26B12DB92F11ECB45C0A58A9FEAC02\",\"url\":\"https://github.com/brainglobe/brainrender\"}},\"5\":{\"type\":\"citation\",\"mutability\":\"IMMUTABLE\",\"data\":{\"authors\":\"Claudi F, Tyson AL, Petrucco L, Margrie TW, Portugues R, Branco T\",\"can_edit\":1,\"date\":\"1616112000\",\"doi\":\"https://doi.org/pii:e65751.10.7554/eLife.65751\",\"guid\":\"4F01C400B92F11EC981E59D6DC04D954\",\"id\":1671,\"journal\":\"eLife\",\"protocol_id\":\"0\",\"title\":\"Visualizing anatomically registered data with brainrender.\"}},\"6\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"prt0\",\"text\":\"sudo apt-get update \\u0026\\u0026 sudo apt-get install elastix\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"7\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"34D657D1DA0F11EC90060A58A9FEAC02\",\"url\":\"https://github.com/MoritzNegwer/FriendlyClearMap-scripts/tree/main/Young_Mouse_Atlas_Alignments\"}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1","cases":[],"critical":null},{"id":1380500,"guid":"58E46F90B92F11EC981E59D6DC04D954","previous_id":1380499,"previous_guid":"F5D676F0B92E11EC981E59D6DC04D954","section":"\u003cp\u003eTransform your data to CCF3 \u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"63trt\",\"text\":\"If you used a different atlas from CCF3 (e.g. when using Clearmap 1 or one of the young mouse atlases), you need to transform it to CCF3 space. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ua4m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eo3j3\",\"text\":\"We have pre-computed a number of transforms for CCF2 (=CM1) and the young mouse atlases from the Kim lab, using Elastix. Download them from github here: XXX_needs_to_be_added\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dja56\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1shr3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"2","cases":[],"critical":null},{"id":1380501,"guid":"34E98CE0B93111EC981E59D6DC04D954","previous_id":1380500,"previous_guid":"58E46F90B92F11EC981E59D6DC04D954","section":"\u003cp\u003eVisualize neurons in the brain with Brainrender\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"3aomc\",\"text\":\"Adapt the visualize_brainrender script as follows: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5qqmk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"28r54\",\"text\":\"1. Adapt the transformix_path variable to your own. Check in the command line: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"17pdk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bvb61\",\"text\":\"and take the first entry, e.g. \\\"/usr/bin/transformix\\\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5l012\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6m70l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"235ih\",\"text\":\"2. Make a list of your mice in the target_mice list, pointing to the cellls_transformed_to_Atlas_aligned.npy in each folder:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"av8dv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f4a7e\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9ukkr\",\"text\":\"The colors are defined via the myterial package. Refer here for the color palette: https://github.com/FedeClaudi/myterial \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":83,\"length\":38}],\"data\":{}},{\"key\":\"19bk4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ionk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8sk6b\",\"text\":\"3. Define the target_folder. If it does not exist yet, it will be created when running the script. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"20b3n\",\"text\":\"Note: If it does contain images already, those will be overwritten during the process! \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":4}],\"entityRanges\":[],\"data\":{}},{\"key\":\"351r5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"46v61\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7gvce\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ngp5\",\"text\":\"4. Define the transformation you want to use to get your cells to CCF3 coordinate space (refer to step 2 above).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3nufa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8j068\",\"text\":\"for Clearmap 1: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ecpn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":4,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"diibp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d2nrj\",\"text\":\"for young mouse atlases, a series is needed. In this case adapt the location and the atlas in question (here: P21):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dha6n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":5,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ccig1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1l0rr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ib8s\",\"text\":\"5. Adapt the regions you want to make specific visualizations for (optional). If you do, the script will create one image for each region. An easy way to check for the regions and the acronyms is via the 3D Atlas Viewer of the Allen Brain Institute. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":6,\"offset\":204,\"length\":15}],\"data\":{}},{\"key\":\"c1vj4\",\"text\":\"We used the following list: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7mhmv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":7,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9nt4u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9d43d\",\"text\":\"6. Adapt the camera position. The default camera can be found: brainrender_folder/brainrender/cameras.py \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e3ba6\",\"text\":\"If you want to define your own, run the following code in spyder (after adapting the brainrender_folder):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5kf59\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":8,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"338c4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cqsh2\",\"text\":\"Subsequently, a window with an empty mouse brain silhouette should open. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"56n3m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"chtr6\",\"text\":\"Note: If it does not appear, brainrender´s default setting could be set to offscreen rendering. Change the last line of brainrender_folder/brainrender/settings.py from OFFSCREEN = False to OFFSCREEN = True\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":4}],\"entityRanges\":[],\"data\":{}},{\"key\":\"93nak\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"av86h\",\"text\":\"Move the brain around until you like the angle, then type \\\"C\\\" to export the current camera parameters to your spyder console. It should looke like this: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7hcp9\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":9,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"19rdq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fvotj\",\"text\":\"Reformat them to this format to use in the script: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b3r20\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":10,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"5147i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ccka\",\"text\":\"Define the camera to be used in the script as follows (boldened part):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b24f7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":11,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"4fiho\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"atnfe\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"12htj\",\"text\":\"7. If you want to render only one hemisphere, set render_hemisphere to True (boldened part):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"vvbr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ed5r3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":12,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"8a93b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5l0hd\",\"text\":\"whereis transformix\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2iqgj\",\"text\":\"target_mice = [[\\\"path_to_my_mouse_1/cells_transformed_to_Atlas_aligned.npy\\\", myterial.black], \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"cidan\",\"text\":\"[\\\"path_to_my_mouse_2/cells_transformed_to_Atlas_aligned.npy\\\", myterial.black]\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9pbtv\",\"text\":\"]\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"10\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"19ef1\",\"text\":\"techpaper_cam_01 = {\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"egia6\",\"text\":\"    \\\"pos\\\": (2093, 2345, -49727),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"an6rm\",\"text\":\"    \\\"viewup\\\": (0, -1, 0),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"39vje\",\"text\":\"    \\\"clippingRange\\\": (33881, 52334),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8s636\",\"text\":\"    \\\"focalPoint\\\": (6888, 3571, -5717),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"frqpg\",\"text\":\"    \\\"distance\\\": 44288,\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"evkc7\",\"text\":\"    }\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"11\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4d13t\",\"text\":\"for mouse in target_mice:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3jqr3\",\"text\":\"    #transform to CCF3 \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"cfpc0\",\"text\":\"    cells = transform_points(mouse[0],target_transformation)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"14s47\",\"text\":\"    #multiply to get to µm value(assuming atlas has 25µm voxels)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"e7jt3\",\"text\":\"    cells = cells*25\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7mcnt\",\"text\":\"    #flip axes because of CCF2. Comment out if using any other atlas\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7ung2\",\"text\":\"    cells = flip_CCF2_axes(cells)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f5php\",\"text\":\"    #add to the cells_all array (uncomment if you want to create a group average)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7n992\",\"text\":\"    #cells = np.concatenate((cells,cells),axis=0)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"14u6t\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"fa380\",\"text\":\"    for region in target_regions:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":16,\"offset\":76,\"style\":\"bold\"}],\"key\":\"2lu6p\",\"text\":\"        render_screenshot (target_folder, cells, mouse[0], mouse[1], region,techpaper_cam_01,render_hemisphere=True)\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"12\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":22,\"offset\":85,\"style\":\"bold\"}],\"key\":\"9ssh6\",\"text\":\"render_screenshot (target_folder, cells, mouse[0], mouse[1], region,techpaper_cam_01,render_hemisphere=True)\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"2\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"1EE74BC0B93311ECB45C0A58A9FEAC02\",\"url\":\"https://github.com/FedeClaudi/myterial\"}},\"3\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"81rgg\",\"text\":\"target_folders = [\\\"this_is_where_I_want_my_images_to_end_up\\\"]\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"4\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"309m3\",\"text\":\"target_transformation = [\\\"downloaded_transformation_location/elastix_files/Par_rotate90degaroundX_Clearmap1.txt\\\"]\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"5\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3jue\",\"text\":\"target_transformation = [\\\"downloaded_transformation_location/elastix_files/Par_rotate90degaroundX_CCF3_nrrd_directions.txt\\\",\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8fl93\",\"text\":\"                         \\\"downloaded_transformation_location/Kim_ref_P21_v2_brain_CCF3/TransformParameters.0.txt\\\", \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"el9ih\",\"text\":\"                         \\\"downloaded_transformation_location/Kim_ref_P21_v2_brain_CCF3/TransformParameters.1.txt\\\"]\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"6\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"BA639890B93411EC8971231C2F9C10A7\",\"url\":\"https://connectivity.brain-map.org/3d-viewer?v=1\"}},\"7\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"75iln\",\"text\":\"target_regions = [\\\"grey\\\", #All brain\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2cs3d\",\"text\":\"                  \\\"HIP\\\", #Hippocampal region\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"22e4i\",\"text\":\"                  \\\"Isocortex\\\", #Cortex proper\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b9tq9\",\"text\":\"                  \\\"CNU\\\", #Striatum + GP\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a237e\",\"text\":\"                  \\\"TH\\\", #Thalamus\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4e0c\",\"text\":\"                  \\\"CTXsp\\\", #cortical subplate \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2b2er\",\"text\":\"                  \\\"BLA\\\", #Basolateral Amygdala\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"17i6a\",\"text\":\"                  \\\"MB\\\", #Superior / inferior colliculus\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a65ra\",\"text\":\"                  \\\"SSp-bfd\\\", #S1 Barrel Field\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"19kin\",\"text\":\"                  \\\"SS\\\", #S1 \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8s11g\",\"text\":\"                  \\\"AUD\\\", #A1\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bguqk\",\"text\":\"                  \\\"VIS\\\" #V1\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"55q5k\",\"text\":\"                  ]\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"8\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ddb1e\",\"text\":\"import sys\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"546n\",\"text\":\"sys.path.append('brainrender_folder/')\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"c0c2k\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"comss\",\"text\":\"# Import variables\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1979o\",\"text\":\"from brainrender import * # \\u003c- these can be changed to personalize the look of your renders\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"fojl\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bu8kd\",\"text\":\"# Import brainrender classes and useful functions\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5kllb\",\"text\":\"from brainrender import Scene\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6cdcb\",\"text\":\"scene = Scene (title=None,screenshots_folder=None,inset=None)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a7575\",\"text\":\"scene.render()\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"9\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1p7fr\",\"text\":\"Camera parameters:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6lec6\",\"text\":\"    {\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"cfsp2\",\"text\":\"     'pos': (7572, -1308, -49730),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ad7i8\",\"text\":\"     'viewup': (0, -1, 0),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2apfe\",\"text\":\"     'clippingRange': (32602, 59249),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"evdse\",\"text\":\"   }\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6i4p9\",\"text\":\"Additional, (optional) parameters:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6fu7h\",\"text\":\"     'focalPoint': (6888, 3571, -5717),\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6m6k2\",\"text\":\"     'distance': 44288,\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null},{"id":1380502,"guid":"0E27A580B93411EC8971231C2F9C10A7","previous_id":1380501,"previous_guid":"34E98CE0B93111EC981E59D6DC04D954","section":"\u003cp\u003eVisualize neurons in the brain with Brainrender\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ehm18\",\"text\":\"Run the script. If all goes according to plan, you should get a series of images from each mouse brain, one per brain region defined under substep 5. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5dfpg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cchcb\",\"text\":\"If you suspect that the cell coordinates are wrong, run the following code in the spyder command line: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dd57s\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"aet7n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ijif\",\"text\":\"This should render the brain without any regions cropping and reveal the full extent of your cells. If for example all cells are rendered outside of the CCF3 mouse brain, then you will need to adapt the transformation or the cells, e.g. refer to the flip_CCF2_axes function. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"42st7\",\"text\":\"cells = transform_points(target_mice[0][0],target_transformation)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":2,\"offset\":61,\"style\":\"bold\"}],\"key\":\"7thtk\",\"text\":\"render_screenshot (target_folder, cells, mouse[0], mouse[1], \\\"\\\",techpaper_cam_01)\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"4","cases":[],"critical":null},{"id":1380504,"guid":"8D58EDE0B93A11ECB7EB435C4326014E","previous_id":1380502,"previous_guid":"0E27A580B93411EC8971231C2F9C10A7","section":"\u003cp\u003eRender cell densities \u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"d72p1\",\"text\":\"If you want to render the points densities (such as in Fig 2 c / f), do the following: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f56aj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"75et4\",\"text\":\"For densities for individual brains, simply adapt the render_screenshot call with render_densities:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e21uc\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"1hg9a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":21,\"offset\":108,\"style\":\"bold\"}],\"key\":\"1mtt7\",\"text\":\"render_screenshot (target_folder, cells, mouse[0], mouse[1], region,techpaper_cam_01,render_hemisphere=True,render_densities=True)\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5","cases":[],"critical":null},{"id":1380515,"guid":"F248C910B93E11ECB7EB435C4326014E","previous_id":1380504,"previous_guid":"8D58EDE0B93A11ECB7EB435C4326014E","section":"\u003cp\u003eRender cell densities \u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ajfju\",\"text\":\"If you want to sum all densities across a group, uncomment the following line and move the next for loop out of the for mouse [...] loop: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cr7c9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a984h\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"2hkv0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cd7vu\",\"text\":\"Then, adapt the name_path. The end_folder is the name the resulting average density will have. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"32aor\",\"text\":\"(Note that this folder does not need to exist, this is just a workaround to create a name). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c2865\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9dlov\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dgt3e\",\"text\":\"for mouse in target_mice:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3dvb5\",\"text\":\"    #transform to CCF3 \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f9a8v\",\"text\":\"    cells = transform_points(mouse[0],target_transformation)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"c6a6u\",\"text\":\"    #multiply to get to µm value(assuming atlas has 25µm voxels)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"e227h\",\"text\":\"    cells = cells*25\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"fcstf\",\"text\":\"    #flip axes because of CCF2. Comment out if using any other atlas\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"alhdr\",\"text\":\"    cells = flip_CCF2_axes(cells)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1o58q\",\"text\":\"    #add to the cells_all array (uncomment if you want to create a group average)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":44,\"offset\":4,\"style\":\"bold\"}],\"key\":\"95s3i\",\"text\":\"    cells = np.concatenate((cells,cells),axis=0)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"fuvhe\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":29,\"offset\":0,\"style\":\"bold\"}],\"key\":\"iifi\",\"text\":\"for region in target_regions:\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":135,\"offset\":0,\"style\":\"bold\"}],\"key\":\"debec\",\"text\":\"    render_screenshot (target_folder, cells, name_path, mouse[1], region,techpaper_cam_01,render_hemisphere=True,render_densities=True)\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"buo43\",\"text\":\"name_path = \\\"/some_random_path/names/PV_P56_WT_avg/\\\"\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":1380521,"guid":"007E05E0B93F11ECB7EB435C4326014E","previous_id":1380515,"previous_guid":"F248C910B93E11ECB7EB435C4326014E","section":"\u003cp\u003eRender cell densities \u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"fuul2\",\"text\":\"By default this script renders rather coarse maps, suitable to assess changes across e.g. large cortical regions. If you want more fine-grained heatmaps, you can set the \\\"radius\\\" parameter in the render_screenshot function to a lower value (i.e. 250). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1i3gf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"c65rt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e21uv\",\"text\":\"If you want the heatmap object itself to have a higher resolution (and have lots of RAM and time), you can additionally define the \\\"dims\\\" parameter for the PointsDensity function:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1ptc\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"33ed7\",\"text\":\"The default is (40,40,40), which works as a reasonable compromise between computing speed and display accuracy.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":10,\"offset\":50,\"style\":\"bold\"}],\"key\":\"1vkah\",\"text\":\"scene.add(PointsDensity(cells,colormap=\\\"twilight\\\",radius=250))\",\"type\":\"unstyled\"}],\"entityMap\":{}}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[{\"length\":18,\"offset\":30,\"style\":\"bold\"}],\"key\":\"nrgb\",\"text\":\"scene.add(PointsDensity(cells,dims=(200,200,200),colormap=\\\"twilight\\\",radius=750))\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"7","cases":[],"critical":null},{"id":1380523,"guid":"CE543D10B94211EC9ECEFBCDDF752C04","previous_id":1380521,"previous_guid":"007E05E0B93F11ECB7EB435C4326014E","section":"\u003cp\u003eRender cell densities \u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1oi74\",\"text\":\"Run the script. Depending on the number of cells, computing the density might take some time (\\u003e30 min on a Ryzen 4600H with 64GB RAM). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7f8bq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bp8v5\",\"text\":\"Note: The color scales for the heatmaps are set to the min/max of the dataset and are not comparable between different datasets. The underlying data can be retrieved by digging deep into the vtk code underlying brainrender, but is not easily accessible (and then needs to be re-rendered). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":6}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":60561,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"8","cases":[],"critical":null}],"template_id":1,"title":"Visualize Data with Brainrender","title_html":"Visualize Data with Brainrender","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"µg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"°К","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (m)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"μV","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (µM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"µm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"visualize-data-with-brainrender-b7drri56","url":"https://www.protocols.io/view/visualize-data-with-brainrender-b7drri56","version_class":60561,"version_data":{"id":0,"code":"b7drri56","version_class":60561,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"merge_request":null},"version_id":0,"version_uri":"visualize-data-with-brainrender-dm6gpbdwdlzp/v1","versions":[{"id":60561,"title":"Visualize Data with Brainrender","title_html":"Visualize Data with Brainrender","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.dm6gpbdwdlzp/v1","uri":"visualize-data-with-brainrender-b7drri56","published_on":1655470306,"modified_on":1684444163,"version_class":60561,"version_id":0,"version_code":"b7drri56","version_uri":"visualize-data-with-brainrender-dm6gpbdwdlzp/v1","created_on":1649637181,"categories":null,"creator":{"name":"Moritz Negwer","affiliation":null,"affiliation_url":null,"username":"m4yle1w1w105vle1","link":null,"image":{"source":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","placeholder":"https://lh3.googleusercontent.com/a/AATXAJyZGXwviv2oKW7mkTn6EzbKqzw5BX8ZA7sromcA=s96-c","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}