{"id":43389,"title":"Identifying Genetic Dependencies in Cancer by Analyzing siRNA Screens in Tumor Cell Line Panels","title_html":"<p>Identifying Genetic Dependencies in Cancer by Analyzing siRNA Screens in Tumor Cell Line Panels<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/eaxqbcasf.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/eaxqbcasf.jpg"},"doi":"dx.doi.org\/10.17504\/protocols.io.bnk5mcy6","doi_status":2,"uri":"identifying-genetic-dependencies-in-cancer-by-anal-bnk5mcy6","type_id":1,"template_id":4,"published_on":1630617613,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":0,"code":"bnk5mcy6","parent_id":0,"parent_uri":null,"has_pending_merge_request":0,"has_approved_merge_request":0},"created_on":1603158037,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":"https:\/\/link.springer.com\/protocol\/10.1007%2F978-1-4939-7493-1_5","total_collections":0,"number_of_steps":25,"authors":[{"name":"James Campbell","affiliation":"CRUK-Centre Core Bioinformatics Facility, Department of Data Science, The Institute of Cancer Research, London, UK","affiliations":[],"username":null,"note":"","link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Colm Ryan","affiliation":"Systems Biology Ireland, University College Dublin, Dublin 4, Ireland","affiliations":[],"username":"colm-ryan","note":"","link":null,"image":{"source":"\/img\/avatars\/008.png","placeholder":"\/img\/avatars\/008.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Christopher  J. Lord","affiliation":"The Breast Cancer Now Toby Robins Breast Cancer Research Centre and CRUK Gene Function Laboratory, The Institute of Cancer Research, London, UK","affiliations":[],"username":"w2y2b4y2w213","note":"","link":null,"image":{"source":"\/img\/avatars\/011.png","placeholder":"\/img\/avatars\/011.png"},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":27553,"uri":"springer-nature-books","title":"Springer Nature Books","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/duwxbaca7.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/duwxbaca7.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":27553,"uri":"springer-nature-books","title":"Springer Nature Books","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/duwxbaca7.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/duwxbaca7.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":false,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Identifying Genetic Dependencies in Cancer by Analyzing siRNA Screens in Tumor Cell Line Panels","title_html":"Identifying Genetic Dependencies in Cancer by Analyzing siRNA Screens in Tumor Cell Line Panels","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"identifying-genetic-dependencies-in-cancer-by-anal-bnk5mcy6","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1630685707,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/identifying-genetic-dependencies-in-cancer-by-anal-bnk5mcy6","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"3AB70A80127511EB94E959838030DB4F","state_version_id":909,"steps":[{"id":1054975,"guid":"87D7A670127611EB94E959838030DB4F","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"9CBDEE1518C94B4D8FE79389535801DC","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"2BFD3C56683C43FF9AB068305BFA7058","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><br\/><div class = \"text-block\"><span>Typically, siRNA screens are conducted in multiwell tissue culture plates. The process of transfecting a cancer cell line with siRNAs is optimized prior to screening and once optimal conditions have been selected (described in [17]), cells are dispensed into multiwell plates containing growth media, transfection reagents, and siRNAs. The data in the example provided represent a screen of a single osteosarcoma tumor cell line using an siRNA library targeting 714 kinase and kinase-related genes. Positive and negative controls are included on each plate\u2014typically non-targeting siRNA as a negative control and an siRNA pool targeting <\/span><span style = \"font-style:italic;\">PLK1 <\/span><span>as a positive control. The full experimental protocol for this screen has been described elsewhere [4, 5]. Briefly, following siRNA transfection, the cells were cultured for 5 days, after which a luminescence assay measuring cellular ATP was used to estimate cell viability. A Victor X<\/span><span style = \"vertical-align:sub;\">5<\/span><span> platereader was used to read luminescence values, resulting in data files in Microsoft Excel format. Prior to the analysis in R, these data files were converted to plain text <\/span><span style = \"font-style:italic;\">plate files<\/span><span>. Each plate file contains the luminescence reading from each well in one 96 or 384 multiwell plate. Where an siRNA library is larger than the plate format used in the screen, several plates are required for a single screen. Additionally, multiple replicate screens are typically conducted for a given cell line and siRNA library. The organization of plates into segments of an siRNA library and replicate screens is described in a <\/span><span style = \"font-style:italic;\">plate list file<\/span><span>. A plate list file contains the file names of the plate files, the replicate numbers, and plate numbers in a multiplate screen. Annotations indicating the genes targeted by siRNAs in the library across multiple plates as well as the positions of control wells are provided in separate plain text files. The analysis protocol set out below uses the cellHTS2 [18] R package developed by Huber and Boutros to combine data from the plate files, the plate list file, the plate configuration file, and the annotation file. The luminescence data are normalized to produce <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores by first log<\/span><span style = \"vertical-align:sub;\">2 <\/span><span>transforming the values and subtracting the median log luminescence value on a plate-by-plate basis. The plate-centered data are then scaled to the median absolute deviation (MAD) value calculated across the entire siRNA library to produce <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores.<\/span><\/div><br\/><div class = \"text-block\">An R script named \u201crun_cellHTS.R\u201d in the R-scripts directory contains the following commands. The first command loads the cellHTS2 R package that provides the functions required for the analysis.<\/div><br\/><\/div>"}},{"id":1054725,"guid":"E79CED80511011EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8376,"name":"require(cellHTS2)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054976,"guid":"A2DB6420127611EB94E959838030DB4F","previous_id":1054975,"previous_guid":"87D7A670127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"34329F2BCF734C50AAC26753E7D8CF2F","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"4BFE946B1F504FCCB08CA18C4031D09B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>With cellHTS2 loaded, we then use the readPlateList() function to read the plate list file which in turn creates a cellHTS object containing the luminescence data from the plate files (<\/span><span style = \"font-style:italic;\">see <\/span><span style = \"font-weight:bold;\">Note 7<\/span><span>).<\/span><\/div><br\/><br\/><\/div>"}},{"id":1054725,"guid":"13065C90511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8377,"name":"x <- readPlateList(\nfilename=\" platelist_p3r3.txt\",\nname=\"CGDsExample\"\npath=\".\/\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054977,"guid":"A91E0590127611EB94E959838030DB4F","previous_id":1054976,"previous_guid":"A2DB6420127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8297BE22413F41E0B579BE24872A270B","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"097CCD829B044951A7C98C8D2F810755","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We next use the configure() function to add information from the plate configuration file and (optionally) the screen log and description file to the cellHTS object. The plate configuration defines the locations of samples, controls and empty wells. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"42A70CB0511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8378,"name":"x <- configure(\nx,\ndescripFile=\"screen_description.txt\",\nconfFile=\"plateconf_384.txt\",\nlogFile=\"Screenlog.txt\",\npath=\".\/\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054978,"guid":"D7A6B600127611EB94E959838030DB4F","previous_id":1054977,"previous_guid":"A91E0590127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4D69FDC1FB034FE7A0A7315432A48B3F","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"65F01A660F314934A73A61525B01502F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We use the annotate() function to define the genes targeted by siRNAs in each well of the plate. This information is located in the \u201ckinome_library.txt\u201d file.<\/div><br\/><\/div>"}},{"id":1054725,"guid":"534CFB60511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8379,"name":"x <- annotate(\nx,\ngeneIDFile=\"kinome_library.txt\",\npath=\".\/\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054979,"guid":"DE26AE90127611EB94E959838030DB4F","previous_id":1054978,"previous_guid":"D7A6B600127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"410037586FF143F8851D86666A2655F3","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"70152AC7E1B743D2ABB22ECA90E539CE","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>We now process the luminescence data in the cellHTS object to normalize data values across the plates in the screen. This is done by log<\/span><span style = \"vertical-align:sub;\">2 <\/span><span>transforming the luminescence values and subtracting the median value within a plate from all the values of wells in that plate. The parameters passed to the normalizePlates() function are described in <\/span><span style = \"font-weight:bold;\">Note 8<\/span><span>. The original cellHTS object \u201cx\u201d is passed to the normalizePlates() function and the result is saved into a new cellHTS object called \u201cxn.\u201d<\/span><\/div><br\/><\/div>"}},{"id":1054725,"guid":"614B22A0511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8380,"name":"xn <- normalizePlates(\nx,\nscale=\"multiplicative\",\nlog=TRUE,\nmethod=\"median\",\nvarianceAdjust = \"none\",\nnegControls=\"neg\",\nposControls=\"pos\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054980,"guid":"E3EA0DE0127611EB94E959838030DB4F","previous_id":1054979,"previous_guid":"DE26AE90127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5907F83B1EF849ADAA6E119B75B8CDFB","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"2C78CB826DF840DA991B11A45FDED105","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>The normalized data stored in \u201cxn\u201d are then scaled by dividing each well\u2019s value by the median absolute deviation (MAD) calculated from the normalized values across the whole siRNA library. Control wells are excluded from the estimation of the MAD. Scaling the plate median centered normalized data by the MAD produces the robust equivalent of Studentized values or <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores (<\/span><span style = \"font-style:italic;\">see <\/span><span style = \"font-weight:bold;\">Note 9<\/span><span>).<\/span><\/div><br\/><br\/><\/div>"}},{"id":1054725,"guid":"75102BA0511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8381,"name":"xsc <- scoreReplicates(\nxn,\nmethod=\"zscore\",\nsign=\"+\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054981,"guid":"E92EEE60127611EB94E959838030DB4F","previous_id":1054980,"previous_guid":"E3EA0DE0127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"939FBE3496234850BE750F5009F2C044","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"3CC5BCD9820940F5A33B076216C3FB2F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">For later statistical analyses, it may be preferable to summarize the values of replicate wells targeting a specific gene as a median or some other summary statistic. This can be performed using the summarizeReplicates() function in cellHTS2.<\/div><br\/><\/div>"}},{"id":1054725,"guid":"B3D90410511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8382,"name":"xsc <- summarizeReplicates(\nxsc,\nsummary=\"median\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054982,"guid":"EE049250127611EB94E959838030DB4F","previous_id":1054981,"previous_guid":"E92EEE60127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"05CB90EDE41E4582A96106EB1118E2EC","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"F5DA614FE48A4BEB9F5AE6BF46EF3384","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">CellHTS2 also provides a function called getTopTable() that writes a plain text file containing the well annotation data as well as the luminescence data at each stage of processing. Here, we write this information to a file called \u201cTopTable.txt.\u201d <\/div><br\/><\/div>"}},{"id":1054725,"guid":"BD7F69F0511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8383,"name":"summary_info <- getTopTable(\nlist(\n\"raw\"=x,\n\"normalized\"=xn,\n\"scored\"=xsc\n),\nfile=\"TopTable.txt\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054983,"guid":"F1F97330127611EB94E959838030DB4F","previous_id":1054982,"previous_guid":"EE049250127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"50BC56C0002748778080C5DF432D2EE7","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"6892628A694E44C696E3438813CDE4F9","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>An HTML formatted report can also be generated describing the screen and the processing steps applied to it using the commands below. This HTML report provides information on the positive and negative controls included, the distribution of the resulting scores, and details of the quality of the screen (<\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 scores, see below). <\/span><\/div><br\/><div class = \"text-block\">The contents of the HTML report can be modified using the setSettings() function. Here, we turn on the reproducibility and intensities reports (producing heatmap visualizations of well values) and set the range of heatmap colors for the screen summary scores report. <\/div><br\/><br\/><\/div>"}},{"id":1054725,"guid":"C931CC70511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8384,"name":"setSettings(\nlist(\nplateList=list(\nreproducibility=list(\ninclude=TRUE,\nmap=TRUE\n),\nintensities=list(\ninclude=TRUE,\nmap=TRUE)\n),\nscreenSummary=list(\nscores=list(\nrange=c(-20, 10),\nmap=TRUE\n)\n)\n)\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054984,"guid":"FC72E080127611EB94E959838030DB4F","previous_id":1054983,"previous_guid":"F1F97330127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"F18EE24B3C91481F846C92FCF06FC8F2","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"E9E61158B3914785A3BA799D6C1A36B0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We then use the writeReport() function to generate the HTML report. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"D3F78500511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8385,"name":"writeReport(\nraw=x,\nnormalized=xn,\nscored=xsc,\noutdir=.\/report,\nforce=TRUE,\nposControls=\"pos\",\nnegControls=\"neg\",\nmainScriptFile=\"..\/R-scripts\/run_cellHTS.R\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054985,"guid":"015F40C0127711EB94E959838030DB4F","previous_id":1054984,"previous_guid":"FC72E080127611EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8999404EF37740F7A456B3F9CAE0FF77","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"20BD0E94974E4BE8A976431764EAC43D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>The outputs from this cellHTS2 analysis so far have been a TopTable plain text file and a folder containing an HTML report. It is possible to extract any data in the cellHTS objects using accessor methods in order to produce customized outputs. Here, we extract information on the targeted genes, the plate numbers, well numbers, and median <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores and combine this into a data frame (\u201ccombinedz\u201d) containing four columns (compound, plate, well, and zscore). <\/span><\/div><br\/><\/div>"}},{"id":1054725,"guid":"E42891D0511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8386,"name":"genes <- geneAnno(xsc)\nplates <-plate(xsc)\nwells <- well(xsc)\nscores <- Data(xsc)[,1,1]\ncombinedz <- data.frame(\ncompound=compounds,\nplate=plates,\nwell=wells,\nzscore=scores\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054986,"guid":"057ABC70127711EB94E959838030DB4F","previous_id":1054985,"previous_guid":"015F40C0127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0DD993D50ABF432CBCBF9D08DE3D1F2D","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"9D9779A81D92484B98EF04292EF00CC4","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We can then write out the \u201ccombined\u201d data frame to a text file. A use case for this is to enable joining data from multiple screens into a single file for analysis. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"F0E0A480511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8387,"name":"write.table(\ncombinedz,\n\"zscore.txt\",\nsep=\"\\t\",\nquote=FALSE,\nrow.names=FALSE\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054987,"guid":"09A21F00127711EB94E959838030DB4F","previous_id":1054986,"previous_guid":"057ABC70127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0220FF2EE5EE44FF8E36C60C656AE906","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"A73C582C21944E48A6E25FF0370C541B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>This analysis needs to be performed for each screen in the experiment. Typically, multiple distinct screens would represent multiple tumor cell lines screened with a specific library of siRNAs. Quality control steps need to be applied on a screen-by-screen basis. We expect siRNA screen replicates to be strongly correlated and reject screens where no pairs of replicates have a correlation coefficient greater than 0.7 (<\/span><span style = \"font-style:italic;\">see <\/span><span style = \"font-weight:bold;\">Note 10<\/span><span>). <\/span><\/div><br\/><div class = \"text-block\">In an earlier step, we saved the output from the getTopTable() function to a data frame called \u201csummary_info.\u201d We can extract the replicate normalized luminescence values from this data frame and calculate the Pearson correlation coefficients for each pair of replicates using the following command. <\/div><br\/><br\/><\/div>"}},{"id":1054725,"guid":"FC53DB20511111EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8388,"name":"cor(\nsummary_info[,c(\n\"normalized_r1_ch1\",\n\"normalized_r2_ch1\",\n\"normalized_r3_ch1\"\n)],\nuse=\"pairwise.complete.obs\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054989,"guid":"ABA4BB00127711EB94E959838030DB4F","previous_id":1129716,"previous_guid":"812614E072D111EB8D6D7F325DEE3F76","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3135C1A00CC341189291B469024E396C","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"7D7E560A9AB348CEBCBB7884890FFAB0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We next integrate the processed results from multiple siRNA screens with data describing the genetic alterations present in each sample. For this tutorial we use the siRNA data from 18 osteosarcoma tumor cell lines and a mutations file that describes the presence or absence of genetic alterations in different members of the Retinoblastoma (RB1) pathway. In the git repository downloaded, there is a set of directories containing pre-formatted siRNA and mutation datasets as well as R scripts to process the data. Open the script R-scripts\/identifying_CGDs_RB1_osteosarcoma.R and examine its contents. The first command sets the working directory to the top level of the git repository we cloned\/downloaded earlier. Modification of the path given to the setwd() function is required to point to the appropriate location on your local system. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"2217FA30511211EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8389,"name":"setwd(\"~\/software\/identifying-genetic-dependencies\")","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054990,"guid":"BFDC34E0127711EB94E959838030DB4F","previous_id":1054989,"previous_guid":"ABA4BB00127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"EC67453672D446A4BB375C5E99DDD9E6","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"D236E93A8A3343B695BAC33AE49B6B5C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The next command runs R code contained in a second file in the R-scripts directory. The dot at the beginning of the path indicates that the path is relative to the current working directory. The file \u201cidentifying_CGDs_library.R\u201d contains a set of functions that abstract the process of loading mutation and siRNA datasets as well as running a set of statistical tests. Readers familiar with R can examine the code in this file to understand the individual analysis steps in more detail. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"2F634C30511211EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8390,"name":"source(\".\/R-scripts\/identifying_CGDs_library.R\")","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054991,"guid":"C53EAF80127711EB94E959838030DB4F","previous_id":1054990,"previous_guid":"BFDC34E0127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"F30BA3681FB64963A626E33D7F3FB040","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"BEBFEB8CEF804C988D0B8FBEA02FE280","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We next define the paths to the siRNA and mutation data files used in the analysis. It is a helpful to define this kind of information near the top of scripts so that in the future the files can be changed without having to find the commands where these values are used. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"3BDEA400511211EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8391,"name":"sirna_screens_file <- \".\/siRNA-data\/Osteosarcoma_kinome_screens.txt\"\nrb_pathway_func_muts_file <- \".\/mutation-data\/combined_exome_cnv_func_muts_RBpathway_160418.txt\"\nrb_pathway_all_muts_file <- \".\/mutation-data\/combined_exome_cnv_all_muts_RBpathway_160418.txt\"","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054992,"guid":"C95410B0127711EB94E959838030DB4F","previous_id":1054991,"previous_guid":"C53EAF80127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0FB2DD257CEC44A9AE77AE964C5C4E38","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"7D01A981184844CE8C981CB31C9490C6","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>The next command reads the siRNA and mutation datasets, identifies cell lines in common between each dataset, and returns an R list object containing analysis-ready tables. The input files comprise tab-separated data where the first row and first column represent column and row names respectively. Aside from the first row (column headings), each row contains data for a single-cell line. Each column represents a property measured across each cell line. In the \u201csirna_screens_file,\u201d these properties are the <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores representing the relative viability of cells treated with siRNAs targeting specific genes. In the case of the mutation datasets (rb_pathway_func_muts_file and rb_pathway_all_muts_file), these properties represent the presence or absence of a driver gene alteration. The file rb_pathway_func_muts_file contains a \u201c1\u201d where a cell line is considered to contain a likely functional cancer driver gene alteration (mutation or copy number alteration) and a \u201c0\u201d where such a change is absent. Similarly, the file rb_pathway_all_muts_file contains a \u201c1\u201d or \u201c0\u201d to indicate the presence of any driver gene alteration found in a cell line irrespective of presumed functional impact. These two files are used to identify sets of cell lines where a driver gene is considered to be functionally altered (the mutant group) or where alterations to the driver gene are entirely absent (the wild-type group) (<\/span><span style = \"font-style:italic;\">see <\/span><span style = \"font-weight:bold;\">Note 11<\/span><span>). <\/span><\/div><br\/><br\/><\/div>"}},{"id":1054725,"guid":"49F2C440511211EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8392,"name":"kinome_rb_muts <- read_rnai_mutations(\nrnai_file=sirna_screens_file,\nfunc_muts_file=rb_pathway_func_muts_file,\nall_muts_file=rb_pathway_all_muts_file\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054993,"guid":"CFF043D0127711EB94E959838030DB4F","previous_id":1054992,"previous_guid":"C95410B0127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"AD4AF5E2520246BB9390FF1AF2F0B944","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"E9C86243422D42B18EE69B81015F81DB","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>With the siRNA and mutation data tables organized within kinome_rb_muts, we now run association tests between mutations or copy number alterations in RB1 pathway genes and test dependency on each gene targeted in the kinome siRNA library. The function run_univariate_tests() performs Wilcoxon Rank Sum tests between siRNA <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores of cell lines in the mutant and wild-type groups and returns a table of these test results as well as other information such as descriptive statistics (including the median <\/span><span style = \"font-style:italic;\">Z<\/span><span>-score of the mutant and wild-type group and the difference between those two values). <\/span><\/div><br\/><\/div>"}},{"id":1054725,"guid":"11C1D1D0511511EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8394,"name":"kinome_rb_mut_associations <- run_univariate_tests(\nzscores=kinome_rb_muts$rnai,\nmutations=kinome_rb_muts$func_muts,\nall_variants=kinome_rb_muts$all_muts,\nalt=\"less\"\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054994,"guid":"D600FFD0127711EB94E959838030DB4F","previous_id":1054993,"previous_guid":"CFF043D0127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"98BC37A04AA94D2D8F2C611D08C199EC","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.2 Identification of Kinase Dependencies Associated with Driver Gene Mutation or Copy Number Alteration"}},{"id":1054724,"guid":"2EF19764E413455EA066E097CAF522AA","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We write out the results of the association tests to a text file that can be opened in a spreadsheet application or used as input for other programs such as the annotate_dependencies.py python program described in Section 3.3. <\/div><br\/><\/div>"}},{"id":1054725,"guid":"26A4CDF0511511EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8395,"name":"write.table(\nkinome_rb_mut_associations,\n\".\/results\/kinome_rb_mut_associations.txt\",\nsep=\"\\t\",\ncol.names=TRUE,\nrow.names=FALSE,\nquote=FALSE\n)","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054996,"guid":"2D587740127811EB94E959838030DB4F","previous_id":1054994,"previous_guid":"D600FFD0127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4CFF80CA929A47F6AF63C7ED2DB5B353","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.3 Annotating Molecular Dependencies According to Known Functional Relationships"}},{"id":1054724,"guid":"34DF03EDFBB34E129C2B24B8BE31CC2D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><br\/><div class = \"text-block\">In the absence of additional information, interpreting an association between the mutation of a driver gene and sensitivity to RNAi reagents targeting another gene can be difficult. One approach to aiding the interpretation of these associations is the integration of orthogonal data, including known functional relationships between genes or their protein products. We provide a simple Python script (annotate_dependencies.py) that can be used to integrate known functional relationships (e.g., protein-protein, kinase-substrate, or gene-regulatory interactions) with the associations generated by the R scripts described in Section 3.2. This script adds an additional column to the associations file indicating whether or not the marker-target gene pair has a known functional relationship according to a user-supplied source of interactions.<\/div><br\/><div class = \"text-block\"><span>Create a file containing functional relationships between genes (<\/span><span style = \"font-style:italic;\">see <\/span><span style = \"font-weight:bold;\">Note 6 <\/span><span>for potential sources of these relationships). Each line of this file should contain two gene symbols (HUGO gene names) separated by a tab. Alternatively, files in the BioGRID Tab 2.0 Format, such as those downloaded from the BioGRID database [20], can be used as input.<\/span><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054997,"guid":"47B594B0127811EB94E959838030DB4F","previous_id":1054996,"previous_guid":"2D587740127811EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"EF629D54BFB143CD862E3A31E2CA37ED","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.3 Annotating Molecular Dependencies According to Known Functional Relationships"}},{"id":1054724,"guid":"A308EC226B2E42B3A7B887B63ED32797","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Open a command prompt\/terminal and run the script as follows: <\/div><br\/><div class = \"text-block\"><span>where <associations> is the name of the associations file created using the R scripts above, <output> is the name of the file where the annotated associations will be output to, <interactions> is the name of the file containing known functional relationships, and <column_name> is an optional name for the column where the functional annotation will be stored. If the interactions file is in the BioGRID Tab 2.0 format then add the optional \u201c\u2013b\u201d argument to this command. <\/span><span style = \"font-style:italic;\">See <\/span><span style = \"font-weight:bold;\">Note 12 <\/span><span>for additional parameters of this file.<\/span><\/div><br\/><\/div>"}},{"id":1054725,"guid":"6A7BBF70511511EB8D5E273458F44513","order_id":2,"type_id":15,"title":"command","source":{"id":8396,"name":"python annotate_dependencies.py -a <associations> -o <output> -i <interactions> -n <column_name>","command_name":"","command":"","os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054998,"guid":"58362110127811EB94E959838030DB4F","previous_id":1054997,"previous_guid":"47B594B0127811EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4EAD74E01E1146478304EA529D81C8D2","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.3 Annotating Molecular Dependencies According to Known Functional Relationships"}},{"id":1054724,"guid":"E48AFE0025624A4A999FA5A9B0044B16","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">View the resulting output in a text editor or spread sheet application. There should be an additional column in the file named using the <column_name> argument, with True or False values indicating whether each marker-target association involves a gene pair with a known functional relationships according to the <interactions> file.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1054999,"guid":"61B4DAB0127811EB94E959838030DB4F","previous_id":1054998,"previous_guid":"58362110127811EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"268F05E923094D8B848725C561F0426A","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.3 Annotating Molecular Dependencies According to Known Functional Relationships"}},{"id":1054724,"guid":"46DDC924A8664BE2BFCA514461CF6CB0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Additional columns can be added (e.g., to annotate the associations according to a different source of interactions) by running the script again using the output file (<output>) of the first run as input to a subsequent run. For this step it is necessary to set the <column_name> parameter to avoid overwriting previous results.<\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129716,"guid":"812614E072D111EB8D6D7F325DEE3F76","previous_id":1054987,"previous_guid":"09A21F00127711EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D8A5876335DA4B79868FD6896D23BC4D","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.1 Processing siRNA Screen Data Using CellHTS2"}},{"id":1054724,"guid":"BA992B15F6C041B1B2F9B2F49B637F1C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>A further quality control step that is recommended is to examine the <\/span><span style = \"font-style:italic;\">Z<\/span><span>-prime (<\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032) values for each screen [19]. <\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 scores provide a measure of the separation of the positive and negative control siRNAs included in a screen and so can be considered an estimate of how much it is possible for the individual \u201csample\u201d wells to vary in <\/span><span style = \"font-style:italic;\">Z<\/span><span>-scores. Larger values of <\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 indicate better screens. Screens with <\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 values \u22650.5 are considered excellent. Those with <\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 values \u22640 are considered unusable and should be rejected and the experiments should be repeated. CellHTS2 calculates <\/span><span style = \"font-style:italic;\">Z<\/span><span>\u2032 scores for each replicate and these can be found in the HTML report under the \u201cplate summaries\u201d section.<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1131250,"guid":"ABA1B010751711EB8D6D7F325DEE3F76","previous_id":1054999,"previous_guid":"61B4DAB0127811EB94E959838030DB4F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8057413CB2C748209008F911750B1C78","order_id":1,"type_id":6,"title":"Section","source":{"title":"3.3 Annotating Molecular Dependencies According to Known Functional Relationships"}},{"id":1054724,"guid":"7E6C165BD049433F8269C0D8308EB4BF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>The end result of this analysis is a file containing an annotated list of associations between a particular genomic feature (indicated in the \u201cmarker\u201d column) and increased sensitivity to siRNA reagents targeting a particular gene (indicated in the \u201ctarget\u201d column). The column titled \u201cPPI\u201d in this file indicates whether the marker gene and the target have a known functional relationship (e.g., protein-protein interaction) while the column \u201cwilcox.p\u201d gives an indication of the statistical significance of the association. These <\/span><span style = \"font-style:italic;\">p<\/span><span>-values, together with the annotation of known functional relationships, may be used to prioritize candidate genetic dependencies (synthetic lethalities) for follow-up experiments. At a minimum these follow-up experiments should involve using orthogonal means to test the observed association (e.g., alternative siRNA reagents or a small molecule targeting the protein product of the gene of interest) [21]. Ideally, the follow-up validation would test the association in additional cell lines harboring the mutation of interest. In the example provided, we found that <\/span><span style = \"font-style:italic;\">RB1 <\/span><span>mutation is associated with increased sensitivity to siRNA targeting the kinase <\/span><span style = \"font-style:italic;\">DYRK1A<\/span><span>, a known <\/span><span style = \"font-style:italic;\">RB1 <\/span><span>binding partner. In Campbell et al. [5] we validated this in a larger panel of osteosarcoma cell lines using four distinct siRNA reagents targeting the <\/span><span style = \"font-style:italic;\">DYRK1A<\/span><span> gene suggesting that the initial observation represents a real dependency.<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">Loss-of-function screening using RNA interference or CRISPR approaches can be used to identify genes that specific tumor cell lines depend upon for survival. By integrating the results from screens in multiple cell lines with molecular profiling data, it is possible to associate the dependence upon specific genes with particular molecular features (e.g., the mutation of a cancer driver gene, or transcriptional or proteomic signature). Here, using a panel of kinome-wide siRNA screens in osteosarcoma cell lines as an example, we describe a computational protocol for analyzing loss-of-function screens to identify genetic dependencies associated with particular molecular features. We describe the steps required to process the siRNA screen data, integrate the results with genotypic information to identify genetic dependencies, and finally the integration of protein-protein interaction data to interpret these dependencies.<\/div><\/div>","changed_on":1630617613}