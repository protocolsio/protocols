{"id":49011,"title":"How to check the integrity of a set of files uploaded to AWS S3","title_html":"<p>How to check the integrity of a set of files uploaded to AWS S3<\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":null,"doi_status":0,"uri":"how-to-check-the-integrity-of-a-set-of-files-uploa-bt4tnqwn","type_id":1,"template_id":5,"published_on":1617979912,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":"0","code":"bt4tnqwn","parent_id":0,"parent_uri":null,"is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":false},"created_on":1617974763,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Sonia Garc\u00eda-Ruiz","affiliation":null,"affiliations":[],"username":"m4vle152t1u4tle1","note":null,"link":null,"image":{"source":"\/img\/avatars\/009.png","placeholder":"\/img\/avatars\/009.png"},"badges":[{"id":3,"image":{"source":"\/img\/badges\/silver.svg","placeholder":"\/img\/badges\/silver.svg"},"name":"Power author!"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":7,"authors":[{"name":"Sonia Garc\u00eda-Ruiz","affiliation":"University College London, University of London","affiliations":[],"username":"m4vle152t1u4tle1","note":"","link":null,"image":{"source":"\/img\/avatars\/009.png","placeholder":"\/img\/avatars\/009.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":22559,"uri":"ryten-laboratory","title":"Ryten Laboratory","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":22559,"uri":"ryten-laboratory","title":"Ryten Laboratory","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":true,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"How to check the integrity of a set of files uploaded to AWS S3","title_html":"How to check the integrity of a set of files uploaded to AWS S3","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"how-to-check-the-integrity-of-a-set-of-files-uploa-bt4tnqwn","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1617979912,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/how-to-check-the-integrity-of-a-set-of-files-uploa-bt4tnqwn","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"E3BEFB40993611EB9AD24BDBAA375148","state_version_id":768,"steps":[{"id":1159477,"guid":"5CFD7740993A11EB9AD24BDBAA375148","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"39916BD4DB1D43B4B1EEAD69E45B3A09","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"7ED18B5C3D7B44C3897E65AACD6BEC7D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Clone the <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/antespi\/s3md5\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">s3md5<\/span><\/a><\/div><div class = \"text-block\"> repo:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\"><span>$ git clone <\/span><a href=\"https:\/\/github.com\/antespi\/s3md5.git\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/antespi\/s3md5.git<\/span><\/a><\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159478,"guid":"EC11E240993A11EB9AD24BDBAA375148","previous_id":1159477,"previous_guid":"5CFD7740993A11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D81CABD92C7F4A479201814CD5AADDA3","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"46AF7964AB904D319C599D57F12FE2AC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Grant execution access to the s3md5 script file.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ chmod 755 .\/s3md5\/s3md5<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159479,"guid":"02A52670993B11EB9AD24BDBAA375148","previous_id":1159478,"previous_guid":"EC11E240993A11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"48349630B3654351B549498A04785E31","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"062029FF6E2F440EAEFE3EB6868386A2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Clone the <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/SoniaRuiz\/aws-s3-integrity-check\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">aws-s3-integrity-check<\/span><\/a><\/div><div class = \"text-block\"> repo:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ git clone https:\/\/github.com\/SoniaRuiz\/aws-s3-integrity-check.git<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159480,"guid":"201E29E0993B11EB9AD24BDBAA375148","previous_id":1159479,"previous_guid":"02A52670993B11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2E093CF2C3784ED38C55AA345E9EFBC2","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"146C87005815466EAF7BB4DB6FCD2E5F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Move the<\/span><span style = \"font-style:italic;\"> 's3md5'<\/span><span> folder within the<\/span><span style = \"font-style:italic;\"> 'aws-s3-integrity-check' <\/span><span>folder:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ mv .\/s3md5 .\/aws-s3-integrity-check<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159481,"guid":"3274D5D0993B11EB9AD24BDBAA375148","previous_id":1159480,"previous_guid":"201E29E0993B11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"B1D1E80BFF474595A985F7A4B18DE9C5","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"234E660B4E7C4310B19BDFAA0D3B34E1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>The <\/span><span style = \"font-style:italic;\">'aws-s3-integrity-check' <\/span><span>folder should look now similar to the following structure:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ ls .\/aws-s3-integrity-check<\/div><div class = \"text-block\">total 16 <\/div><div class = \"text-block\">-rw-r--r-- 1 your_user your_group 3573 date README.md <\/div><div class = \"text-block\">-rwxr-xr-x 1 your_user your_group 3301 date aws_check_integrity.sh <\/div><div class = \"text-block\">drwxr-xr-x 2 your_user your_group 4096 date s3md5<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159482,"guid":"79854770993B11EB9AD24BDBAA375148","previous_id":1159481,"previous_guid":"3274D5D0993B11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1CA8438B487F436997EDA26D21064B75","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"3BB941B944C74183B80AC89CE389E58A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Execute the <\/span><span style = \"font-style:italic;\">'aws-check-integrity.sh' <\/span><span>bash script following the instructions below:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ aws_check_integrity.sh <local_folder> <bucket_name> <bucket_folder><\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\">Usage :<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\"><span style = \"font-weight:bold;\"><local_folder>:<\/span><span> local path to the folder that contains all files previously uploaded to AWS. For example: <\/span><span style = \"font-style:italic;\">\/local-path\/raw-data-folder\/.<\/span><span style = \"font-style:italic;\"> <\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span style = \"font-weight:bold;\"><bucket_name><\/span><span>: name of the S3 bucket containing the files uploaded to AWS that we want to check their integrity. For example:<\/span><span style = \"font-style:italic;\"> 'bucket-name'.<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span style = \"font-weight:bold;\"><bucket_folder><\/span><span>: folder name on the S3 bucket that contains all files to be checked. The name of this folder should be the same indicated on the <\/span><span style = \"font-style:italic;\"><local_folder><\/span><span> parameter. For example:<\/span><span style = \"font-style:italic;\"> raw-data-folder\/<\/span><span>. In case there is not any root folder, this parameter will be substituted by a slash (\/), which will indicate the root path.<\/span><\/li><\/ul><\/div><div class = \"text-block\">Example:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">$ aws_check_integrity.sh \/local-path\/raw-data-folder\/ bucket-name raw-data-folder\/<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1159484,"guid":"461C3D50993E11EB9AD24BDBAA375148","previous_id":1159482,"previous_guid":"79854770993B11EB9AD24BDBAA375148","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"7D5F15F2D5C1492687F9AC17B478F47D","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"90E6788C4CD544AD8CAA8BD1EF83AEF6","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The execution of this script will:<\/div><div class = \"text-block\"><ol style = \"list-style-type: decimal;\"><li style = \"counter-reset:ol0;\"><span>Loop through all files stored on <\/span><span style = \"font-style:italic;\">\/local-path\/raw-data-folder\/<\/span><span style = \"font-style:italic;\">.<\/span><\/li><li style = \"counter-reset:ol0;\">Per each file, the script will check its size. In case the object found is a directory, it will just continue looping through its child directory files.<\/li><li style = \"counter-reset:ol0;\">If the file size is smaller than 8MG, the script will generate a simple MD5 digest value.<\/li><li style = \"counter-reset:ol0;\"><span>If the file size is bigger than 8MG, it will make a request to the <\/span><span style = \"font-style:italic;\">s3md5<\/span><span> script, which will apply the same algorithm as AWS does: it will split the file into 8MG small parts, generate the MD5 hash corresponding to each small part and generate the final MD5 digest number from the total set of individual MD5 hashes.<\/span><\/li><li style = \"counter-reset:ol0;\">Retrieve the ETag value from the corresponding file stored on the S3 bucket.<\/li><li style = \"counter-reset:ol0;\">Compare the retrieved ETag value with the integrity number generated by the script.<\/li><li style = \"counter-reset:ol0;\">If both numbers are identical, the script will confirm the integrity of the file stored on the S3 bucket. Otherwise, the script will generate an error. In any case, the result will be stored within a log file whose name will follow the following pattern: S3_integrity_log.timestamp_bucketname.txt. The log file will be stored within a folder called 'logs'. In case this folder doesn't exist, it will be automatically created by the script in the same path in which it has been executed.<\/li><\/ol><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">This protocol contains the instructions to verify the integrity of any small or large file uploaded to AWS S3. <\/div><div class = \"text-block\">This protocol has been successfully tested on:<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><\/ul><\/div><\/div>","changed_on":1617979912}