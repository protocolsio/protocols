{"access":{"can_view":true,"can_edit":false,"can_remove":true,"can_add":false,"can_publish":false,"can_get_doi":true,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"authors":[{"name":"Chase Donnelly","affiliation":"University of Antwerpen ","affiliation_url":null,"username":"","link":null,"image":{"source":"","placeholder":"","webp_source":""},"note":"","is_verified_user":false}],"before_start":"","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1713798071,"creator":{"name":"Chase Donnelly","affiliation":"University of Antwerpen ","affiliation_url":null,"username":"chase-donnelly","link":null,"image":{"source":"/img/avatars/017.png","placeholder":"/img/avatars/017.png","webp_source":""},"badges":[],"affiliations":[{"affiliation":"University of Antwerpen ","url":null,"job_title":"PhD Researcher ","is_default":true}]},"cross_cloud_origin":null,"description":"{\"blocks\":[{\"key\":\"iku6\",\"text\":\"Draft of pipeline and code used for de novo genome assembly of non model plant specis \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"{\"blocks\":[{\"key\":\"a205r\",\"text\":\"This protocol is still under development and has not been finalized. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","document":"","documents":null,"doi":null,"doi_status":0,"ethics_statement":null,"fork_id":null,"fork_info":null,"forks":[],"funders":[],"groups":[],"guid":"DB0D3ABD9F254BD7B1C136312C9CCF75","guidelines":"","has_references":false,"has_step_reagents":false,"has_versions":false,"id":98608,"image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"image_attribution":"","in_trash":false,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":false,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":1241038,"journal":null,"journals":[],"keywords":"","last_modified":1714149007,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"","public":true,"public_fork_note":"","published_on":1714149007,"references":[],"related_equipments":[],"related_materials":[],"reserved_doi":"","retraction_reason":null,"samples":{},"shared_access_id":106,"show_comparison":false,"sign_info":null,"space_access":{"can_view":false,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":true,"can_get_doi":true,"can_share":false,"can_move":false,"can_move_outside":false,"can_transfer":false,"can_download":false,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"space_id":118141,"state_version_id":1477,"stats":{"is_voted":false,"number_of_views":2,"number_of_steps":16,"number_of_bookmarks":0,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":2,"info":"We are still developing and optimizing this protocol"},"steps":[{"id":2026519,"guid":"481E028195DB4B298A0A3D9E85670AB6","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eDNA Extraction \u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"celi3\",\"text\":\"The first challenge to developing this protocol was determining a DNA extraction technique that produced long and high-quality DNA. This protocol used a modified version of the fever tree gdna protocol available via Nanopore's community website. These modifications have since been added to or surpassed in the published protocol and so the latest version on the community page should be used for DNA extraction and Library prep for sequencing before following the rest of this protocol. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1","cases":[],"critical":null},{"id":2026522,"guid":"04375A78518641F983A417FE8CF73CB9","previous_id":2026519,"previous_guid":"481E028195DB4B298A0A3D9E85670AB6","section":"\u003cp\u003eSoftware Setup \u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8e4jb\",\"text\":\"After sequencing the first step is to set up a clean compute space to analyze the sequencing data to avoid issues with mixing versions of software. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"2","cases":[],"critical":null},{"id":2026524,"guid":"0F62BCEBDE224297BF73AC3322AD249E","previous_id":2026533,"previous_guid":"69A41321725A407DBDB38BEEB69D184E","section":"\u003cp\u003eDe Novo Assembly\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"7nm6k\",\"text\":\"There are multiple assembly options that can work well on plant data (Table 1). As this study uses only long read data, only assemblers optimized for long read assembly, such as Flye, WTDBG2, and Canu were tested. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1nn6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"42a0l\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9c81m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"25mvs\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"amemu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"c4kl2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fk1og\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"tables\",\"mutability\":\"IMMUTABLE\",\"data\":{\"cellsMeta\":{},\"colTitles\":[\"Tool\",\"Link\"],\"colWidths\":[\"110\",\"337\"],\"data\":[[\"Flye\",\"https://github.com/fenderglass/Flye\"],[\"Canu\",\"https://github.com/marbl/canu\"],[\"WTDBG2\",\"https://github.com/ruanjue/wtdbg2\"],[\"NextDenovo \",\"https://github.com/Nextomics/NextDenovo\"]],\"guid\":\"11CBC27471D648A6818F341BE777DC38\",\"isJexcelDataFormat\":true,\"legend\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3mooe\",\"text\":\"Table 1: List of tools that can be used for de novo genome assembly and links to their repositories\",\"type\":\"unstyled\"}],\"entityMap\":{}},\"mergeCells\":{},\"printData\":[[\"Flye\",\"https://github.com/fenderglass/Flye\"],[\"Canu\",\"https://github.com/marbl/canu\"],[\"WTDBG2\",\"https://github.com/ruanjue/wtdbg2\"],[\"NextDenovo \",\"https://github.com/Nextomics/NextDenovo\"]],\"rowHeights\":[23,23,23,23]}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4oo55\",\"text\":\"#install programs to environment \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8b57h\",\"text\":\"mamba install flye\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"441sm\",\"text\":\"mamba install -c conda-forge -c bioconda -c defaults canu\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ivpf\",\"text\":\"#run flye with recommended parameters for ONT data \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"emdmd\",\"text\":\"flye --nano-hq all.fastq.gz \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4fr15\",\"text\":\"--read-error 0.03 \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4h5hf\",\"text\":\"--out-dir Flye_Out \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dcuf4\",\"text\":\"--genome-size 400m \\\\ #set for genome based on size estimation \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7v5l6\",\"text\":\"-t \\u003cn\\u003e\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"om00\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4f5b8\",\"text\":\"#run conda \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"brq2r\",\"text\":\"canu \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dur36\",\"text\":\" -p name -d ./genome_directory\\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"d717e\",\"text\":\" genomeSize=400m \\\\ #set for genome based on size estimation \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5nc3q\",\"text\":\" -pacbio-hifi all.fastq.gz \\\\ #at the time of writting there is no specific ONT setting in Canu and so long read pacbio setting is used.\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"C419BA9CA8DE4CA094130C249A25A67D\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":2026525,"guid":"7D9DA6783F8B4A91B1CCDB7E64A33694","previous_id":2026524,"previous_guid":"0F62BCEBDE224297BF73AC3322AD249E","section":"\u003cp\u003eQuality Assessment \u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"81hof\",\"text\":\"There are many ways to check the quality of an assembly, here we discuss three that will give a good general representation of assembly quality. These tools can be used throughout the protocol to determine the effect of each step of the process. The first tool Nano Pack 2 (v), a toolset designed to perform\\nmultiple long read processing and analysis steps on ONT reads (De Coster and Rademakers 2023), is good for visualization of the data and comes with a large range of tools to deal with ONT reads. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"330eh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8v2ee\",\"text\":\"Next Quast is the standard genome evaluation tool to compare contig number, length, and N50 of each assembly (Gurevich et al. 2013). Quast can provide multiple scores and measurements for genome assemblies with and without a reference genome available. When a reference is available quast can also show contig alignment and gaps in the two assemblies.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bd80o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e680k\",\"text\":\"BUSCO is the most commonly used tool to determine the completeness and redundancy of the genome and is based on use of universal single copy orthologs, aka highly conserver genes (Manni et al. 2021).  BUSCO looks for the presence or absences of a set of highly conservative genes based on the organism of study, with a score in the high 90% being considered good. Example code for all three tools is provided below. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2dnqj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7f79j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"b1beu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1fqfv\",\"text\":\"#install nanoplot\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6k481\",\"text\":\"mamba install -c bioconda nanoplot\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"eejhf\",\"text\":\"#run with basic configuration \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1r9kb\",\"text\":\"NanoPlot --summary sequencing_summary.txt --loglength -o summary-plots-log-transformed\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7gsnt\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9ro1j\",\"text\":\"#install \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"c3ud7\",\"text\":\"mamba install bioconda::quast\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"c0s3q\",\"text\":\"#run quast with a reference genome to compare with \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1u1nd\",\"text\":\"quast genome.fasta -o quast_results -r reference_genome.fna --features genomic.gtf --threads \\u003cn\\u003e\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1qqo0\",\"text\":\"#run quast with no reference \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5b6qb\",\"text\":\"quast genome.fasta -o quast_results --threads \\u003cn\\u003e\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"39ba2\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"41dcf\",\"text\":\"#Check genomes with BUSCO \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2jibt\",\"text\":\"busco -l viridiplantae_odb10 -m genome -c 12 -i genome.fasta -o output_file_name\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b8v8r\",\"text\":\"# change viridiplantae_odb10 to the best lineage for your genome \",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"DFDE80FE47734C05923BAF2A83D276AF\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"7","cases":[],"critical":null},{"id":2026526,"guid":"052AB31C0BDA4BAFA4AA4610B4AA4422","previous_id":2027533,"previous_guid":"4B25C7468C714200945B7ADAFFF0DFBE","section":"\u003cp\u003eStructural Annotation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"dlrud\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"69ceq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"e7idf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ehovf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"tables\",\"mutability\":\"IMMUTABLE\",\"data\":{\"cellsMeta\":{},\"colTitles\":[\"Tool\",\"Link\"],\"colWidths\":[\"128\",\"442\"],\"data\":[[\"RepeatMasker\",\"https://www.repeatmasker.org/\"],[\"RepeatModeler2\",\"https://www.repeatmasker.org/RepeatModeler/\"],[\"Braker3\",\"https://github.com/Gaius-Augustus/BRAKER\"],[\"Maker\",\"https://github.com/Yandell-Lab/maker\"],[\"GeneMark-ETP\",\"https://github.com/gatech-genemark/GeneMark-ETP\"],[\"AUGUSTUS\",\"https://github.com/Gaius-Augustus/Augustus\"],[\"TSEBRA\",\"https://github.com/Gaius-Augustus/TSEBRA\"],[\"Compleasm\",\"https://github.com/huangnengCSU/compleasm\"]],\"guid\":\"ACC4AD7286594A9A8758F3A8DB8D31F6\",\"isJexcelDataFormat\":true,\"legend\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ciehj\",\"text\":\"Table 3: List of tools for structural annotation of de novo genomes and links to their repositories \",\"type\":\"unstyled\"}],\"entityMap\":{}},\"mergeCells\":{},\"printData\":[[\"RepeatMasker\",\"https://www.repeatmasker.org/\"],[\"RepeatModeler2\",\"https://www.repeatmasker.org/RepeatModeler/\"],[\"Braker3\",\"https://github.com/Gaius-Augustus/BRAKER\"],[\"Maker\",\"https://github.com/Yandell-Lab/maker\"],[\"GeneMark-ETP\",\"https://github.com/gatech-genemark/GeneMark-ETP\"],[\"AUGUSTUS\",\"https://github.com/Gaius-Augustus/Augustus\"],[\"TSEBRA\",\"https://github.com/Gaius-Augustus/TSEBRA\"],[\"Compleasm\",\"https://github.com/huangnengCSU/compleasm\"]],\"rowHeights\":[23,23,23,23,23,23,23,23]}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"12","cases":[],"critical":null},{"id":2026527,"guid":"B1AE8E8CDD2C423A93B72944016EB096","previous_id":2027537,"previous_guid":"C6C7BD680CF049E89B8EAA598A305125","section":"\u003cp\u003eFunctional Annotation \u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"baikf\",\"text\":\"Functional annotation was completed with EnTAP. EnTAP was chosen to add functional annotation to our draft genome due to its ability to work across multiple curated datasets, and due to its preexisting setup for the RNA protocols (Hart et al. 2020b).  Using EnTAP allowed for the incorporation of the annotations from closely related species to increase the results of functional annotation. Example code is provided below. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"15","cases":[],"critical":null},{"id":2026528,"guid":"C4DAA41B94AC48FDA77C247E29D5BEE2","previous_id":2026529,"previous_guid":"D857FAD3B21940C1AED2DAEAB990F102","section":"\u003cp\u003eSoftware Setup \u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"c2679\",\"text\":\"There are a few different ways to manage a compute environment, here conda/mamba was used to create a clean environment as it works with all of the downstream programs and has an extensive manual. Mamba is a newer alternative to conda that can install programs with greater speed. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8cumd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bhdr\",\"text\":\"conda doc: https://conda.io/projects/conda/en/latest/user-guide/getting-started.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":11,\"length\":73}],\"data\":{}},{\"key\":\"5a4ea\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6i023\",\"text\":\"mamba doc: https://mamba.readthedocs.io/en/latest/\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":11,\"length\":39}],\"data\":{}},{\"key\":\"d17se\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3c5a1\",\"text\":\"mamba and conda can both be used in the same way, just replace mamba with conda in the codes below. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"517B37F2FD6411EE87410A58A9FEAC02\",\"url\":\"https://conda.io/projects/conda/en/latest/user-guide/getting-started.html\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"C2C5CEB7FD6511EE87410A58A9FEAC02\",\"url\":\"https://mamba.readthedocs.io/en/latest\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"4","cases":[],"critical":null},{"id":2026529,"guid":"D857FAD3B21940C1AED2DAEAB990F102","previous_id":2026522,"previous_guid":"04375A78518641F983A417FE8CF73CB9","section":"\u003cp\u003eSoftware Setup \u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"50hig\",\"text\":\"To set up an environment with conda or mamba you can use the following code to create an environment and install the required programs: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3p1ka\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"3o77d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9s30d\",\"text\":\"#First create environment with mamba\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"aq5da\",\"text\":\"mamba create -n genome_env\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"28cdd\",\"text\":\"#Next activate our new environment \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8f5s3\",\"text\":\"mamba activate genome_env\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5f8j\",\"text\":\"\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"7E3D913D00BA11EF9AFA0A58A9FEAC02\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null},{"id":2026533,"guid":"69A41321725A407DBDB38BEEB69D184E","previous_id":2026528,"previous_guid":"C4DAA41B94AC48FDA77C247E29D5BEE2","section":"\u003cp\u003eQuality Trimming \u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"v0tk\",\"text\":\"After base calling using high accuracy settings with no modifications, the resultant data is then further quality checked with Nano Pack 2 (v), a toolset designed to perform multiple long read processing and analysis steps on ONT reads (De Coster and Rademakers 2023). Short reads \\u003c1500 bp in length and reads with a Q score below 10 were filtered out of the sequencing data prior to assembly. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"27o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ug1u\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f185a\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bucug\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"MUTABLE\",\"data\":{\"0\":\"c\",\"1\":\"o\",\"10\":\"a\",\"11\":\"l\",\"12\":\"l\",\"13\":\" \",\"14\":\"-\",\"15\":\"c\",\"16\":\" \",\"17\":\"b\",\"18\":\"i\",\"19\":\"o\",\"2\":\"n\",\"20\":\"c\",\"21\":\"o\",\"22\":\"n\",\"23\":\"d\",\"24\":\"a\",\"25\":\" \",\"26\":\"n\",\"27\":\"a\",\"28\":\"n\",\"29\":\"o\",\"3\":\"d\",\"30\":\"p\",\"31\":\"l\",\"32\":\"o\",\"33\":\"t\",\"4\":\"a\",\"5\":\" \",\"6\":\"i\",\"7\":\"n\",\"8\":\"s\",\"9\":\"t\",\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1cdue\",\"text\":\"#install program into environment \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"e0j5v\",\"text\":\"mamba install -c bioconda nanoplot\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9m93e\",\"text\":\"#trim and remove reads less than 1kb in size\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5r61q\",\"text\":\"zcat reads.fastq.gz |\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9la23\",\"text\":\"    /path to Nano Pack/NanoLyse -r all.fastq. | \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5rus0\",\"text\":\"    /path to Nano Pack/NanoFilt --headcrop 200 --tailcrop 200 | \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b8id3\",\"text\":\"    /path to Nano Pack/NanoFilt -q 7 -l 1000 | \\\\\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1ljuv\",\"text\":\"    gzip \\u003e preliminary-filter.fastq.gz\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bl8hl\",\"text\":\"\",\"type\":\"unstyled\"}],\"entityMap\":{}}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5","cases":[],"critical":null},{"id":2027440,"guid":"3A52F1044248437695751E92E5969F18","previous_id":2026525,"previous_guid":"7D9DA6783F8B4A91B1CCDB7E64A33694","section":"\u003cp\u003ePolishing \u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"9115s\",\"text\":\"After initial assembly multiple polishing and correction are performed. The first correction step is polishing and there again are a variety of tools to choose from such as Racon, Pilon, and POLCA. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ch8su\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2fhpb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"6a8ns\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8s5b7\",\"text\":\"This protocol uses a combination of Racon and Medaka that is known to produce good results on plant assemblies (Lee et al. 2021). The code used is below, minimap2 is used to map reads for each step of polishing. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7rt2d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"92oas\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3i8p2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"b1s85\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"tables\",\"mutability\":\"IMMUTABLE\",\"data\":{\"cellsMeta\":{},\"colTitles\":[\"Tool\",\"Link\"],\"colWidths\":[100,\"458\"],\"data\":[[\"Racon\",\"https://github.com/isovic/racon\"],[\"Pilon\",\"https://github.com/broadinstitute/pilon\"],[\"POLCA\",\"https://github.com/alekseyzimin/masurca\"],[\"Medaka\",\"https://github.com/nanoporetech/medaka\"]],\"guid\":\"468BE52601E24823AE5603729E23652F\",\"isJexcelDataFormat\":true,\"legend\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"24bf8\",\"text\":\"Table 2: List of tools that can be used for de novo genome polishing and links to their repositories\",\"type\":\"unstyled\"}],\"entityMap\":{}},\"mergeCells\":{},\"printData\":[[\"Racon\",\"https://github.com/isovic/racon\"],[\"Pilon\",\"https://github.com/broadinstitute/pilon\"],[\"POLCA\",\"https://github.com/alekseyzimin/masurca\"],[\"Medaka\",\"https://github.com/nanoporetech/medaka\"]],\"rowHeights\":[23,23,23,23]}},\"1\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5dm8f\",\"text\":\"#install programs \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6i0e3\",\"text\":\"mamba install bioconda::racon\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"aj45o\",\"text\":\"mamba install bioconda::medaka\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2plh\",\"text\":\"mamba install install minimap2\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"aq8cg\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"csri6\",\"text\":\"#run minimap2 with recommended parameters for ONT\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"80uv7\",\"text\":\"minimap2 -ax map-ont -t \\u003cn\\u003e-K5g -I50g polished1.fasta all_lotus.fastq.gz \\u003e polished1.sam\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"drut1\",\"text\":\"#run racon with recommended parameters for ONT \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7f8bp\",\"text\":\"racon -m 8 -x 6 -g -8 -w 500 -t \\u003cn\\u003e all.fastq.gz polished1.sam polished1.fasta \\u003e polished2.fasta\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9k8id\",\"text\":\"#repeat this (minimap2 into racon) x4\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dboic\",\"text\":\"#run medaka with recommend ONT parameters, the model should be the same model used for basecalling ONT reads\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"312rk\",\"text\":\"medaka_consensus -i all.fastq.gz -d polished4.fasta -o medaka_consensus -t \\u003cn\\u003e-m r1041_e82_400bps_hac_v4.2.0\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"eu2n1\",\"text\":\"\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"D98FB04170CD47E5BCFFD0CAC6DF889B\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"8","cases":[],"critical":null},{"id":2027447,"guid":"DD7A606B326A401A976D592E4AEE06D4","previous_id":2027440,"previous_guid":"3A52F1044248437695751E92E5969F18","section":"\u003cp\u003eRemove Haplotigs\u003c/p\u003e","section_color":"#EA94FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"2tea0\",\"text\":\"As discussed, plant genomes contain areas of high heterogeneity, this can cause issues when looking to recognize haplotype homology during genome assembly.  To counteract this issue, Purge Haplotigs was used on the draft genome assembly during multiple steps to improve the genome assembly by labeling haplotigs. Purge Haplotigs uses Minimap2 alignments and mapped read coverage to discover contig pairs that are syntenic and assign one of the contigs to a haplotig “pool” and remove the haplotigs from the primary assembly \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1t85\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2nhk7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7ng77\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4tv0s\",\"text\":\"#\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8ft5i\",\"text\":\"purge_haplotigs hist -b all_reads.bam -g consensus.fasta -t 12\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"cl4u3\",\"text\":\"#\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"elvga\",\"text\":\"purge_haplotigs contigcov -i all_reads.bam.gencov -l 0 -m 100 -h 200\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"20j62\",\"text\":\"#\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"61eq7\",\"text\":\"purge_haplotigs purge -g consensus.fasta -c coverage_stats.csv -b all_reads.bam -d -a 50 -t 12\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"0E7E172B4C124B0AB64EF40A11744732\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9","cases":[],"critical":null},{"id":2027448,"guid":"7FDD8375A1184B49AED3322A121CEC0A","previous_id":2027447,"previous_guid":"DD7A606B326A401A976D592E4AEE06D4","section":"\u003cp\u003eScaffolding\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"cb8so\",\"text\":\"When high quality genomes of closely related species are available, tools such as RagTag can be used to scaffold assembled contigs to known chromosomes of the related species (Volarić et al. 2022). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ghf6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2qjlm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7n10i\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"1ma50\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6u0hp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8f0gn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dlhot\",\"text\":\"#Install ragtag\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"61na1\",\"text\":\"mamba install -c bioconda ragtag\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7ihd5\",\"text\":\"#Run ragtag with the recommended settings \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f2goa\",\"text\":\"ragtag.py scaffold reference_genome.fna genome.fasta --remove-small -f 10000 -t 12 -u -e scaffold.lst \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bh923\",\"text\":\"#Remove the _ragtag from the names for downstream analysis\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dg67c\",\"text\":\"sed -e 's/_RagTag//g' ragtag.genome.fasta \\u003e genome.fasta\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2d13g\",\"text\":\"#Check names \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"reab\",\"text\":\"bioawk -c fastx '{print $name}' scaffold.fasta \\u003e scaffold.lst\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"63774F92381F4B5D9EB0D5A4A898D856\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"10","cases":[],"critical":null},{"id":2027533,"guid":"4B25C7468C714200945B7ADAFFF0DFBE","previous_id":2027448,"previous_guid":"7FDD8375A1184B49AED3322A121CEC0A","section":"\u003cp\u003eStructural Annotation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6v30t\",\"text\":\"After assembly is completed, the draft genome must then go through the process of structural gene annotation. This method finds the positions of genomic features such as protein-coding genes, promoters, and regulatory elements, which can be a challenge for plant genomes as they contain highly repetitive elements (M. E. Bolger, Arsova, and Usadel 2018).  There are several popular protocols available for this process and all go through a similar workflow that use multiple tools and consists of three main stages: masking noncoding regions, predicting gene structure positions, and then finally assigning biological meaning to those predictions (Table 12; Jung et al. 2020). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"11","cases":[],"critical":null},{"id":2027534,"guid":"D53812E9FBE6424DBCF5C310534490A6","previous_id":2026526,"previous_guid":"052AB31C0BDA4BAFA4AA4610B4AA4422","section":"\u003cp\u003eStructural Annotation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"f9qqr\",\"text\":\"For plants, the general process of repeat masking is performed by two main packages RepeatMasker and Repeatmodeler2, both of which soft mask or obscure repeated regions to annotation software (Smit, Hubley, and Green 2015; Flynn et al. 2020). First we use repeatmodeler to create a database and \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8shln\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6kg10\",\"text\":\"Below is example code for both programs. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fimcq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e1n7u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2bbvs\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"1c7ub\",\"text\":\"\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2bac5\",\"text\":\"#install program \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"d0a9g\",\"text\":\"mamba install repeatmodeler\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f3l4u\",\"text\":\"#create database \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"48r03\",\"text\":\"BuildDatabase -name \\u003cnameofdatabase\\u003e \\u003creference_genome.fa\\u003e \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9t8nv\",\"text\":\"#run program \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"98ce9\",\"text\":\"RepeatModeler -database \\u003cnameofdatabase\\u003e -pa \\u003cn\\u003e -LTRStruct \\u003e out.log \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6dfed\",\"text\":\"#now we can use this output to run RepeatMasker to softmask our genome \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"86vb2\",\"text\":\"RepeatMasker -pa \\u003cn\\u003e -gff -lib \\u003coutput_of_modeler\\u003e -dir \\u003coutput_directory_name\\u003e \\u003cgenome.fasta\\u003e\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"6AB1026FF2624584A27B507293FAA3ED\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"13","cases":[],"critical":null},{"id":2027536,"guid":"3B97686E8E0846AE9502174F7F9E8318","previous_id":2026527,"previous_guid":"B1AE8E8CDD2C423A93B72944016EB096","section":"\u003cp\u003eFunctional Annotation \u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"d3m1n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dfbfh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"72i9e\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[{\"key\":0,\"length\":39,\"offset\":47}],\"inlineStyleRanges\":[],\"key\":\"bvd2j\",\"text\":\"#install EnTAP based on the site instructions (https://entap.readthedocs.io/en/latest/)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"97ruj\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"djnep\",\"text\":\"#Run database configuration, this can be run for all databases that your will search against eg: nr, swissprot, etc.. \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5hhvf\",\"text\":\"EnTAP --config -d  /Path_to_database_fasta/nr_database.fasta --out-dir output_folder -t \\u003cn\\u003e--ini entap_config.ini\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3c3tj\",\"text\":\"#Run EnTAP \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"74e1e\",\"text\":\"EnTAP --runP -i protiens.pep -d /Path_to_database/nr.dmnd -t \\u003cn\\u003e--ini Path_to_Entap/EnTAP-v0.10.8-beta/entap_config.ini\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7416a\",\"text\":\"\",\"type\":\"unstyled\"}],\"entityMap\":{\"0\":{\"data\":{\"guid\":\"1E840FF4017E11EFA2710A58A9FEAC02\",\"url\":\"https://entap.readthedocs.io/en/latest\"},\"mutability\":\"MUTABLE\",\"type\":\"link\"}},\"guid\":\"7A76C689EFE4484DA13022EB456E3C91\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"16","cases":[],"critical":null},{"id":2027537,"guid":"C6C7BD680CF049E89B8EAA598A305125","previous_id":2027534,"previous_guid":"D53812E9FBE6424DBCF5C310534490A6","section":"\u003cp\u003eStructural Annotation\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ciqqn\",\"text\":\"Gene prediction on the remaining regions then takes place via evidenced based, evidence free, or a combination of the two methods.  Evidence based methods use RNA-Seq data and protein sequence search algorithms, while evidence free methods rely on gene structure and signal based searches to predict genes (Z. Wang, Chen, and Li 2004). Here we will use BRAKER3, for on protein and RNA seq data to complete to most accurate annotation. BRAKER uses a combination of GenMark-ETP, AUGUSTUS and TESBRA to perform annotations. An example code is provided below. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1p7v9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bv346\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5uic4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"714g4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[{\"key\":0,\"length\":67,\"offset\":5}],\"inlineStyleRanges\":[],\"key\":\"8u2u8\",\"text\":\"wget https://repo.anaconda.com/archive/Anaconda3-2018.12-Linux-x86_64.sh\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"61dom\",\"text\":\"bash bin/Anaconda3-2018.12-Linux-x86_64.sh # do not install VS (needs root privileges)\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ks0d\",\"text\":\"mamba install -c anaconda perl\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"9bus4\",\"text\":\"mamba install -c anaconda biopython\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bc8i\",\"text\":\"mamba conda install -c bioconda perl-app-cpanminus\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6oedu\",\"text\":\"mamba install -c bioconda perl-file-spec\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"1eg3d\",\"text\":\"mamba install -c bioconda perl-hash-merge\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b9vcg\",\"text\":\"mamba install -c bioconda perl-list-util\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f2pkv\",\"text\":\"mamba install -c bioconda perl-module-load-conditional\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"dv4h6\",\"text\":\"mamba install -c bioconda perl-posix\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"7oc0c\",\"text\":\"mamba install -c bioconda perl-file-homedir\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"5v4kt\",\"text\":\"mamba install -c bioconda perl-parallel-forkmanager\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"4oe1j\",\"text\":\"mamba install -c bioconda perl-scalar-util-numeric\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ab6vi\",\"text\":\"mamba install -c bioconda perl-yaml\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2ki3e\",\"text\":\"mamba install -c bioconda perl-class-data-inheritable\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"e65c0\",\"text\":\"mamba install -c bioconda perl-exception-class\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b0829\",\"text\":\"mamba install -c bioconda perl-test-pod\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b9l7a\",\"text\":\"mamba install -c bioconda perl-file-which # skip if you are not comparing to reference annotation\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"b64l\",\"text\":\"mamba install -c bioconda perl-mce\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"o9v6\",\"text\":\"mamba install -c bioconda perl-threaded\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8d6kf\",\"text\":\"mamba install -c bioconda perl-list-util\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2rp2t\",\"text\":\"mamba install -c bioconda perl-math-utils\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"2jeo9\",\"text\":\"mamba install -c bioconda cdbtools\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"8tomj\",\"text\":\"mamba install -c eumetsat perl-yaml-xs\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"bd5s5\",\"text\":\"mamba install -c bioconda perl-data-dumper\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3cgam\",\"text\":\"mamba install braker3\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a7hlk\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"hrav\",\"text\":\"#Change perl paths to work with conda \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"3mkfv\",\"text\":\"perl change_path_in_perl_scripts.pl \\\"/home/chase/miniforge3/envs/braker3env/bin perl\\\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"57lk4\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[{\"key\":1,\"length\":72,\"offset\":57}],\"inlineStyleRanges\":[],\"key\":\"5bv5i\",\"text\":\"#run Braker, protiens cabe be taken OrthDB/Prothint, see https://github.com/gatech-genemark/ProtHint#protein-database-preparation for instructions\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"27l31\",\"text\":\"braker.pl --genome=\\u003cgenome.fasta\\u003e --prot_seq=\\u003cproteins.fa\\u003e --bam=genome.bam --threads=\\u003cn\\u003e--busco_lineage=\\u003cfabales_odb10\\u003e\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"ddb7s\",\"text\":\"\",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"6ak94\",\"text\":\"#get gtf statistics \",\"type\":\"unstyled\"},{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a3fq9\",\"text\":\"/Path_to_ausgustus/agat_sp_statistics.pl -gff braker.gtf -g Lotus_use.fasta\",\"type\":\"unstyled\"}],\"entityMap\":{\"0\":{\"data\":{\"guid\":\"F003DD9F017B11EFA2710A58A9FEAC02\",\"url\":\"https://repo.anaconda.com/archive/Anaconda3-2018.12-Linux-x86_64.sh\"},\"mutability\":\"MUTABLE\",\"type\":\"link\"},\"1\":{\"data\":{\"guid\":\"36C72696017D11EFA2710A58A9FEAC02\",\"url\":\"https://github.com/gatech-genemark/ProtHint#protein-database-preparation\"},\"mutability\":\"MUTABLE\",\"type\":\"link\"}},\"guid\":\"909EE6984E2E4FF3BD92BFB52D15403F\"}}}}","data":null,"protocol_id":98608,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"14","cases":[],"critical":null}],"template_id":0,"title":"De - Novo Genome Protocol from only ONT reads","title_html":"De - Novo Genome Protocol from only ONT reads","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"µg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"°К","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"μV","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (µM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"µm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":207,"type_id":3,"name":"V","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"de-novo-genome-protocol-from-only-ont-reads-dciq2udw","url":"https://www.protocols.io/view/de-novo-genome-protocol-from-only-ont-reads-dciq2udw","version_class":98608,"version_data":{"id":0,"code":"dciq2udw","version_class":98608,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"merge_request":null},"version_id":0,"version_uri":"de-novo-genome-protocol-from-only-ont-reads-kxygxypz4l8j/v1","versions":[{"id":98608,"title":"De - Novo Genome Protocol from only ONT reads","title_html":"De - Novo Genome Protocol from only ONT reads","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":null,"uri":"de-novo-genome-protocol-from-only-ont-reads-dciq2udw","published_on":1714149007,"modified_on":1714149007,"version_class":98608,"version_id":0,"version_code":"dciq2udw","version_uri":"de-novo-genome-protocol-from-only-ont-reads-kxygxypz4l8j/v1","created_on":1713798071,"categories":null,"type_id":1,"creator":{"name":"Chase Donnelly","affiliation":"University of Antwerpen ","affiliation_url":null,"username":"chase-donnelly","link":null,"image":{"source":"/img/avatars/017.png","placeholder":"/img/avatars/017.png","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}