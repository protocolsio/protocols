{"id":37563,"title":"Use SSH Public Key Authentication","title_html":"<p>Use SSH Public Key Authentication<\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":null,"doi_status":0,"uri":"use-ssh-public-key-authentication-bgw3jxgn","type_id":1,"published_on":1590643270,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"created_on":1590634650,"categories":null,"creator":{"name":"Natapol Pornputtapong","affiliation":"Faculty of Pharmaceutical Sciences, Chulalongkorn University","affiliations":[{"affiliation":"Faculty of Pharmaceutical Sciences, Chulalongkorn University","url":"","is_default":1}],"username":"natapol-pornputtapong","link":null,"image":{"source":"\/img\/avatars\/008.png","placeholder":"\/img\/avatars\/008.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"public":1,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":2,"authors":[{"name":"Natapol Pornputtapong","affiliation":"Faculty of Pharmaceutical Sciences, Chulalongkorn University","affiliations":[],"username":"natapol-pornputtapong","link":null,"image":{"source":"\/img\/avatars\/008.png","placeholder":"\/img\/avatars\/008.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":1886,"uri":"s3bio","title":"S3Bio","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/ff81e9f3cf980a6daeaaec3bb99bde954afb4de1b0a249e7be428ce17f0ee871\/b94ai9sw.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/ff81e9f3cf980a6daeaaec3bb99bde954afb4de1b0a249e7be428ce17f0ee871\/b94ai9sw.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":1886,"uri":"s3bio","title":"S3Bio","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/ff81e9f3cf980a6daeaaec3bb99bde954afb4de1b0a249e7be428ce17f0ee871\/b94ai9sw.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/ff81e9f3cf980a6daeaaec3bb99bde954afb4de1b0a249e7be428ce17f0ee871\/b94ai9sw.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":true,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Use SSH Public Key Authentication","title_html":"Use SSH Public Key Authentication","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"use-ssh-public-key-authentication-bgw3jxgn","type_id":1,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1590643269,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/use-ssh-public-key-authentication-bgw3jxgn","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":0,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"E7256810A08E11EAA8506B9387BD32DD","state_version_id":12,"steps":[{"id":951134,"guid":"F6221390A08E11EAA8506B9387BD32DD","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E70C8F5ED0B549C791AEE9263D2E2E21","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"10E93C05F01F419181B5D086D3D754E7","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"F058D920A09411EAA8506B9387BD32DD","order_id":2,"type_id":15,"title":"command","source":{"id":7403,"name":"$ ssh-keygen\nGenerating public\/private rsa key pair.\nEnter file in which to save the key (\/Users\/yourname\/.ssh\/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in \/Users\/yourname\/.ssh\/id_rsa.\nYour public key has been saved in \/Users\/yourname\/.ssh\/id_rsa.pub.\nThe key fingerprint is:\nd7:21:c7:d6:b8:3a:29:29:11:ae:6f:79:bc:67:63:53 yourname@machine\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|           . o   |\n|      .   . * .  |\n|     . .   = o   |\n|      o S . o    |\n|     . . o oE    |\n|    . .oo +.     |\n|     .o.o.*.     |\n|     ....= o     |\n+-----------------+","command_name":"ssh-keygen","command":"ssh-keygen generates, manages and converts authentication keys for ssh(1).  ssh-keygen can create keys for use by SSH\n     protocol version 2.\n\n     The type of key to be generated is specified with the -t option.  If invoked without any arguments, ssh-keygen will gen-\n     erate an RSA key.\n\n     ssh-keygen is also used to generate groups for use in Diffie-Hellman group exchange (DH-GEX).  See the MODULI GENERATION\n     section for details.\n\n     Finally, ssh-keygen can be used to generate and update Key Revocation Lists, and to test whether given keys have been\n     revoked by one.  See the KEY REVOCATION LISTS section for details.\n\n     Normally each user wishing to use SSH with public key authentication runs this once to create the authentication key in\n     ~\/.ssh\/id_dsa, ~\/.ssh\/id_ecdsa, ~\/.ssh\/id_ed25519 or ~\/.ssh\/id_rsa.  Additionally, the system administrator may use this\n     to generate host keys, as seen in \/etc\/rc.\n\n     Normally this program generates the key and asks for a file in which to store the private key.  The public key is stored\n     in a file with the same name but ``.pub'' appended.  The program also asks for a passphrase.  The passphrase may be empty\n     to indicate no passphrase (host keys must have an empty passphrase), or it may be a string of arbitrary length.  A\n     passphrase is similar to a password, except it can be a phrase with a series of words, punctuation, numbers, whitespace,\n     or any string of characters you want.  Good passphrases are 10-30 characters long, are not simple sentences or otherwise\n     easily guessable (English prose has only 1-2 bits of entropy per character, and provides very bad passphrases), and con-\n     tain a mix of upper and lowercase letters, numbers, and non-alphanumeric characters.  The passphrase can be changed later\n     by using the -p option.\n\n     There is no way to recover a lost passphrase.  If the passphrase is lost or forgotten, a new key must be generated and\n     the corresponding public key copied to other machines.\n\n     ssh-keygen will by default write keys in an OpenSSH-specific format.  This format is preferred as it offers better pro-\n     tection for keys at rest as well as allowing storage of key comments within the private key file itself.  The key comment\n     may be useful to help identify the key.  The comment is initialized to ``user@host'' when the key is created, but can be\n     changed using the -c option.\n\nIt is still possible for ssh-keygen to write the previously-used PEM format private keys using the -m flag.  This may be\n     used when generating new keys, and existing new-format keys may be converted using this option in conjunction with the -p\n     (change passphrase) flag.\n\n     After a key is generated, instructions below detail where the keys should be placed to be activated.","os_name":"linux","os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":951135,"guid":"F98B2070A09411EAA8506B9387BD32DD","previous_id":951134,"previous_guid":"F6221390A08E11EAA8506B9387BD32DD","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E02FFD7155CF43D286E3052EF758AAC5","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"D93E1CA762D44CA8B4785A0F63C0443A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><\/div>"}},{"id":1054725,"guid":"73E197F0A09F11EAA8506B9387BD32DD","order_id":2,"type_id":15,"title":"command","source":{"id":7404,"name":"$ ssh-copy-id user@adress","command_name":"ssh-copy-id","command":"ssh-copy-id is a script that uses ssh(1) to log into a remote machine (presumably using a login password, so password\n     authentication should be enabled, unless you've done some clever use of multiple identities).  It assembles a list of one\n     or more fingerprints (as described below) and tries to log in with each key, to see if any of them are already installed\n     (of course, if you are not using ssh-agent(1) this may result in you being repeatedly prompted for pass-phrases).  It\n     then assembles a list of those that failed to log in, and using ssh, enables logins with those keys on the remote server.\n     By default it adds the keys by appending them to the remote user's ~\/.ssh\/authorized_keys (creating the file, and direc-\n     tory, if necessary).  It is also capable of detecting if the remote system is a NetScreen, and using its `set ssh pka-dsa\n     key ...' command instead.","os_name":"linux","os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":null,"materials":[],"description":null,"changed_on":1590643270}