{"access":{"can_view":true,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":false,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"authors":[{"name":"Matthew D. Hays","affiliation":"University of Maryland Center for Environmental Science","affiliation_url":"","username":"matthew-d-hays","link":"","image":{"source":"/img/avatars/008.png","placeholder":"/img/avatars/008.png","webp_source":""},"note":"","is_verified_user":true},{"name":"Clara A. Fuchsman","affiliation":"University of Maryland Center for Environmental Science","affiliation_url":null,"username":"","link":null,"image":{"source":"","placeholder":"","webp_source":""},"note":"","is_verified_user":false}],"before_start":"{\"blocks\":[{\"key\":\"7iihe\",\"text\":\"To utilize this pipeline, you will need to have a good computer that can use unix/linux terminal window. If you are using a laptop, you can greatly increase your storage capacity by having your metagenomic read blast databases on an external hard drive. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1716412181,"creator":{"name":"Clara A. Fuchsman","affiliation":"University of Maryland Center for Environmental Science","affiliation_url":"","username":"clara-a-fuchsman","link":"https://www.umces.edu/clara-fuchsman","image":{"source":"https://lh3.googleusercontent.com/a/ACg8ocJJIGLc67Y1SAOfgokXZliBI7UVAjEwrlQJBZw2XrsIeZ3HBA=s96-c","placeholder":"https://lh3.googleusercontent.com/a/ACg8ocJJIGLc67Y1SAOfgokXZliBI7UVAjEwrlQJBZw2XrsIeZ3HBA=s96-c","webp_source":""},"badges":[{"id":6,"name":"Science accelerator","image":{"source":"/img/badges/accelerator.svg","placeholder":"/img/badges/accelerator.svg"}}],"affiliations":[{"affiliation":"University of Maryland Center for Environmental Science","url":"","job_title":"Assistant Professor","is_default":true}]},"cross_cloud_origin":null,"description":"{\"blocks\":[{\"key\":\"907vi\",\"text\":\"This protocol is for phylogenetic read placement of metagenomic reads in as quantitative a manner as possible without  addition of known standards. This protocol includes assembly of metagenomes into contigs, creation of phylogenetic trees including proteins from assembled contigs, the phylogenetic read placement of metagenomic reads onto the tree, taxonomic identification, and collation by taxonomy and metagenomic sample. Several published software are used in this protocol, but here we share our scripts for using the outputs from this software in as quantitative a manner as is possible. This protocol is a daughter protocol to the PHAN-C pipeline which is available online, but our protocol using more recently published programs including epa-ng, gappa, and RaxML-ng. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"","document":"","documents":null,"doi":"dx.doi.org/10.17504/protocols.io.4r3l2q24xl1y/v1","doi_status":1,"ethics_statement":"","fork_id":null,"fork_info":null,"forks":[],"funders":[],"groups":[],"guid":"A27EFF24E5CB4ECFA4B6740DDB872BCA","guidelines":"{\"blocks\":[{\"key\":\"6t3f4\",\"text\":\"Keep a computer notebook that includes all your commands used and notes about results. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9shij\",\"text\":\"Use a text file, but do not use a Word file as Word messes up dashes and returns. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","has_references":true,"has_step_reagents":false,"has_versions":false,"id":100319,"image":{"source":"https://content.protocols.io/files/q8t9cdvfx.jpg","webp_source":"https://content.protocols.io/files/q8t8cdvfx.webp","placeholder":"https://content.protocols.io/files/q8rgcdvfx.jpg","webp_placeholder":""},"image_attribution":"{\"blocks\":[{\"key\":\"1etb7\",\"text\":\"Image adapted from Fuchsman et al 2021 Environmental Microbiology 23: 2782-2800.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","in_trash":false,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":false,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":1252692,"journal":null,"journals":[],"keywords":"Phylogenetic read placement ,Metagenome,Bioinformatics","last_modified":1723066147,"link":"","location":null,"manuscript_citation":"{\"blocks\":[{\"key\":\"1q52c\",\"text\":\"Fuchsman, C. A., Garcia Prieto, D., Hays, M. D., \\u0026 Cram, J. A. (2023).\\nAssociations between picocyanobacterial ecotypes and cyanophage host genes\\nacross ocean basins and depth. PeerJ, 11, e14924.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":177,\"length\":5},{\"style\":\"italic\",\"offset\":184,\"length\":2}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","materials":[],"materials_text":"{\"blocks\":[{\"key\":\"6e99a\",\"text\":\"Install the following programs:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6gm7m\",\"text\":\"Biopython (Cock et al 2009)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cgmg9\",\"text\":\"epa-ng (Barbera et 2019) \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d76ei\",\"text\":\"gappa (Czech et al 2020)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3tcne\",\"text\":\"Trimmomatic (Bolger et al 2014)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3bh1v\",\"text\":\"muscle (Edgar et al 2004)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6rs9s\",\"text\":\"Prokka (Seemann 2014)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3v1tk\",\"text\":\"MegaHIT (Li et al 2015)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7287n\",\"text\":\"RAxML version 8 (Stamatakis 2014)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1bs3g\",\"text\":\"RAxML-ng (Kozlov et al 2019)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3kg2q\",\"text\":\"PaPaRa 2.0 (Berger et al 2011, 2012)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqk0n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9n78o\",\"text\":\"All of these programs should be able to be installed with conda. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"{\"blocks\":[{\"key\":\"9lh1r\",\"text\":\"1. Altschul, S. F., Madden, T. L., Schäffer, A. A.,\\nZhang, J., Zhang, Z., Miller, W., \\u0026 Lipman, D. J. (1997). Gapped BLAST and\\nPSI-BLAST: a new generation of protein database search programs. Nucleic\\nAcids Res., 25, 3389–3402.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":192,\"length\":18},{\"style\":\"italic\",\"offset\":212,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4nucr\",\"text\":\"2. Barbera, P., Kozlov, A. M., Czech, L., Morel, B., Darriba, D., Flouri, T.,\\n\\u0026 Stamatakis, A. (2019). EPA-ng: Massively Parallel Evolutionary Placement\\nof Genetic Sequences. Systematic Biology, 68(2), 365–369.\\nhttps://doi.org/10.1093/sysbio/syy054\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":175,\"length\":18},{\"style\":\"italic\",\"offset\":195,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"212ne\",\"text\":\"3. Berger, S. A., \\u0026 Stamatakis, A. (2011). Aligning short reads to\\nreference alignments and trees. Bioinformatics, 27(15),\\n2068–2075. https://doi.org/10.1093/bioinformatics/btr320\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":99,\"length\":14},{\"style\":\"italic\",\"offset\":115,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1a326\",\"text\":\"4. Berger, S. A., \\u0026 Stamatakis, A. (2012). PaPaRa 2.0: a vectorized\\nalgorithm for probabilistic phylogeny-aware alignment extension.Institute\\nfor Theoretical Studies,  Retrieved from http://sco.h-its.org/exelixis/pubs/Exelixis-RRDR-2012-5.pdf\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":132,\"length\":35}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bsiob\",\"text\":\"5. Bolger, A. M., Lohse, M., \\u0026 Usadel, B. (2014). Trimmomatic: a flexible\\ntrimmer for Illumina sequence data. Bioinformatics, 30(15), 2114–2120.\\nhttps://doi.org/10.1093/bioinformatics/btu170 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":110,\"length\":14},{\"style\":\"italic\",\"offset\":126,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"72o93\",\"text\":\"6. Czech, L., Barbera, P., \\u0026 Stamatakis, A. (2020). Genesis and Gappa:\\nprocessing, analyzing and visualizing phylogenetic (placement) data. Bioinformatics,\\n36(February), 3263–3265. https://doi.org/10.1093/bioinformatics/btaa070\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":140,\"length\":14},{\"style\":\"italic\",\"offset\":156,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2hr8v\",\"text\":\"7. Edgar, R. C. (2004). MUSCLE: multiple sequence alignment with high\\naccuracy and high throughput. Nucleic Acids Res, 32, 1792–1797.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":100,\"length\":17},{\"style\":\"italic\",\"offset\":119,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ajv2g\",\"text\":\"8. Fuchsman, C. A., Garcia Prieto, D., Hays, M. D., \\u0026 Cram, J. A. (2023).\\nAssociations between picocyanobacterial ecotypes and cyanophage host genes\\nacross ocean basins and depth. PeerJ, 11, e14924.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":180,\"length\":5},{\"style\":\"italic\",\"offset\":187,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"27ipr\",\"text\":\"9. Kozlov, A. M., Darriba, D., Flouri, T., Morel, B., \\u0026 Stramatakis, A.\\n(2019). RAxML-ng: a fast, scalable and user-friendly tool for maximum\\nlikelihood phylogenetic inference. Bioinformatics, 35, 4453–4455.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":177,\"length\":14},{\"style\":\"italic\",\"offset\":193,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"82k3p\",\"text\":\"10. Li, D., Liu, C. M., Luo, R., Sadakane, K., \\u0026 Lam, T. W. (2015).\\nMEGAHIT: An ultra-fast single-node solution for large and complex metagenomics\\nassembly via succinct de Bruijn graph. Bioinformatics, 31(10),\\n1674–1676. https://doi.org/10.1093/bioinformatics/btv033\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":186,\"length\":14},{\"style\":\"italic\",\"offset\":202,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f42lo\",\"text\":\"11. Seemann, T. (2014). Prokka: rapid prokaryotic genome annotation. Bioinformatics,\\n30(14), 2068–2069. https://doi.org/10.1093/bioinformatics/btu153\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":69,\"length\":14},{\"style\":\"italic\",\"offset\":85,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fsi44\",\"text\":\"12. Stamatakis, A. (2014). RAxML version 8: A tool for phylogenetic analysis\\nand post-analysis of large phylogenies. Bioinformatics, 30,\\n1312–1313. https://doi.org/10.1093/bioinformatics/btu033\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":117,\"length\":14},{\"style\":\"italic\",\"offset\":133,\"length\":2}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dlipv\",\"text\":\"13. Zaharias, P., Lemoine, F., \\u0026 Gascuel, O. (2023). Robustness of\\nFelsenstein’s Versus Transfer Bootstrap Supports With Respect to Taxon\\nSampling. Systematic Biology, 72(6), 1280–1295.\\nhttps://doi.org/10.1093/sysbio/syad0521. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":148,\"length\":18},{\"style\":\"italic\",\"offset\":168,\"length\":2}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","public":true,"public_fork_note":"","published_on":1723066147,"references":[],"related_equipments":[],"related_materials":[],"reserved_doi":"","retraction_reason":null,"samples":{},"shared_access_id":265,"show_comparison":false,"sign_info":null,"space_access":{"can_view":false,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":true,"can_get_doi":true,"can_share":false,"can_move":false,"can_move_outside":false,"can_transfer":false,"can_download":false,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"space_id":121208,"state_version_id":4376,"stats":{"is_voted":false,"number_of_views":16,"number_of_steps":38,"number_of_bookmarks":0,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it's working"},"steps":[{"id":2066487,"guid":"0470D7B2EE894D75A3B2E32983E6F50A","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"91b2m\",\"text\":\"Rename all the metagenome filenames so that they include\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"47t7g\",\"text\":\"Depth_Cruise_Station\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7qitt\",\"text\":\"This can be done during the QC step, or by hand\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1","cases":[],"critical":null},{"id":2066488,"guid":"262942BF6A5D4B829CE8C53F14D50521","previous_id":2066525,"previous_guid":"6DF40DA0E4F24963903310203CF47F6B","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"2adlb\",\"text\":\"Collect all available relevant reference sequences from NCBI (or public database of choice) that you want on your tree. Make sure your tree has outgroups which include other closely related genes or organisms. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fdbdr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1r6c3\",\"text\":\"Also choose some sequences across the diversity of the tree to be \\\"seeds\\\" for blasting and place these in a \\\"seed\\\" text file.  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"mb5h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1hn4n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"13","cases":[],"critical":null},{"id":2066496,"guid":"76F0DDF47BD64C8E972F957282C30B66","previous_id":2066584,"previous_guid":"0F6F196BF896467CB0CA9D809993F584","section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8r3qo\",\"text\":\"Use script Counting_whole_folder.py to count the number of reads in the file, for every metagenome in a folder. In this script, change the outfile name if desirable. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4nrp1\",\"text\":\"This script outputs a text file with the name of the metagenome and the number reads in the file.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6uvht\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"hgtf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dq6bv\",\"text\":\"Remember to include the pathway to the folder where you are storing the script in the command. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"25d2t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b6ii3\",\"text\":\"The script can be found on GitHub\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dcfae\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/Counting_whole_folder.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":95}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Counting metagenomic reads of a folder full of metagenomes\",\"description\":\"\",\"guid\":\"266A8CFD188411EFAE230A58A9FEAC02\",\"name\":\"python Counting_whole_folder.py\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"E58F93FF188111EFAE230A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/Counting_whole_folder.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5","cases":[],"critical":null},{"id":2066504,"guid":"7178CFFF533F4B5D988737EF4967E826","previous_id":2066488,"previous_guid":"262942BF6A5D4B829CE8C53F14D50521","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"bfe0r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eabfd\",\"text\":\"Blast your database of assembled proteins using the seed file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5fk9j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5bl3q\",\"text\":\"For this we use e values between -60 and -100, depending on the desired results. If we are looking at a particular organisms, we might use an e value of -100. If we are looking at the whole community, an e value of -60 allows broader results. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"39nk1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"5ukb9\",\"text\":\"This output is not user friendly so we must use the following parse script to be able to get a useable output.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ee5ak\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6vtho\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"emmen\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Blast protein database\",\"description\":\"Blast database of proteins for adding sequences to a phylogenetic tree.\",\"guid\":\"774B554F188211EFAE230A58A9FEAC02\",\"name\":\"/Applications/blast/bin/blastp -db /Users/clara/Desktop/ETNP_2012/Megahit_assembly/Protein_blastdb_megahit_ETNP/MEGAHIT_proteome -query /Users/clara/Downloads/PioA_blast.txt  -out PioA_blast_megahit_ETNP_2012_e60.xml -outfmt 5 -num_threads 8 -max_target_seqs 100000 -evalue 1e-60\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"14","cases":[],"critical":null},{"id":2066518,"guid":"D625878E92404170B3CB1F7602074CD4","previous_id":2066504,"previous_guid":"7178CFFF533F4B5D988737EF4967E826","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1p6sb\",\"text\":\"Here is a link to the Parse script used to make the output useable. This script uses python 2. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"k21d\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/parse_blast_xml_imac.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":94}],\"data\":{}},{\"key\":\"8ropj\",\"text\":\"Script credit: Cedar McKay\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dhh6q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1c3g\",\"text\":\"For python 3, use: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"26a5q\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/phan-parseBlastXML.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":92}],\"data\":{}},{\"key\":\"6s170\",\"text\":\"Script credit: Cedar McKay and the PHAN-C pipeline\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f0gu2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8lqta\",\"text\":\"Both scripts use the same inputs. For more information about this script, read:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dfjcn\",\"text\":\"https://phans-c-pipeline.readthedocs.io/en/latest/Tutorial.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":63}],\"data\":{}},{\"key\":\"d4sil\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bonha\",\"text\":\"This script uses Biopython (Cock et al 2009)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aq1li\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"31n1d\",\"text\":\"In this command, c is the number of threads.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9dud3\",\"text\":\"-e is the path for the blast database. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"89oi7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d9iov\",\"text\":\"Keep track of output in the terminal window which should look like:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ol5p\",\"text\":\"1310 of 2264 were unique hits (57.86%)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ra30\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"biukf\",\"text\":\"The  script creates 3 files. This time we want the blast.best.hits_all.fasta, which is a list of non-redundant fasta files. . \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"da5si\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aaf45\",\"text\":\"The  blast.best.hits_all.fasta file can then be added to the reference sequence fasta file.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"158vr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"17AC2430188311EFAE230A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/parse_blast_xml_imac.py\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"BC263C981C5811EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/phan-parseBlastXML.py\"}},\"2\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"0E08705B1C5911EFA15F0A58A9FEAC02\",\"url\":\"https://phans-c-pipeline.readthedocs.io/en/latest/Tutorial.html\"}},\"3\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Parse script command\",\"description\":\"Parse the blast output file\",\"guid\":\"6A3EEFE951AB11EF9BF00A58A9FEAC02\",\"name\":\"python /Users/clara/Desktop/scripts/parse_blast_xml_imac.py -f Blastfile_Proteins_AA_blast.xml -l -n 0 -c 8 -e /Users/clara/Desktop/ETNP_2012/ETNP_2012_Assembled_Protiens\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"15","cases":[],"critical":null},{"id":2066519,"guid":"B34327AA746042DEBF1B68F6BC4CB07B","previous_id":2074458,"previous_guid":"741D4BB2C7F74B82A179E339B1894B32","section":"\u003cp\u003eMaking local Blast Databases\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"diqa6\",\"text\":\"Install Blast+ (Altschul et al.,1997)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"86el5\",\"text\":\"I recommend installing all software with conda\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f35es\",\"text\":\"See directions here: https://conmeehan.github.io/blast+tutorial.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":21,\"length\":47}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"36FFE6D4188311EFAE230A58A9FEAC02\",\"url\":\"https://conmeehan.github.io/blast+tutorial.html\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"10","cases":[],"critical":null},{"id":2066522,"guid":"CC385996AA694EC793F605747EF464B2","previous_id":2066519,"previous_guid":"B34327AA746042DEBF1B68F6BC4CB07B","section":"\u003cp\u003eMaking local Blast Databases\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"51r30\",\"text\":\"Make a nucleotide blast database for the metagenomic reads\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6rffo\",\"text\":\"Put all the metagenomes from one station into one blast database. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8emvv\",\"text\":\"(if the blast database becomes too large, we end up having problems)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"63l4b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2q15a\",\"text\":\"-hash_index and -parse_seqids are needed in the command for the parse script to work later.  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"85eqt\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"4tab9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Making a metagenomic read BLAST database\",\"guid\":\"8E6986DC1C5B11EFA15F0A58A9FEAC02\",\"name\":\"makeblastdb -title Cruise_Station_Reads -max_file_sz 10GB -dbtype nucl -hash_index -parse_seqids -out blastdb/Cruise_Station_Reads -in \\\"Cruise_Station_Depth_Reads_1.fasta Cruise_Station_Depth_Reads_2.fasta\\\"\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"11","cases":[],"critical":null},{"id":2066525,"guid":"6DF40DA0E4F24963903310203CF47F6B","previous_id":2066522,"previous_guid":"CC385996AA694EC793F605747EF464B2","section":"\u003cp\u003eMaking local Blast Databases\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"56jpf\",\"text\":\"Make a protein blast database for proteins from assembled metagenomes\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c17u\",\"text\":\"We usually make one protein blast database per cruise. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3eela\",\"text\":\"-hash_index and -parse_seqids are needed in the command for the parse script to work later. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"46p9n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ti9c\",\"text\":\"Use the renamed proteins from step 9.3.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7s2ll\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ce1u7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"173rp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Assembled protein database\",\"guid\":\"2F153EF81C6311EFA15F0A58A9FEAC02\",\"name\":\"makeblastdb -title ETNP2012_proteins -max_file_sz 10GB -dbtype prot -hash_index -parse_seqids -out blastdb/ETNP2012_proteins -in \\\"ETNP_1000m_proteins.fasta ETNP_850m_proteins.fasta ETNP_600m_proteins.fasta\\\"\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"12","cases":[],"critical":null},{"id":2066530,"guid":"9AE5A2EA994F4B83B7E89CB32C8B8001","previous_id":2066487,"previous_guid":"0470D7B2EE894D75A3B2E32983E6F50A","section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"c3u52\",\"text\":\"QC with Trimmomatic (Bolger et al 2014)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1i2fj\",\"text\":\"Trimmomatic information and downloads can be found here: http://www.usadellab.org/cms/?page=trimmomatic\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":57,\"length\":46}],\"data\":{}},{\"key\":\"eot1t\",\"text\":\"You will need an adaptor file TruSeq3-PE-2.fa that you can download with Trimmomatic\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"19nvb\",\"text\":\"Name the output files with Depth_Cruise_Station\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ktrk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"30td8\",\"text\":\"The result of this command are 4 fastq files: 2 with paired end reads and 2 files where one paired read was deleted. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"A73D3C471C5611EFA15F0A58A9FEAC02\",\"url\":\"http://www.usadellab.org/cms/?page=trimmomatic\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Trimmomatic\",\"description\":\"trims adaptors and removes bad reads\",\"guid\":\"6AC2352A1C5611EFA15F0A58A9FEAC02\",\"name\":\"trimmomatic PE \\\"1407048_S15_L004_R1.fastq.gz\\\" \\\"1407048_S15_L004_R2.fastq.gz\\\" \\\\\\n\\\"Depth_Cruise_Station.1.paired.trim.fastq.gz\\\" \\\"Depth_Cruise_Station.1.unpaired.trim.fastq.gz\\\" \\\\\\n\\\"Depth_Cruise_Station.2.paired.trim.fastq.gz\\\" \\\"Depth_Cruise_Station.2.unpaired.trim.fastq.gz\\\" \\\\\\nILLUMINACLIP:\\\"TruSeq3-PE-2.fa\\\":2:30:10:1:true \\\\\\nMAXINFO:135:0.5 LEADING:3 TRAILING:3 MINLEN:60 AVGQUAL:20\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"2","cases":[],"critical":null},{"id":2066537,"guid":"37BC434D3B9144C8A272361B76ECACFD","previous_id":2168034,"previous_guid":"D97B176A08BC4E1482518911A5D9268E","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"bs8i9\",\"text\":\"Align sequences using muscle (Edgar, 2004) \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ibna\",\"text\":\"https://github.com/rcedgar/muscle\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":33}],\"data\":{}},{\"key\":\"5ktqi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"298n4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"cjh83\",\"text\":\"Visualize your alignment with Seaview (or program of your choice)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8rlkn\",\"text\":\"https://doua.prabi.fr/software/seaview3\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":39}],\"data\":{}},{\"key\":\"5tdge\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a0vrl\",\"text\":\"Are there any wonky sequences? 1) Sequences that do not align with the other sequences, 2) extremely short sequences, 3) sequences with long \\\"introns\\\" or unaligned segments. You may want to remove these sequences, or see if they are reverse and complement. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"croal\",\"text\":\"Then run muscle again on the corrected file. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"534F4BCB188411EFAE230A58A9FEAC02\",\"url\":\"https://github.com/rcedgar/muscle\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Muscle command\",\"description\":\"\",\"guid\":\"737EA750188411EFAE230A58A9FEAC02\",\"name\":\"/Applications/muscle -in PioA_blast.txt -out PioA_blast.ali.fasta\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"3FA1F664510311EFA31A0A58A9FEAC02\",\"url\":\"https://doua.prabi.fr/software/seaview3\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"17","cases":[],"critical":null},{"id":2066584,"guid":"0F6F196BF896467CB0CA9D809993F584","previous_id":2068734,"previous_guid":"B34BE70BFB8D48F38365712F91913CCA","section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"fc4q9\",\"text\":\"Rename metagenomic reads in the fasta files. This script may need to be edited for your files. This script works on a whole folder of files. New metagenomic files will be created with _name.fasta at the end. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":45,\"length\":49}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e1kkg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"esa8d\",\"text\":\"This script takes the Depth_Cruise_Station information from the metagenome filename and adds it to the name of each read. A dash (-) will be added between Depth_Cruise_Station and the original read name. This dash is used to separate and use the Depth_Cruise_Station information later. Use and underscore. Do NOT use normal dashes between Depth, Cruise and Station. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"30rr5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"54cv7\",\"text\":\"The one listed right below works with metagenomes downloaded from NCBI SRA.  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c2fuj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f0a9h\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7r9s5\",\"text\":\"The script can be found on GitHub\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dr16q\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/reads_name_addition_cf_GA02.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":101}],\"data\":{}},{\"key\":\"cqfpp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5o3o6\",\"text\":\"The one listed below works with metagenomes from the sequencing center.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ts3t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c0lku\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"8dgq9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bq4v4\",\"text\":\" The script can be found on GitHub\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3jsps\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/reads_name_OWN_metagenomes.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":0,\"length\":100}],\"data\":{}},{\"key\":\"96f6b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f6s6s\",\"text\":\"Remember to include the pathway to the folder where you are storing the script in the command. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bg340\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9q0mu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Add Depth, Cruise, and station to the metagenomic read names\",\"description\":\"\",\"guid\":\"5C02BBCD192211EFAE230A58A9FEAC02\",\"name\":\"python reads_name_addition_cf_GA02.py\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"F42E2C69192111EFAE230A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/reads_name_addition_cf_GA02.py\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Add key information to each read\",\"guid\":\"6C800ADB1C5A11EFA15F0A58A9FEAC02\",\"name\":\"python reads_name_OWN_metagenomes.py\",\"os_name\":\"\",\"os_version\":\"\"}},\"3\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"3865E8111C5A11EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/reads_name_OWN_metagenomes.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"4","cases":[],"critical":null},{"id":2068213,"guid":"B15A1733509F4CE595C61668AA3AAF8B","previous_id":2066496,"previous_guid":"76F0DDF47BD64C8E972F957282C30B66","section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"dn6vk\",\"text\":\"Use the read counts to create normalization factors. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dftfe\",\"text\":\"First open the text file of read counts in excel. Add together forward and reverse read numbers. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b4r8m\",\"text\":\"In the Fuchsman lab, we use the ETNP 100 m sample to normalize all other samples in our collection: 485556135 reads\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"704u7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"55das\",\"text\":\"normalization factor for Z = 485556135 / reads in sample Z\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b985m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1amkc\",\"text\":\"The names need to be Depth_Cruise_Station without the .fasta or other extras\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"504kg\",\"text\":\" A: sample name, B: total reads, C: normalization factor\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l7at\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"do6hg\",\"text\":\"This file should be saved as a .csv, and then it should be saved with UNIX line breaks. (We do this in BBEDIT.)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ci6u\",\"text\":\"This file is used in by the normalization script at the end of the phytogenetic read placement pipeline. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3md6u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"835qf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"tables\",\"mutability\":\"MUTABLE\",\"data\":{\"cellsMeta\":{\"0_0\":\"\",\"0_1\":\"\",\"0_2\":\"\",\"1_0\":\"\",\"1_1\":\"\",\"1_2\":\"\",\"2_0\":\"\",\"2_1\":\"\",\"2_2\":\"\",\"3_0\":\"\",\"3_1\":\"\",\"3_2\":\"\",\"4_0\":\"\",\"4_1\":\"\",\"4_2\":\"\",\"5_0\":\"\",\"5_1\":\"\",\"5_2\":\"\",\"6_0\":\"\",\"6_1\":\"\",\"6_2\":\"\",\"7_0\":\"\",\"7_1\":\"\",\"7_2\":\"\",\"8_0\":\"\",\"8_1\":\"\",\"8_2\":\"\"},\"colTitles\":[\"\",\"\",\"\"],\"colWidths\":[\"125\",\"91\",\"110\"],\"data\":[[\"100m_HOT_272\",\"33647796\",\"1.443070298\"],[\"125m_HOT_272\",\"91158758\",\"0.532654635\"],[\"150m_HOT_272\",\"75113107\",\"0.646440241\"],[\"175m_HOT_272\",\"16552301\",\"2.933497584\"],[\"200m_HOT_272\",\"83220174\",\"0.583465915\"],[\"225m_HOT_272\",\"80424227\",\"0.603750099\"],[\"250m_HOT_272\",\"124980536\",\"0.388509576\"],[\"25m_HOT_272\",\"25193222\",\"1.92734915\"],[\"45m_HOT_272\",\"66381762\",\"0.731468005\"]],\"guid\":\"10E3024BA08C46888CBDCE4C412BCAC8\",\"isJexcelDataFormat\":true,\"legend\":\"\",\"mergeCells\":{},\"printData\":[[\"100m_HOT_272\",\"33647796\",\"1.443070298\"],[\"125m_HOT_272\",\"91158758\",\"0.532654635\"],[\"150m_HOT_272\",\"75113107\",\"0.646440241\"],[\"175m_HOT_272\",\"16552301\",\"2.933497584\"],[\"200m_HOT_272\",\"83220174\",\"0.583465915\"],[\"225m_HOT_272\",\"80424227\",\"0.603750099\"],[\"250m_HOT_272\",\"124980536\",\"0.388509576\"],[\"25m_HOT_272\",\"25193222\",\"1.92734915\"],[\"45m_HOT_272\",\"66381762\",\"0.731468005\"]],\"rowHeights\":[23,23,23,23,23,23,23,23,23]}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":2068734,"guid":"B34BE70BFB8D48F38365712F91913CCA","previous_id":2066530,"previous_guid":"9AE5A2EA994F4B83B7E89CB32C8B8001","section":"\u003cp\u003eNaming and counting Metagenomic reads\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"7lpeq\",\"text\":\"Convert fastq to fasta. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3tmsb\",\"text\":\"Note that we include both paried and unpaired reads in our read database, so also convert the unpaired read files here. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"80iur\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"hoie\",\"text\":\"Information about the fastq_to_fasta script and how to download it can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e3f8u\",\"text\":\"http://hannonlab.cshl.edu/fastx_toolkit/commandline.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":56}],\"data\":{}},{\"key\":\"4fk3q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e01l9\",\"text\":\"This script does not work with .gz files; they must be unzipped. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4tsp0\",\"text\":\"The -n means to keep reads with Ns. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bfjc\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"5s4qm\",\"text\":\"Note: keep your fastq files for assembly (step 7) and for other purposes. These fastq are also the files that you submit to NCBI SRA\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"B03BE51A1C5711EFA15F0A58A9FEAC02\",\"url\":\"http://hannonlab.cshl.edu/fastx_toolkit/commandline.html\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"fastq_to_fasta\",\"description\":\"converts fastq file to fasta\",\"guid\":\"62A53CB01C5711EFA15F0A58A9FEAC02\",\"name\":\"fastq_to_fasta -n -i Name.fastq -o Name.fasta\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null},{"id":2074444,"guid":"BB0CD2095BF342B5852663D0BDB111EE","previous_id":2068213,"previous_guid":"B15A1733509F4CE595C61668AA3AAF8B","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1mkhj\",\"text\":\"Use fastq files to assemble contigs using MEGAHIT (Li et al 2015). We usually assemble each depth separately. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2tqkb\",\"text\":\"If you are looking for rare taxa, a combined assembly of similar samples can help. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1rurk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fb3vk\",\"text\":\"Find and install MEGAHIT from here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a5c7e\",\"text\":\"https://github.com/voutcn/megahit\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":33}],\"data\":{}},{\"key\":\"3v68n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dqal0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"BED390671C6111EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/voutcn/megahit\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Assemble contigs with megahit\",\"guid\":\"A9B9ECDA1C6111EFA15F0A58A9FEAC02\",\"name\":\"megahit -1 ETNP_1000m.1.paired.trim.fastq.gz -2 ETNP_1000m.2.paired.trim.fastq.gz -o ETNP_1000m -m 128000000000 -t 12\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"7","cases":[],"critical":null},{"id":2074445,"guid":"2799C4F4FEF7491580D82D2B456B4717","previous_id":2074446,"previous_guid":"3A40B7C473CD486A9E8FCEAB3900F7AF","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"e03jf\",\"text\":\"Annotate contigs with prokka (Seemann, 2014). Prokka calls genes/proteins and annotates them.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1o3ad\",\"text\":\"Find prokka and information about prokka here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ijfs\",\"text\":\"https://github.com/tseemann/prokka\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":34}],\"data\":{}},{\"key\":\"216rh\",\"text\":\"Prokka has version dependencies. We keep prokka in its own conda environment. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8rgfo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"622A552C1C5E11EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/tseemann/prokka\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9","cases":[],"critical":null},{"id":2074446,"guid":"3A40B7C473CD486A9E8FCEAB3900F7AF","previous_id":2074444,"previous_guid":"BB0CD2095BF342B5852663D0BDB111EE","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"f4eri\",\"text\":\"Remove contigs less than 1000 basepairs (or whatever cut off you choose)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aa4hs\",\"text\":\"The script can be found on GitHub\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c154p\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/extract_seqs_by_length.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":96}],\"data\":{}},{\"key\":\"dqrdv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a68lc\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"b21rf\",\"text\":\"Remember to include the pathway to the folder where you are storing the script in the command. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fogjt\",\"text\":\"Script credit: Ryan Groussman\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"2CA555181C6011EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/extract_seqs_by_length.py\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Cut short contigs\",\"guid\":\"9042C2501C6011EFA15F0A58A9FEAC02\",\"name\":\"python extract_seqs_by_length.py contig_file.fasta 1000\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"8","cases":[],"critical":null},{"id":2074447,"guid":"80EAC1479FBB41CFB29C567320F7C4C1","previous_id":2074445,"previous_guid":"2799C4F4FEF7491580D82D2B456B4717","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"9steg\",\"text\":\"Prokka only allows names that are \\u003c20 characters\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"evhu5\",\"text\":\"This script changes names in a MegaHIT contig.fasta file to \\u003c20 characters\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5nvgi\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/names_for_prokka.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":90}],\"data\":{}},{\"key\":\"88h2f\",\"text\":\"Change the infile and outfile names in the script\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"84jtk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ta7d\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"596i2\",\"text\":\"Remember to include the pathway to the folder where you are storing the script in the command. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e5iub\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"3832FF031C5D11EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/names_for_prokka.py\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Names for prokka\",\"guid\":\"82704EBE1C5F11EFA15F0A58A9FEAC02\",\"name\":\"python names_for_prokka.py\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9.1","cases":[],"critical":null},{"id":2074448,"guid":"C4AAB1BEBBEF42219B2B62BD589CE408","previous_id":2074447,"previous_guid":"80EAC1479FBB41CFB29C567320F7C4C1","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"fav5f\",\"text\":\"To run prokka, first we activate the prokka conda environment\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"51php\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6mcd5\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"85jnc\",\"text\":\"Then run the following command\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ic8j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3avbi\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"1jc5l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Activate prokka environment\",\"guid\":\"F8D3D56A1C5D11EFA15F0A58A9FEAC02\",\"name\":\"conda activate prokka_env\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Run prokka\",\"guid\":\"2221436B1C5E11EFA15F0A58A9FEAC02\",\"name\":\"prokka --cpus 8 --outdir ETNP_1000m_prokka --prefix ETNP_1000m ETNP_1000m_final.contigs.len1000.txt\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9.2","cases":[],"critical":null},{"id":2074458,"guid":"741D4BB2C7F74B82A179E339B1894B32","previous_id":2074448,"previous_guid":"C4AAB1BEBBEF42219B2B62BD589CE408","section":"\u003cp\u003eAssemble proteins from reads\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"7c5fg\",\"text\":\"Prokka numbers the proteins. The following script links the proteins back to their original contigs. It adds the contig name to the beginning of the protein name. The table file from prokka is needed to run this script. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f5kln\",\"text\":\"It also adds an identifier before the contig name that indicates the place the original metagenome was from. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bmtnm\",\"text\":\"Example: ETNP_1000m_contig#_prokka#\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2dien\",\"text\":\"The script accession_dict_name_change.py is on GitHub\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1fma9\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/accession_dict_name_change.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":100}],\"data\":{}},{\"key\":\"7l7u7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77jg1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"erku7\",\"text\":\"Remember to include the pathway to the folder where you are storing the script in the command. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5k263\",\"text\":\"The exact same script can be used to link genes to their original contigs. Just use the gene file from prokka instead of the protein file. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5rr35\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"D29F87901C5E11EFA15F0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/accession_dict_name_change.py\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Link protein to contig\",\"guid\":\"595FA4071C5F11EFA15F0A58A9FEAC02\",\"name\":\"python accession_dict_name_change.py\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"9.3","cases":[],"critical":null},{"id":2167700,"guid":"1ECD19DFFF744C8190DB12C2378EEECF","previous_id":2066537,"previous_guid":"37BC434D3B9144C8A272361B76ECACFD","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"eia5s\",\"text\":\"Make a non-redundant alignment file or a \\\"reduced file\\\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5hhb0\",\"text\":\"RaxML version 8 (Stamatakas et al 2014) can be downloaded here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a8s2e\",\"text\":\"https://cme.h-its.org/exelixis/web/software/raxml/\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":50}],\"data\":{}},{\"key\":\"colg0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6q06o\",\"text\":\"Use RaxML to pretend to make a phylogenetic tree. Then stop the command after a reduced alignment file is created. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"21jdm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"71oi6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"co1em\",\"text\":\"The format of the reduced file is necessary to get PaPaRa to work later. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"E2FE32DB510011EFA31A0A58A9FEAC02\",\"url\":\"https://cme.h-its.org/exelixis/web/software/raxml\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Obtain Reduced file\",\"description\":\"\",\"guid\":\"710551EA510111EFAF0D0A58A9FEAC02\",\"name\":\"/Applications/standard-RAxML-master/raxmlHPC -m PROTGAMMAWAG -s Alignment_file.ali.fasta -n Output -T 18 -# 20 -p 2\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"18","cases":[],"critical":null},{"id":2167716,"guid":"653EBBE35B444D76A7EAE15EEF9891B0","previous_id":2167700,"previous_guid":"1ECD19DFFF744C8190DB12C2378EEECF","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"4j8jr\",\"text\":\"Make a preliminary phylogenetic tree using RaxML-ng (Kozlov et al 2019)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"evnbj\",\"text\":\"Download RaxML-ng here: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8vbte\",\"text\":\"https://github.com/amkozlov/raxml-ng (or use conda)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":36}],\"data\":{}},{\"key\":\"3uh0h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6m01m\",\"text\":\"Different command are used for an amino acid tree versus a nucleotide tree\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6dnbg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2vgv5\",\"text\":\"For an nucleotide tree:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6d748\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bu2na\",\"text\":\"For amino acid tree:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"71eva\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1nb25\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"emmtc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"66vpl\",\"text\":\"Look at your tree quality. Do you have some extremely long branch lengths? If so, you may want to remove those sequences from the tree, or find more sequences that are similar to the strange sequence. Usually we remove. Start over with muscle (Step 17). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5542d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0rko\",\"text\":\"If the assembled proteins form clusters without references, I recommend blasting representative proteins against NCBI to find closest hits. Add these hits to your reference file, make sure they do not have illegal characters, and start over with muscle (Step 17).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"DADDF003510111EFA31A0A58A9FEAC02\",\"url\":\"https://github.com/amkozlov/raxml-ng\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Make Preliminary Nucleotide Phylogenetic tree\",\"description\":\"\",\"guid\":\"74CD981F510211EFA31A0A58A9FEAC02\",\"name\":\"/Applications/raxml-ng_v0/raxml-ng --msa Alignment.ali.fasta.reduced --prefix tree_name --model GTR --threads 16 --data-type DNA --force model_overfit\\n\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Make Preliminary Amino Acid Tree\",\"description\":\"\",\"guid\":\"EA6CDFEF510211EFAF0D0A58A9FEAC02\",\"name\":\"/Applications/raxml-ng_v0/raxml-ng --msa alignment_AA.ali.fasta.reduced --prefix tree-name --model WAG --threads 16 --data-type AA --force model_overfit\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"19","cases":[],"critical":null},{"id":2167719,"guid":"D1B5E5C4596E4A7A972999AD9127C351","previous_id":2167716,"previous_guid":"653EBBE35B444D76A7EAE15EEF9891B0","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"48cpu\",\"text\":\"Bootstrap the tree with tbe bootstraps\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"67no3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"om47\",\"text\":\"When you are happy with your tree, use RaxML-ng to bootstrap it using Transfer Bootstrap Expectation\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f0val\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3osfc\",\"text\":\"Read about Transfer Bootstrap Expectation here (Zaharias et al 2023):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eanvj\",\"text\":\"https://academic.oup.com/sysbio/article/72/6/1280/7240218\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":57}],\"data\":{}},{\"key\":\"bdt8j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7r9rh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ap4nb\",\"text\":\"If you are bootstrapping a nucleotide tree, the data type is DNA.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b5mdp\",\"text\":\"Bootstrapping can take awhile and can take a lot of cores. This is a step where you might consider using HPC server. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"6889A9C8510511EFA31A0A58A9FEAC02\",\"url\":\"https://academic.oup.com/sysbio/article/72/6/1280/7240218\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Bootstrap phylogenetic tree\",\"description\":\"\",\"guid\":\"DF66E4AB510411EFA31A0A58A9FEAC02\",\"name\":\"/Applications/raxml-ng_v0/raxml-ng --all --bs-trees 100 --bs-metric tbe --msa Alignment.ali.fasta.reduced --model WAG --threads 16 --data-type AA --force model_overfit\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"20","cases":[],"critical":null},{"id":2167731,"guid":"891FB823AF4647F6B3D8634B622EACDB","previous_id":2167719,"previous_guid":"D1B5E5C4596E4A7A972999AD9127C351","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"c7plr\",\"text\":\"Use your seed file to blast your metagenomic read database created in step 11. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7gfcf\",\"text\":\"This seed file is usually composed of amino acid sequences to allow the widest range of hits. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7utl2\",\"text\":\"However, for genes like 16S rRNA, ITS or 18 rRNA the seed file must be nucleotide. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e7obf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5r598\",\"text\":\"Here we use an evalue of -5 to get the broadest range of reads possible. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"du6jl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7o2d7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"47mdt\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"24q48\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Blast metagenomic read database with amino acid seed file\",\"description\":\"\",\"guid\":\"154DC7B551AA11EFAA3D0A58A9FEAC02\",\"name\":\"/Applications/blast/bin/tblastn -db_gencode 11 -db /Users/clara/Desktop/ETNP_2012/ETNP_2012_READS/small_blastdb/ETNP_READS -query gene_seeds.txt -out outfile_READS_AA_blast.xml -outfmt 5 -num_threads 18 -max_target_seqs 100000000 -evalue 1e-5\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Blast metagenomic read database with nucleotide seed file\",\"description\":\"Blast metagenomic read database with nucleotide seed file\",\"guid\":\"257ACE2A51AD11EFAA3D0A58A9FEAC02\",\"name\":\"/Applications/blast/bin/blastn -db /Volumes/G-DRIVE_BEAST/Sed_trap_4000m/read_blastdb/HOT_4000m_traps_DNA -query Protist_seeds.txt -out Protist_HOT_4000m_traps_DNA_READS_AA_blast.xml -outfmt 5 -num_threads 16 -max_target_seqs 100000000 -evalue 1e-5\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"21","cases":[],"critical":null},{"id":2168034,"guid":"D97B176A08BC4E1482518911A5D9268E","previous_id":2066518,"previous_guid":"D625878E92404170B3CB1F7602074CD4","section":"\u003cp\u003eMaking phylogenetic trees\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"d8vt5\",\"text\":\"Remove illegal characters\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"acrru\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5nf2a\",\"text\":\" In order for sequences to be used in the making of the phylogenetic tree, a number of character types are not permitted including:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cosje\",\"text\":\"\\\".\\\", \\\",\\\", \\\".\\\", \\\" \\\", \\\"|\\\", \\\"[\\\", \\\"(\\\", \\\";\\\", \\\":\\\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ng83\",\"text\":\"Replacing with underscores is often the best way to not lose information in the sequence name.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"16","cases":[],"critical":null},{"id":2168035,"guid":"7266958A124D4AE5A3A052DF1328B46E","previous_id":2167731,"previous_guid":"891FB823AF4647F6B3D8634B622EACDB","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"61o9a\",\"text\":\"Parse this blast file as in step 15. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1apfe\",\"text\":\"This time we want the best.hits file because it contains information on the direction of the read-- whether or not it needs to be reverse and complemented\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"22","cases":[],"critical":null},{"id":2168036,"guid":"249D6A20368C4352B51C411CAF89F3DC","previous_id":2168035,"previous_guid":"7266958A124D4AE5A3A052DF1328B46E","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"5qs5c\",\"text\":\"Trim and Reverse and Complement\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"chbi8\",\"text\":\"This step trims reads that partially contain a different gene, reverse and compelements if necessary, removes all reads with Ns, and translates to amino acids\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dutjo\",\"text\":\"Jaci Saunders wrote this script. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7b5qs\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9da63\",\"text\":\"trim_reads_format_for_alignment_specify_minLength.py can be found:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8fe68\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/trim_reads_format_for_alignment_specify_minLength.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":123}],\"data\":{}},{\"key\":\"4luts\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4omrn\",\"text\":\"A different version of the same script can be found in the PHAN-C pipeline\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"60d2f\",\"text\":\"https://phans-c-pipeline.readthedocs.io/en/latest/Tutorial.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":63}],\"data\":{}},{\"key\":\"ajrl9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ltef\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9kd9u\",\"text\":\"-m 100 means that all reads shorter than 100 basepairs are deleted\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"67fss\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"90mhs\",\"text\":\"There are many output files from the script. If you have an amino acid tree, you want the \\\"AA_translation_stops_removed_BEST_for_PAPARA.fasta\\\" output file. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"23gmj\",\"text\":\"If you have a nucleotide tree, you want the \\\"names_formatted_query_seqs_NT.fasta\\\" file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2v1rl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ep6lt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"EC6E8A1F51AD11EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/trim_reads_format_for_alignment_specify_minLength.py\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"0E08705B1C5911EFA15F0A58A9FEAC02\",\"url\":\"https://phans-c-pipeline.readthedocs.io/en/latest/Tutorial.html\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Trim and format Metagenomic Reads\",\"description\":\"Trim and format reads\",\"guid\":\"7850597051AE11EFAA3D0A58A9FEAC02\",\"name\":\"/Users/clara/Desktop/scripts/jaci_bin/trim_reads_format_for_alignment_specify_minLength.py -g outfput_prefix -f narG_HoodCanal.best.hits -m 100\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"23","cases":[],"critical":null},{"id":2168038,"guid":"B565822DA9464389A174C82CD5405D41","previous_id":2168036,"previous_guid":"249D6A20368C4352B51C411CAF89F3DC","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ugs\",\"text\":\"Align metagenomic reads to the reference sequences used to make the phylogenetic tree using PaPaRa (Berger and Stamatakis, 2011)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64lme\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e44su\",\"text\":\"PaPaRa 2.0 can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cf375\",\"text\":\"https://cme.h-its.org/exelixis/web/software/papara/index.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":61}],\"data\":{}},{\"key\":\"33q35\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2bbe0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bu7or\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dj0bf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9prka\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"a9g3k\",\"text\":\"Note that the -a indicates amino acids\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5fbkk\",\"text\":\"-j is the number of threads\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"7B288AF251AF11EF9BF00A58A9FEAC02\",\"url\":\"https://cme.h-its.org/exelixis/web/software/papara/index.html\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"PaPaRa for amino acids\",\"description\":\"PaPaRa for amino acids\",\"guid\":\"14D2455F51B011EFAA3D0A58A9FEAC02\",\"name\":\"/Users/clara/Desktop/scripts/papara_nt/papara -t treefile.bestTree.tre -s tree_alignment.ali.fasta.reduced -q narG_HoodCanal_AA_translation_stops_removed_BEST_for_PAPARA.fasta -n output_READS_AA_Papara -j 4 -a\\n\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"PaPaRa for nucleotides\",\"description\":\"\",\"guid\":\"40FF29EA528B11EF9BF00A58A9FEAC02\",\"name\":\"/Users/clara/Desktop/scripts/papara_nt/papara -t Treefile.tre -s Tree_Alignment.ali.fasta.reduced -q gene_place_formatted_query_seqs_NT.fasta -n output_NT_Papara -j 8\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"24","cases":[],"critical":null},{"id":2168671,"guid":"A8DAF63F9AF443408D3CFCE782115FFB","previous_id":2168038,"previous_guid":"B565822DA9464389A174C82CD5405D41","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"2saah\",\"text\":\"Combine paired end reads. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4an9g\",\"text\":\"A long gene will have more forward and reverse paired reads than a short gene. To be able to compare between genes properly, we merge the alignments of paired end reads and count them as one. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6s7vr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2p985\",\"text\":\"If you have downloaded metagenomes from SRA, use spacejoin_Geotraces.py found here\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4jkpo\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/spaceJoin_Geotraces.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":93}],\"data\":{}},{\"key\":\"e3dgk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3h1bh\",\"text\":\"If you are using your own metagenomes, use spacejoin.py found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f9iq2\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/spaceJoin.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":83}],\"data\":{}},{\"key\":\"f4q9r\",\"text\":\"spacejoin.py was written by Jaci Saunders\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bn83\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5as2l\",\"text\":\"both use the same command.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7rgje\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bgg4v\",\"text\":\"-r is the number of references sequences composing the tree. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2lgud\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"F7DF3B02528B11EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/spaceJoin_Geotraces.py\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"85D6467E528C11EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/spaceJoin.py\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Spacejoin\",\"description\":\"Link paired end reads\",\"guid\":\"D9286351528C11EFAA3D0A58A9FEAC02\",\"name\":\"python /Users/clara/Desktop/scripts/jaci_bin/spaceJoin.py -p papara_alignment.gene_placel_AA_Papara -r 492 -o Gene_Place_READS -l 33\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"25","cases":[],"critical":null},{"id":2168674,"guid":"DB33B268575548F3B40B3A5511DD6494","previous_id":2168671,"previous_guid":"A8DAF63F9AF443408D3CFCE782115FFB","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"aa9hb\",\"text\":\"Adjust formatting. This step is not always necessary, but we always do it to prevent errors later on in the pipeline. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9sdrj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bksrq\",\"text\":\"phyml2fasta_space_dash.py can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":25}],\"data\":{}},{\"key\":\"46vk4\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/phyml2fasta_space_dash.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":96}],\"data\":{}},{\"key\":\"feedu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ar48b\",\"text\":\"Adjust the input and output file names inside the script. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"6395A144528D11EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/phyml2fasta_space_dash.py\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"72720BF1528D11EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/phyml2fasta_space_dash.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"26","cases":[],"critical":null},{"id":2168675,"guid":"2DCC3090D4964AF5A82A4540CD930779","previous_id":2168674,"previous_guid":"DB33B268575548F3B40B3A5511DD6494","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"fkrg1\",\"text\":\"Split aligned file into references and reads to use in epa-ng\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cs34j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ap4bl\",\"text\":\"Use the spacedash file that you just formated\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3fspt\",\"text\":\"NR \\u003c (the number of references from spacejoin * 2)+1\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"81j17\",\"text\":\"So if you have 492 references in your tree, the number to use here is 985\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bcmig\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ctied\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Split between references and reads\",\"description\":\"Split between references and reads\",\"guid\":\"D381BF6C528D11EF9BF00A58A9FEAC02\",\"name\":\"awk 'NR \\u003c 985 { print \\u003e\\u003e \\\"Proteorhodopsin_HoodCanal_references.txt\\\"; next } {print \\u003e\\u003e \\\"Proteorhodopsin_HoodCanal_reads.txt\\\" }' Proteorhodopsin_HoodCanal_READS_spacedash.txt\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"27","cases":[],"critical":null},{"id":2168676,"guid":"ACE921729C484CA9808BFC0DD50D06ED","previous_id":2168675,"previous_guid":"2DCC3090D4964AF5A82A4540CD930779","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"pagp\",\"text\":\"Place metagenomic reads on the tree using epa-ng (Barbera et al 2019)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"44vpa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bih5u\",\"text\":\"epa-ng can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5sk23\",\"text\":\"https://github.com/pierrebarbera/epa-ng\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":39}],\"data\":{}},{\"key\":\"1qgl3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c6b11\",\"text\":\"-s is the reference only file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"76e5i\",\"text\":\"-t is the tree file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ch039\",\"text\":\"-q is the reads only file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d87ad\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"abr7h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"df01c\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"krjb\",\"text\":\"the filter-max 1 is important so that we don't count the same read multiple times. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fhu1o\",\"text\":\"It means, only place the read once on its best spot. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4dpi0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"gjjd\",\"text\":\"If you are using a nucleotide tree, the model is: GTR\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2qtfv\",\"text\":\"If you are using an amino acid tree, the model is: WAG (or whatever other model you used to make the tree)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"798CE4E7528E11EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/pierrebarbera/epa-ng\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"EPA-ng\",\"description\":\"EPA-ng command for pipeline\",\"guid\":\"FA6B22B3528E11EFAA3D0A58A9FEAC02\",\"name\":\"/anaconda2/bin/epa-ng -s Proteorhodopsin_HoodCanal_references.txt -t SAR11_proteorhodopsin_Olson.raxml.bestTree.tre -q Proteorhodopsin_HoodCanal_reads.txt --model WAG --threads 6 --filter-max 1\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"28","cases":[],"critical":null},{"id":2168677,"guid":"9234FFD065D64F33B21DCFD154CE56D7","previous_id":2168676,"previous_guid":"ACE921729C484CA9808BFC0DD50D06ED","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"4c6ff\",\"text\":\"Cut reads with long pendant lengths (\\u003e2) to prevent false assignments\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2g1km\",\"text\":\"Ideally this script will only cut a very small number of reads. If this step cuts many reads, it is a warning sign that your phylogenetic tree is missing key sequences/outgroups. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ct8o9\",\"text\":\"The pendant length used to cut is adjustable, but we recommend 2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ud6e\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cjpr1\",\"text\":\"the script jplace_file_cutter.py can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5q0d\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/jplace_file_cutter.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":92}],\"data\":{}},{\"key\":\"90l0c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7cjst\",\"text\":\"Adjust the name of the outfile in the script. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4a7nb\",\"text\":\"The script will print:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9n0dh\",\"text\":\"\\\"The number of reads above length 2 is...#\\\" -- keep track of this number in your notebook\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8pirt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fn69g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"9F73897A528F11EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/jplace_file_cutter.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"29","cases":[],"critical":null},{"id":2168678,"guid":"55FA8D503B18445F8E4D78078757BE2A","previous_id":2168677,"previous_guid":"9234FFD065D64F33B21DCFD154CE56D7","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1tchk\",\"text\":\"Make a taxon file to use with gappa\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d90bt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2qcoq\",\"text\":\"Making the taxon file is one of the most important steps of the pipeline. The Information that you obtain at the end of the pipeline is directly related to what you designate here. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bm9gr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bhqo0\",\"text\":\"open your tree in fig tree and export to as a pdf. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"83u26\",\"text\":\"In Illustrator or equivalent, mark the taxonomic groups of interest on the phylogenetic tree\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3vld2\",\"text\":\"--determine the taxonomic splits e.g. ecotypes, outgroups, phages vs hosts\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4q19\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"13o2p\",\"text\":\"Make a new text file with the name of the reference on the tree and the classification seperated by a tab\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eh1el\",\"text\":\"The names must match the names on the tree exactly.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cb312\",\"text\":\"You can copy the reference name, or a whole section of names, in FigTree and paste it into the text file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dc4dq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"alhf3\",\"text\":\"The taxon section can have multiple levels separated by a semicolon. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cqtjp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3630p\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1hs72\",\"text\":\"pelagiphage_ref_AP014234 (tab) Virus;Pelagiphage;Podopelagiphage group1\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cqfak\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"99cet\",\"text\":\"In this example, one read will show up in our final counts under three headings: virus, pelagiphage, and podopelagiphage group 1\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6tb1c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"72eje\",\"text\":\"You must spell these groups exactly the same way for all reference sequences in the same group\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eln4u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3p6dg\",\"text\":\"Every reference sequence in the tree must be in the taxon file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ptlk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8dt40\",\"text\":\"If you mess up and either have two tabs on the same line or zero tabs, gappa will not work.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"401f3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"412il\",\"text\":\"If gappa gives you a tab error:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bn23r\",\"text\":\"tab.py is a script to find the line where you either have no tab or two tabs\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"98m62\",\"text\":\"find the script here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"84hmm\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/tab.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":77}],\"data\":{}},{\"key\":\"cbd5\",\"text\":\"Inside the script, designate your taxon file\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"FC17409E529211EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/tab.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"30","cases":[],"critical":null},{"id":2168688,"guid":"CB45617E857C4EC4B47BB9469F65607D","previous_id":2168678,"previous_guid":"55FA8D503B18445F8E4D78078757BE2A","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"aaq9q\",\"text\":\"Assign Taxonomy with gappa (Czech et al 2020)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"971id\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3l161\",\"text\":\"gappa can be found here:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bkor6\",\"text\":\"https://github.com/lczech/gappa\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":31}],\"data\":{}},{\"key\":\"1j7tj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3sg9b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9vnnn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bucvp\",\"text\":\"The out-dir is the name of a folder that will be created\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2gc8v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"45BDC0ED529311EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/lczech/gappa\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Run gappa\",\"description\":\"Run gappa with taxon file\",\"guid\":\"B2E93F67529311EFAA3D0A58A9FEAC02\",\"name\":\"gappa examine assign --jplace-path Gene_Place.jplace  --taxon-file Gene_taxon.txt --out-dir Gene_Place --per-query-results\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"31","cases":[],"critical":null},{"id":2168692,"guid":"8E1AF89D63F043FC810BB328811E0B1E","previous_id":2168688,"previous_guid":"CB45617E857C4EC4B47BB9469F65607D","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"d6hic\",\"text\":\"Count reads for each taxonomy for each metagenomic sample separately\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ae0qr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cgduh\",\"text\":\"From inside the gappa output folder, use seperate_by_sample_and_phylotype_comma_CLARA.py found at:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e41fo\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/seperate_by_sample_and_phylotype_comma_CLARA.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":118}],\"data\":{}},{\"key\":\"7ju42\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"54d2m\",\"text\":\"Adjust the outfile name in the script\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6nuo5\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"2D98E26B529411EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/seperate_by_sample_and_phylotype_comma_CLARA.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"32","cases":[],"critical":null},{"id":2168728,"guid":"E75FEC5300E94521BE46D87E57255DC4","previous_id":2168692,"previous_guid":"8E1AF89D63F043FC810BB328811E0B1E","section":"\u003cp\u003eMetagenomic Read Placement\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"3bbv6\",\"text\":\"Normalization by gene length and sample sequencing depth\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4gkl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2pla0\",\"text\":\"The script normalize_for_post_processing_zeros_added3.py can be found at:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4l7vb\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/normalize_for_post_processing_zeros_added3.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":116}],\"data\":{}},{\"key\":\"8kuk3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5aev3\",\"text\":\"To use this script, you will have to change in the body of the script\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5mie\",\"text\":\"-- the outfile name\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aehht\",\"text\":\"-- a file of normalization factors (see step 6 and use that format)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdkr3\",\"text\":\"-- the gene length in nucleotide basepairs\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"72a9m\",\"text\":\"-- the \\\"for post processing\\\" file created in step 32. This file is in the script twice. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9dgm2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d0t5\",\"text\":\"The file produced by this script is our final product that can be used in excel or R. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"F8084A14529F11EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/normalize_for_post_processing_zeros_added3.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"33","cases":[],"critical":null},{"id":2168730,"guid":"2DB819D553024DCD862548788BF5A079","previous_id":2168728,"previous_guid":"E75FEC5300E94521BE46D87E57255DC4","section":"\u003cp\u003eExtras\u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"4vuat\",\"text\":\"To pull out metagenomic reads that placed within a specific taxonomy on the phylogenetic tree\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cp3gg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"btb8s\",\"text\":\"Reasons to do this: If you originally place reads on a very large broad tree, but then want to replace a subset of the reads on a more detailed subtree. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ce30\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ef2d9\",\"text\":\"The scrpt Pulling_out_Stramenopile.py can be found at:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fad9v\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/Pulling_out_Stramenopile.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":98}],\"data\":{}},{\"key\":\"3h5jc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fqtqq\",\"text\":\"Inside the script, make the following changes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"gtde\",\"text\":\"Use the exact name used in the taxon file for the group of interest for Taxonomy\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dd431\",\"text\":\"The fasta_file is the file of reads created in step 27 and used with epa-ng in step 28\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1k0ds\",\"text\":\"The per_query file was created by gappa in step 31 and used in step 32. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3afe5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clg11\",\"text\":\"To replace these reads on a new tree, start with PaPaRa at step 24. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fo58s\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"126E1EB752A111EFAA3D0A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/Pulling_out_Stramenopile.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"34","cases":[],"critical":null},{"id":2168733,"guid":"6BFA5F5BB2FF446E93A4DFE7F23E34F3","previous_id":2168730,"previous_guid":"2DB819D553024DCD862548788BF5A079","section":"\u003cp\u003eExtras\u003c/p\u003e","section_color":"#E57785","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"9d97r\",\"text\":\"Finding the % similarity of reference sequences in a taxon groups on the phylogenetic tree\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"93nc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"71a7t\",\"text\":\"The script percent_similarity_script.py can be found at:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0cls\",\"text\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/percent_similarity_script.py\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":99}],\"data\":{}},{\"key\":\"bh00m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9qnt3\",\"text\":\"This script uses Biopython. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6rnjv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ep7tm\",\"text\":\"To run this script, you need to make a list of the taxon groups of interest in a text file. These taxa are the ones where % similarity will be calculated\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c07k9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1fgje\",\"text\":\"You will need the taxon file created in step 30. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3nd3g\",\"text\":\"You will need the text file of reference sequences used to make the tree (fasta_file)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"B27C6C5C52A211EF9BF00A58A9FEAC02\",\"url\":\"https://github.com/ClaraFuchsman/Phylogenetic-read-placement/blob/main/percent_similarity_script.py\"}}}}","data":null,"protocol_id":100319,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"35","cases":[],"critical":null}],"template_id":0,"title":"Phylogenetic Read Placement Protocol ","title_html":"Phylogenetic Read Placement Protocol ","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"µg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"°К","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"μV","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (µM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"µm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":207,"type_id":3,"name":"V","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"phylogenetic-read-placement-protocol-dd7729rn","url":"https://www.protocols.io/view/phylogenetic-read-placement-protocol-dd7729rn","version_class":100319,"version_data":{"id":0,"code":"dd7729rn","version_class":100319,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"merge_request":null},"version_id":0,"version_uri":"phylogenetic-read-placement-protocol-4r3l2q24xl1y/v1","versions":[{"id":100319,"title":"Phylogenetic Read Placement Protocol ","title_html":"Phylogenetic Read Placement Protocol ","image":{"source":"https://content.protocols.io/files/q8t9cdvfx.jpg","webp_source":null,"placeholder":"https://content.protocols.io/files/q8t9cdvfx.jpg","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.4r3l2q24xl1y/v1","uri":"phylogenetic-read-placement-protocol-dd7729rn","published_on":1723066147,"modified_on":1723066147,"version_class":100319,"version_id":0,"version_code":"dd7729rn","version_uri":"phylogenetic-read-placement-protocol-4r3l2q24xl1y/v1","created_on":1716412181,"categories":null,"type_id":1,"creator":{"name":"Clara A. Fuchsman","affiliation":"University of Maryland Center for Environmental Science","affiliation_url":"","username":"clara-a-fuchsman","link":"https://www.umces.edu/clara-fuchsman","image":{"source":"https://lh3.googleusercontent.com/a/ACg8ocJJIGLc67Y1SAOfgokXZliBI7UVAjEwrlQJBZw2XrsIeZ3HBA=s96-c","placeholder":"https://lh3.googleusercontent.com/a/ACg8ocJJIGLc67Y1SAOfgokXZliBI7UVAjEwrlQJBZw2XrsIeZ3HBA=s96-c","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}