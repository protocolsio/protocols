{"id":36111,"title":" Minimal Event Distance Aneuploidy Lineage Tree (MEDALT) inference based on single cell copy number profile","title_html":"<p> Minimal Event Distance Aneuploidy Lineage Tree (MEDALT) inference based on single cell copy number profile<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8a5bc4w7.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8a5bc4w7.jpg"},"doi":"dx.doi.org\/10.17504\/protocols.io.bfhpjj5n","doi_status":2,"uri":"minimal-event-distance-aneuploidy-lineage-tree-me-bfhpjj5n","type_id":1,"published_on":1589247050,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"created_on":1587677221,"categories":null,"creator":{"name":"Fang Wang","affiliation":null,"affiliations":[],"username":"fang-wang1","link":"https:\/\/www.biorxiv.org\/content\/10.1101\/2020.04.12.038281v1.full","image":{"source":"\/img\/avatars\/003.png","placeholder":"\/img\/avatars\/003.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"public":1,"has_versions":0,"link":"https:\/\/www.biorxiv.org\/content\/10.1101\/2020.04.12.038281v1.full","total_collections":0,"number_of_steps":4,"authors":[{"name":"Fang Wang","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":"fang-wang1","link":null,"image":{"source":"\/img\/avatars\/003.png","placeholder":"\/img\/avatars\/003.png"},"badges":[],"verified":1,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Qihan Wang","affiliation":"Rice University","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Vakul Mohanty","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Shaoheng Liang","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Jinzhuang Dou","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Jincheng Han","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Darlan Conterno Minussi","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Ruli Gao","affiliation":"Houston Methodist Research Institute","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Li Ding","affiliation":"McDonnell Genome Institute Washington University School of Medicine","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Nicholas Navin","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Ken Chen","affiliation":"The University of Texas MD Anderson Cancer center","affiliations":[],"username":"ken-chen1","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/774dbebb4256a5fa55e2ef8371ebe6b5e981090d5a7a6232d8c40ecf6cc9f69f\/b8e6bdgsx.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/774dbebb4256a5fa55e2ef8371ebe6b5e981090d5a7a6232d8c40ecf6cc9f69f\/b8e6bdgsx.jpg"},"badges":[],"verified":1,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/minimal-event-distance-aneuploidy-lineage-tree-me-bfhpjj5n","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"0CE7654085A911EA8326BD2D2E5052B5","state_version_id":395,"steps":[{"id":924770,"guid":"2B19587085A911EA8326BD2D2E5052B5","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"564F7AF97EAB492A98126F2A1E033A1A","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"1C1C987DD8224D2B867314A2072AF114","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Install Python 2.7 and R 3.5<\/div><div class = \"text-block\">Download MEDALT tool from <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/KChen-lab\/MEDALT.git\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/KChen-lab\/MEDALT.git<\/span><\/a><\/div><div class = \"text-block\">Extract input dataset<\/div><\/div>"}},{"id":1054725,"guid":"BC924F8093CF11EAB7CE557CFCC1787A","order_id":2,"type_id":8,"title":"software","source":{"name":"MEDALT","developer":"Fang Wang and Qihan Wang","repository":null,"link":"https:\/\/github.com\/KChen-lab\/MEDALT\/archive\/1.0.tar.gz","os_name":null,"os_version":null}},{"id":1054726,"guid":"D358156093CF11EAB7CE557CFCC1787A","order_id":3,"type_id":9,"title":"dataset","source":{"name":"Single cell copy number profile generated by single cell DNA seq","link":"https:\/\/github.com\/KChen-lab\/MEDALT\/blob\/master\/example\/scDNA.CNV.txt"}},{"id":1054727,"guid":"15AFB9E093D011EAB7CE557CFCC1787A","order_id":4,"type_id":9,"title":"dataset","source":{"name":"Single cell copy number profile inferred from single cell RNA se","link":"https:\/\/github.com\/KChen-lab\/MEDALT\/blob\/master\/example\/scRNA.CNV.txt"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":[],"critical_id":null,"duration":0},{"id":938599,"guid":"5806A6A093C611EA806CBD9700C822EF","previous_id":924770,"previous_guid":"2B19587085A911EA8326BD2D2E5052B5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"B15EB3C1CDFB4B558518A5AFA3E97295","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"836709FED31A406F89EB1E5C3D1AC82C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Decompress gzipped files (MEDALT-1.0.tar.gz)<\/div><\/div>"}},{"id":1054725,"guid":"77AB5B5093D411EABE44DD0E38227159","order_id":2,"type_id":15,"title":"command","source":{"id":7330,"name":"tar -zxvf MEDALT-1.0.tar.gz\ncd MEDALT-1.0\n\n#help document\npython scTree.py -h\n\nUsage: python scTree.py <-P path> <-I input> <-D datatype>\n\nInput integer copy number profile. Columns correspond to chromosomal position.\nRows correspond to cells.\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            Show this help message and exit.\n  -P PATH, --Path=PATH  Path to script\n  -I INPUT, --Input=INPUT\n                        Input file\n  -G GENOME, --Genome=GENOME\n                        Genome version hg19 or hg38\n  -O OUTPUT, --Output=OUTPUT\n                        Output path\n  -D DATATYPE, --Datatype=DATATYPE\n                        The type of input data. Either D (DNA-seq)\n                        or R (RNA-seq).\n  -W WINDOWS, --Windows=WINDOWS\n                        the number of genes you want to merge when \n                        you input copy number profile inferred from \n                        scRNA-seq. Default 30.\n  -R PERMUTATION, --Permutation=PERMUTATION\n                        Whether reconstructed permuted tree (T) or \n                        not (F). If not, permuted copy number \n                        profile will be used to perform LSA. Default\n                        value is F due to time cost.","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":938857,"guid":"A1EC5A8093D511EA8546A7CB15827FF3","previous_id":938599,"previous_guid":"5806A6A093C611EA806CBD9700C822EF","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"560FBF95FC9A4E54839D2487479046B3","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"A51B61B051BA4ED692336969CDA50F9D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Run the example data generated based on single cell DNA sequencing technology<\/div><\/div>"}},{"id":1054725,"guid":"834014F093DA11EAAB5F67B629407B5D","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8ckbc4w7.txt","placeholder":"\/img\/extensions\/txt.png","original_name":"scDNA.CNV.txt"}},{"id":1054726,"guid":"E46C191093D811EAB1CCF9EA38E248F0","order_id":3,"type_id":15,"title":"command","source":{"id":7331,"name":"python scTree.py -P .\/ -I .\/example\/scDNA.CNV.txt -D D -G hg19 -O .\/example\/outputDNA\n\n\nTransfer data to segmental level\nInferring MEDALT.\nMEDALT inferrence finish.\nPerforming LSA.\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nLoading required package: S4Vectors\nLoading required package: stats4\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    expand.grid\n\nLoading required package: IRanges\nLoading required package: GenomicRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biostrings\nLoading required package: XVector\n\nAttaching package: \u2018Biostrings\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    strsplit\n\nLoading required package: BSgenome\nLoading required package: rtracklayer\nLoading required package: GenomicFeatures\nLoading required package: AnnotationDbi\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: VariantAnnotation\nLoading required package: SummarizedExperiment\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: \u2018matrixStats\u2019\n\nThe following objects are masked from \u2018package:Biobase\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: \u2018DelayedArray\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following object is masked from \u2018package:Biostrings\u2019:\n\n    type\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    aperm, apply\n\nLoading required package: Rsamtools\n\nAttaching package: \u2018VariantAnnotation\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    tabulate\n\nLoading required package: GenomicAlignments\nThere were 20 warnings (use warnings() to see them)\n\nAttaching package: \u2018igraph\u2019\n\nThe following objects are masked from \u2018package:DelayedArray\u2019:\n\n    path, simplify\n\nThe following objects are masked from \u2018package:rtracklayer\u2019:\n\n    blocks, path\n\nThe following object is masked from \u2018package:Biostrings\u2019:\n\n    union\n\nThe following object is masked from \u2018package:GenomicRanges\u2019:\n\n    union\n\nThe following object is masked from \u2018package:IRanges\u2019:\n\n    union\n\nThe following object is masked from \u2018package:S4Vectors\u2019:\n\n    union\n\nThe following objects are masked from \u2018package:BiocGenerics\u2019:\n\n    normalize, path, union\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    decompose, spectrum\n\nThe following object is masked from \u2018package:base\u2019:\n\n    union\n\nWarning message:\npackage \u2018igraph\u2019 was built under R version 3.5.2 \n\nAttaching package: \u2018DescTools\u2019\n\nThe following object is masked from \u2018package:igraph\u2019:\n\n    %c%\n\nWarning message:\npackage \u2018DescTools\u2019 was built under R version 3.5.2 \n[1] Visualization MEDALT!\nnull device \n          1 \n[1] LSA segmentation!\n[1] Calculating CFL\n[1] Calculating permutation CFL\n[1] Estimate emperical p value\n[1] Estimate parallel evolution\nnull device \n          1 \nDone!","command_name":"","command":null,"os_name":null,"os_version":null}},{"id":1054727,"guid":"86CAA8E8193B420F8A707B28CC154ED4","order_id":4,"type_id":26,"title":"notes","source":{"id":0,"parent_id":0,"uri":"","title":"","body":"<div class = \"text-blocks\"><div class = \"text-block\">R packages (igraph, HelloRanges and DescTools) are loaded.<\/div><\/div>","created_on":0,"changed_on":0,"creator":{"name":" ","affiliation":"","affiliations":[],"username":"","link":null,"image":{"source":"","placeholder":""},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"comments":[]}},{"id":1054728,"guid":"DDEFA6C7608C4F969FDD21ED7F2981BC","order_id":5,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div class = \"text-block\">Three text files are expected:<\/div><div class = \"text-block\">(1) CNV.tree.txt which is an rooted directed tree including three columns: parent node, child node and distance.<\/div><div class = \"text-block\">(2) segmental.LSA.txt which includes broad CNAs significantly associated with lineage expansion.<\/div><div class = \"text-block\">(3) gene.LSA.txt which includes focal (gene) CNAs significantly associated with lineage expansion.<\/div><div class = \"text-block\">Two figures are also expected:<\/div><div class = \"text-block\">(1) singlecell.tree.pdf which is a visualization of MEDALT by igraph. You also can input CNV.tree.txt into Cytoscape to generate preferred visualization. <\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8debc4w7.jpg\" \/><\/div><div class = \"text-block\">(2) LSA.tree.pdf which is a visualization of identified CNAs by igraph.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8dgbc4w7.jpg\" \/><\/div><\/div>"}},{"id":1054729,"guid":"32407FCA4C2049FAB0D26AC41BC8669F","order_id":6,"type_id":26,"title":"notes","source":{"id":0,"parent_id":0,"uri":"","title":"","body":"<div class = \"text-blocks\"><div class = \"text-block\">We run the example data only through permuting copy number profile instead of reconstructing tree based on permuted copy number profile. The seting can be changed via -R T. <\/div><\/div>","created_on":0,"changed_on":0,"creator":{"name":" ","affiliation":"","affiliations":[],"username":"","link":null,"image":{"source":"","placeholder":""},"badges":[],"verified":0,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"comments":[]}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":938899,"guid":"95F0529093DA11EAAB5F67B629407B5D","previous_id":938857,"previous_guid":"A1EC5A8093D511EA8546A7CB15827FF3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"175619B132904D8F8C717A6C1CFDC24B","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"70F2817D75CA46F18AAB6A031771669E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Run the example data inferred using inferCNV based on single cell RNA sequencing technology<\/div><\/div>"}},{"id":1054725,"guid":"ECB54E0093DA11EAAB5F67B629407B5D","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8cpbc4w7.txt","placeholder":"\/img\/extensions\/txt.png","original_name":"scRNA.CNV.txt"}},{"id":1054726,"guid":"115F4A8093DB11EAAB5F67B629407B5D","order_id":3,"type_id":15,"title":"command","source":{"id":7332,"name":"python scTree.py -P .\/ -I .\/example\/scRNA.CNV.txt -D R -G hg19 -O .\/example\/outputRNA\n\nTransfer data to segmental level\nThe number of genes which are merger into the bin is default value 30. If you want change it please specify the value through -W\nInferring MEDALT.\nMEDALT inferrence finish.\nPerforming LSA.\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nLoading required package: S4Vectors\nLoading required package: stats4\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    expand.grid\n\nLoading required package: IRanges\nLoading required package: GenomicRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biostrings\nLoading required package: XVector\n\nAttaching package: \u2018Biostrings\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    strsplit\n\nLoading required package: BSgenome\nLoading required package: rtracklayer\nLoading required package: GenomicFeatures\nLoading required package: AnnotationDbi\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: VariantAnnotation\nLoading required package: SummarizedExperiment\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: \u2018matrixStats\u2019\n\nThe following objects are masked from \u2018package:Biobase\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: \u2018DelayedArray\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following object is masked from \u2018package:Biostrings\u2019:\n\n    type\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    aperm, apply\n\nLoading required package: Rsamtools\n\nAttaching package: \u2018VariantAnnotation\u2019\n\nThe following object is masked from \u2018package:base\u2019:\n\n    tabulate\n\nLoading required package: GenomicAlignments\nThere were 20 warnings (use warnings() to see them)\n\nAttaching package: \u2018igraph\u2019\n\nThe following objects are masked from \u2018package:DelayedArray\u2019:\n\n    path, simplify\n\nThe following objects are masked from \u2018package:rtracklayer\u2019:\n\n    blocks, path\n\nThe following object is masked from \u2018package:Biostrings\u2019:\n\n    union\n\nThe following object is masked from \u2018package:GenomicRanges\u2019:\n\n    union\n\nThe following object is masked from \u2018package:IRanges\u2019:\n\n    union\n\nThe following object is masked from \u2018package:S4Vectors\u2019:\n\n    union\n\nThe following objects are masked from \u2018package:BiocGenerics\u2019:\n\n    normalize, path, union\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    decompose, spectrum\n\nThe following object is masked from \u2018package:base\u2019:\n\n    union\n\nWarning message:\npackage \u2018igraph\u2019 was built under R version 3.5.2 \n\nAttaching package: \u2018DescTools\u2019\n\nThe following object is masked from \u2018package:igraph\u2019:\n\n    %c%\n\nWarning message:\npackage \u2018DescTools\u2019 was built under R version 3.5.2 \n[1] Visualization MEDALT!\nnull device \n          1 \n[1] LSA segmentation!\n[1] Calculating CFL\n[1] Calculating permutation CFL\n[1] Estimate emperical p value\n[1] Estimate parallel evolution\nnull device \n          1 \nDone!","command_name":"","command":null,"os_name":null,"os_version":null}},{"id":1054727,"guid":"DC27E25A54674C179862EF74A5DFE09B","order_id":4,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div class = \"text-block\">Three text files are expected:<\/div><div class = \"text-block\">(1) CNV.tree.txt which is an rooted directed tree including three columns: parent node, child node and distance.<\/div><div class = \"text-block\">(2) segmental.LSA.txt which includes broad CNAs significantly associated with lineage expansion.<\/div><div class = \"text-block\">(3) gene.LSA.txt which includes focal (gene) CNAs significantly associated with lineage expansion.<\/div><div class = \"text-block\">Two figures are also expected:<\/div><div class = \"text-block\">(1) singlecell.tree.pdf which is a visualization of MEDALT by igraph. <\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8c8bc4w7.jpg\" \/><\/div><div class = \"text-block\">(2) LSA.tree.pdf which is a visualization of identified CNAs by igraph.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e941fb5d4207d5d3b0d850e66e760c5fc2215df02bdcab2ba3cae152f1071c3b\/b8dabc4w7.jpg\" \/><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":null,"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\"><div class = \"justify\" style = \"text-align:justify\">This protocol describes two innovative algorithms:<\/div><style>\n\t\t\t\t\t\t\t  .justify:after {\n\t\t\t\t\t\t\t    content: \"\";\n\t\t\t\t\t\t\t    display:inline-block;\n\t\t\t\t\t\t\t    width: 100%;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t<\/style><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:justify\">1) A minimal event distance aneuploidy lineage tree (MEDALT) inference algorithm allows implementing genetically meaningful distances and is scalable to current single-cell datasets containing thousands of cells, and<\/div><style>\n\t\t\t\t\t\t\t  .justify:after {\n\t\t\t\t\t\t\t    content: \"\";\n\t\t\t\t\t\t\t    display:inline-block;\n\t\t\t\t\t\t\t    width: 100%;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t<\/style><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:justify\">2) A statistical routine, Lineage Speciation Analysis (LSA), enables prioritization of CNAs and genes that are non-randomly associated with the observed lineage expansion and thereby are potentially functionally important.<\/div><style>\n\t\t\t\t\t\t\t  .justify:after {\n\t\t\t\t\t\t\t    content: \"\";\n\t\t\t\t\t\t\t    display:inline-block;\n\t\t\t\t\t\t\t    width: 100%;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t<\/style><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:justify\"><\/div><style>\n\t\t\t\t\t\t\t  .justify:after {\n\t\t\t\t\t\t\t    content: \"\";\n\t\t\t\t\t\t\t    display:inline-block;\n\t\t\t\t\t\t\t    width: 100%;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t<\/style><\/div><\/div>","changed_on":1589247050}