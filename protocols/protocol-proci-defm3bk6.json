{"access":{"can_view":true,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":false,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"authors":[{"name":"Chiara Parravicini","affiliation":"University of Bologna","affiliation_url":null,"username":"chiara-parravicini","link":null,"image":{"source":"/img/avatars/013.png","placeholder":"/img/avatars/013.png","webp_source":""},"note":"","is_verified_user":true},{"name":"Daniele Spedicati","affiliation":"University of Bologna","affiliation_url":null,"username":"daniele-spedicati","link":null,"image":{"source":"/img/avatars/016.png","placeholder":"/img/avatars/016.png","webp_source":""},"note":"","is_verified_user":true},{"name":"Matteo Guenci","affiliation":"University of Bologna","affiliation_url":null,"username":"matteo-guenci","link":null,"image":{"source":"/img/avatars/016.png","placeholder":"/img/avatars/016.png","webp_source":""},"note":"","is_verified_user":true},{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""},"note":"","is_verified_user":true}],"before_start":"","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1712565340,"creator":{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""},"badges":[{"id":2,"name":"Author","image":{"source":"/img/badges/bronze.svg","placeholder":"/img/badges/bronze.svg"}},{"id":6,"name":"Science accelerator","image":{"source":"/img/badges/accelerator.svg","placeholder":"/img/badges/accelerator.svg"}}],"affiliations":[{"affiliation":"University of Bologna","url":null,"job_title":"","is_default":true}]},"cross_cloud_origin":null,"description":"{\"blocks\":[{\"key\":\"9pora\",\"text\":\"We present a step-by-step methodology for the systematic extraction, alignment, and analysis of peer review data from Crossref to enhance the OpenCitations Index. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":118,\"length\":8},{\"key\":1,\"offset\":142,\"length\":19}],\"data\":{}},{\"key\":\"fp7bo\",\"text\":\"The protocol delineates four key phases: data gathering, data processing, post-processing, data analysis and data visualization.  The first two research questions were addressed during the data processing and post-processing phases, while the answers to the third, fourth, and fifth questions were found during the data analysis phase.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f94s5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ecbqp\",\"text\":\"Purpose: The purpose of this study is to create a citation index that includes typed citations where a peer review (citing entity) reviews a publication (cited entity).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bha7k\",\"text\":\"Study Design and Methodology: The study involves analyzing and manipulating the 2023 Crossref data dump. Crossref is a non-profit organization that facilitates the exchange of scholarly metadata. The outcome of the study is the development of a software capable of extracting typed entities identified as peer reviews from Crossref dataset and integrating additional information about the reviewed entities from the same dataset. This software generates CSVs and a Turtle file that conform to the OpenCitations Data Model.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":30}],\"entityRanges\":[],\"data\":{}},{\"key\":\"781ji\",\"text\":\"Findings: Based on Crossref data, it is determined that the journal receiving the most peer reviews is PeerJ. Furthermore, it is found that approximately 5689 out of 348463 of Crossref’s peer reviews are present in Meta (1.6% ); 70260 are the Publications in Meta over the 77660 found in Crossref ( 90,5%).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":9}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aj854\",\"text\":\"Originality: This study enhances scholarly metadata and deepens the understanding of research\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":12}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5g4d\",\"text\":\"impact by proposing a novel citation index that captures peer review interactions.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"A26A916AA43C4FB68297C475595FDD15\",\"url\":\"https://www.crossref.org/\"}},\"1\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"447777E8F277442FB0E5DFB4FAE737C6\",\"url\":\"https://opencitations.net/index\"}}}}","disclaimer":"","document":"","documents":null,"doi":"dx.doi.org/10.17504/protocols.io.261ge56qwg47/v3","doi_status":1,"ethics_statement":null,"fork_id":null,"fork_info":null,"forks":[],"funders":[],"groups":[],"guid":"0E6CDD8219D911EFAE230A58A9FEAC02","guidelines":"{\"blocks\":[{\"key\":\"fnrs5\",\"text\":\"The required Python version for running the current software is Python 3.10.8.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ar5e9\",\"text\":\"Other libraries needed are:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2k5lh\",\"text\":\"pytz version: 2022.7.1\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3d0sg\",\"text\":\"python-dateutil version: 2.8.2\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"704qk\",\"text\":\"polars version: 0.20.27\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fdkcp\",\"text\":\"tqdm version: 4.64.1\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9mo8c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1l265\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c3ke1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","has_references":true,"has_step_reagents":false,"has_versions":true,"id":100557,"image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"image_attribution":"","in_trash":false,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":false,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":1253653,"journal":null,"journals":[],"keywords":"","last_modified":1716880482,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"{\"blocks\":[{\"key\":\"59vg0\",\"text\":\"Heibi, I., Peroni, S. \\u0026 Shotton, D. Software review: COCI, the OpenCitations Index of Crossref open DOI-to-DOI citations.Scientometrics 121, 1213–1228 (2019). https://doi.org/10.1007/s11192-019-03217-6.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":159,\"length\":42}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"037E7C391AB811EFA15F0A58A9FEAC02\",\"url\":\"https://doi.org/10.1007/s11192-019-03217-6\"}}}}","public":true,"public_fork_note":"","published_on":1716880482,"references":[],"related_equipments":[],"related_materials":[],"reserved_doi":"","retraction_reason":null,"samples":{},"shared_access_id":265,"show_comparison":true,"sign_info":null,"space_access":{"can_view":false,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":true,"can_get_doi":true,"can_share":false,"can_move":false,"can_move_outside":false,"can_transfer":false,"can_download":false,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"space_id":120125,"state_version_id":4482,"stats":{"is_voted":false,"number_of_views":149,"number_of_steps":14,"number_of_bookmarks":0,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it's working"},"steps":[{"id":2071812,"guid":"0E8387B919D911EFAE230A58A9FEAC02","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eGathering Data\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"55itd\",\"text\":\"In order to answer to our research questions, we gathered data from Crossref (dump released on April 2023, zip file of 185.88GB) and OpenCitations Meta (dump released on April 2024, zip file of 11GB).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":68,\"length\":9},{\"style\":\"bold\",\"offset\":133,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cd0fv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"5udjh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7k8u\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"27a2f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"dataset\",\"mutability\":\"IMMUTABLE\",\"data\":{\"affiliation\":null,\"can_edit\":false,\"guid\":\"49A64973341F11EE9D4302C0B41BC903\",\"link\":\"https://opencitations.net/download#meta\",\"name\":\"META\"}},\"1\":{\"type\":\"dataset\",\"mutability\":\"IMMUTABLE\",\"data\":{\"affiliation\":null,\"can_edit\":true,\"guid\":\"017FE6EF1A8811EFA15F0A58A9FEAC02\",\"link\":\"https://academictorrents.com/details/d9e554f4f0c3047d9f49e448a7004f7aa1701b69\",\"name\":\"Crossref\"}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046891,"number":"1","cases":[],"critical":null},{"id":2071813,"guid":"0E8463A419D911EFAE230A58A9FEAC02","previous_id":2073296,"previous_guid":"0E888DC119D911EFAE230A58A9FEAC02","section":"\u003cp\u003ePost-processing\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"91alr\",\"text\":\"The main purpose of this phase of the worklflow is using the processed data about peer reviews and articles reviewed we obtained as output of the previous steps to create instances of the class PeerReview and to generate a RDF graph. These operations satisfy the requests contained in the first two research questions (RQ1, RQ2), which focus on the creation of typed citations and the creation of an index compliant to the OpenCitations Data Model.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":319,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cgjmk\",\"text\":\"In this phase we also save information retrieved in the previous steps in different CSV files for convenience purposes, as explained in the following section.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046892,"number":"4","cases":[],"critical":null},{"id":2071814,"guid":"0E8515AB19D911EFAE230A58A9FEAC02","previous_id":2071812,"previous_guid":"0E8387B919D911EFAE230A58A9FEAC02","section":"\u003cp\u003eGathering Data\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"6svuu\",\"text\":\"The Crossref dump includes extensive metadata for scholarly publications. The dataset is typically organized with each record representing a single publication, containing various fields such as DOI, title, authors, publication date, journal name, and, notably, information about citations and peer reviews. Here is an example of the JSON data structure for peer reviews:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bi63d\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7g9jq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"foem4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"evr63\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b5274\",\"text\":\"It is important to note that the capabilities of the computers at our disposal did not allow us to download the entire dump. Therefore, we leveraged more powerful servers provided by the University of Bologna to download the dataset, which subsequently has been divided into 18 chunks, each approximately 10 GB in size.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3mb2d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5iidu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"code_insert\",\"mutability\":\"IMMUTABLE\",\"data\":{\"blocks\":[{\"data\":{},\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"528fv\",\"text\":\"{\\n        \\\"URL\\\": \\\"http://dx.doi.org/10.7554/elife.69960.sa2\\\",\\n        \\\"resource\\\": {\\n            \\\"primary\\\": {\\n                \\\"URL\\\": \\\"https://elifesciences.org/articles/69960#sa2\\\"\\n            }\\n        },\\n        \\\"member\\\": \\\"4374\\\",\\n        \\\"score\\\": 0.0,\\n        \\\"created\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2022,\\n                    9,\\n                    6\\n                ]\\n            ],\\n            \\\"date-time\\\": \\\"2022-09-06T13:30:35Z\\\",\\n            \\\"timestamp\\\": 1662471035000\\n        },\\n        \\\"license\\\": [\\n            {\\n                \\\"start\\\": {\\n                    \\\"date-parts\\\": [\\n                        [\\n                            2021,\\n                            10,\\n                            13\\n                        ]\\n                    ],\\n                    \\\"date-time\\\": \\\"2021-10-13T00:00:00Z\\\",\\n                    \\\"timestamp\\\": 1634083200000\\n                },\\n                \\\"content-version\\\": \\\"unspecified\\\",\\n                \\\"delay-in-days\\\": 0,\\n                \\\"URL\\\": \\\"http://creativecommons.org/licenses/by/4.0/\\\"\\n            }\\n        ],\\n        \\\"issued\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2021,\\n                    10,\\n                    13\\n                ]\\n            ]\\n        },\\n        \\\"review\\\": {\\n            \\\"type\\\": \\\"author-comment\\\",\\n            \\\"stage\\\": \\\"pre-publication\\\"\\n        },\\n        \\\"prefix\\\": \\\"10.7554\\\",\\n        \\\"reference-count\\\": 0,\\n        \\\"indexed\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2022,\\n                    9,\\n                    6\\n                ]\\n            ],\\n            \\\"date-time\\\": \\\"2022-09-06T14:14:29Z\\\",\\n            \\\"timestamp\\\": 1662473669310\\n        },\\n        \\\"author\\\": [\\n            {\\n                \\\"ORCID\\\": \\\"http://orcid.org/0000-0002-6672-5202\\\",\\n                \\\"authenticated-orcid\\\": true,\\n                \\\"given\\\": \\\"Allison\\\",\\n                \\\"family\\\": \\\"Schad\\\",\\n                \\\"sequence\\\": \\\"first\\\",\\n                \\\"affiliation\\\": [\\n                    {\\n                        \\\"id\\\": [\\n                            {\\n                                \\\"id\\\": \\\"https://ror.org/0130frc33\\\",\\n                                \\\"id-type\\\": \\\"ROR\\\",\\n                                \\\"asserted-by\\\": \\\"publisher\\\"\\n                            }\\n                        ],\\n                        \\\"name\\\": \\\"Office of Medical Education, University of North Carolina at Chapel Hill School of Medicine\\\",\\n                        \\\"place\\\": [\\n                            \\\"Chapel Hill, United States\\\"\\n                        ]\\n                    }\\n                ]\\n            },\\n            {\\n                \\\"ORCID\\\": \\\"http://orcid.org/0000-0001-7113-1348\\\",\\n                \\\"authenticated-orcid\\\": true,\\n                \\\"given\\\": \\\"Rebekah L\\\",\\n                \\\"family\\\": \\\"Layton\\\",\\n                \\\"sequence\\\": \\\"first\\\",\\n                \\\"affiliation\\\": [\\n                    {\\n                        \\\"id\\\": [\\n                            {\\n                                \\\"id\\\": \\\"https://ror.org/0130frc33\\\",\\n                                \\\"id-type\\\": \\\"ROR\\\",\\n                                \\\"asserted-by\\\": \\\"publisher\\\"\\n                            }\\n                        ],\\n                        \\\"name\\\": \\\"Office of Medical Education, University of North Carolina at Chapel Hill School of Medicine\\\",\\n                        \\\"place\\\": [\\n                            \\\"Chapel Hill, United States\\\"\\n                        ]\\n                    }\\n                ]\\n            },\\n            {\\n                \\\"ORCID\\\": \\\"http://orcid.org/0000-0001-9512-1988\\\",\\n                \\\"authenticated-orcid\\\": true,\\n                \\\"given\\\": \\\"Debra\\\",\\n                \\\"family\\\": \\\"Ragland\\\",\\n                \\\"sequence\\\": \\\"additional\\\",\\n                \\\"affiliation\\\": [\\n                    {\\n                        \\\"id\\\": [\\n                            {\\n                                \\\"id\\\": \\\"https://ror.org/0130frc33\\\",\\n                                \\\"id-type\\\": \\\"ROR\\\",\\n                                \\\"asserted-by\\\": \\\"publisher\\\"\\n                            }\\n                        ],\\n                        \\\"name\\\": \\\"Office of Medical Education, University of North Carolina at Chapel Hill School of Medicine\\\",\\n                        \\\"place\\\": [\\n                            \\\"Chapel Hill, United States\\\"\\n                        ]\\n                    }\\n                ]\\n            },\\n            {\\n                \\\"ORCID\\\": \\\"http://orcid.org/0000-0003-0849-7405\\\",\\n                \\\"authenticated-orcid\\\": true,\\n                \\\"given\\\": \\\"Jeanette Gowen\\\",\\n                \\\"family\\\": \\\"Cook\\\",\\n                \\\"sequence\\\": \\\"additional\\\",\\n                \\\"affiliation\\\": [\\n                    {\\n                        \\\"id\\\": [\\n                            {\\n                                \\\"id\\\": \\\"https://ror.org/0130frc33\\\",\\n                                \\\"id-type\\\": \\\"ROR\\\",\\n                                \\\"asserted-by\\\": \\\"publisher\\\"\\n                            }\\n                        ],\\n                        \\\"name\\\": \\\"Office of Medical Education, University of North Carolina at Chapel Hill School of Medicine\\\",\\n                        \\\"place\\\": [\\n                            \\\"Chapel Hill, United States\\\"\\n                        ]\\n                    },\\n                    {\\n                        \\\"id\\\": [\\n                            {\\n                                \\\"id\\\": \\\"https://ror.org/0130frc33\\\",\\n                                \\\"id-type\\\": \\\"ROR\\\",\\n                                \\\"asserted-by\\\": \\\"publisher\\\"\\n                            }\\n                        ],\\n                        \\\"name\\\": \\\"Department of Biochemistry and Biophysics, University of North Carolina at Chapel Hill School of Medicine\\\",\\n                        \\\"place\\\": [\\n                            \\\"Chapel Hill, United States\\\"\\n                        ]\\n                    }\\n                ]\\n            }\\n        ],\\n        \\\"DOI\\\": \\\"10.7554/elife.69960.sa2\\\",\\n        \\\"is-referenced-by-count\\\": 0,\\n        \\\"published\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2021,\\n                    10,\\n                    13\\n                ]\\n            ]\\n        },\\n        \\\"published-print\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2021,\\n                    10,\\n                    13\\n                ]\\n            ]\\n        },\\n        \\\"content-domain\\\": {\\n            \\\"domain\\\": []\\n        },\\n        \\\"title\\\": [\\n            \\\"Author response: Mental health in medical and biomedical doctoral students during the 2020 COVID-19 pandemic and racial protests\\\"\\n        ],\\n        \\\"source\\\": \\\"Crossref\\\",\\n        \\\"type\\\": \\\"peer-review\\\",\\n        \\\"publisher\\\": \\\"eLife Sciences Publications, Ltd\\\",\\n        \\\"references-count\\\": 0,\\n        \\\"deposited\\\": {\\n            \\\"date-parts\\\": [\\n                [\\n                    2022,\\n                    9,\\n                    6\\n                ]\\n            ],\\n            \\\"date-time\\\": \\\"2022-09-06T13:30:36Z\\\",\\n            \\\"timestamp\\\": 1662471036000\\n        },\\n        \\\"relation\\\": {\\n            \\\"is-review-of\\\": [\\n                {\\n                    \\\"id-type\\\": \\\"doi\\\",\\n                    \\\"id\\\": \\\"10.7554/eLife.69960\\\",\\n                    \\\"asserted-by\\\": \\\"subject\\\"\\n                }\\n            ]\\n        }\\n    }\",\"type\":\"unstyled\"}],\"entityMap\":{},\"guid\":\"37754DEC1E104F30B36FD2CDDEAE4B5A\"}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046894,"number":"1.1","cases":[],"critical":null},{"id":2071815,"guid":"0E86630C19D911EFAE230A58A9FEAC02","previous_id":2073150,"previous_guid":"6A46D55F4E7F410F94763ED07A609A08","section":"\u003cp\u003e\u003cstrong\u003eData processing\u003c/strong\u003e\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"4upl2\",\"text\":\"This phase takes the Crossref data as input and selects the values from the JSON files that are necessary for alignment with the OpenCitations Index data model. The software extracts the information of peer reviews and non-peer review entities separately to generate distinct CSV files. Only the information useful according to the OC data model is extracted.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046895,"number":"2","cases":[],"critical":null},{"id":2071816,"guid":"0E87CFCE19D911EFAE230A58A9FEAC02","previous_id":2071815,"previous_guid":"0E86630C19D911EFAE230A58A9FEAC02","section":"\u003cp\u003e\u003cstrong\u003eData processing\u003c/strong\u003e\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"64j37\",\"text\":\"Peer review extraction:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":23}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5io5l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"21q6n\",\"text\":\"During the initial setup, we use the \\\"argparse\\\" module to handle instructions directly from the command line. It prompts for important details such as the path of the ZIP file, where to save the output CSV files, and how many files to handle at once (given that a single chunk typically comprises 1600 files.json.gz). This configuration ensures readiness for subsequent steps. Below is a list of the required arguments:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4i6fe\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e9lou\",\"text\":\"\\\"zip_filename\\\": the path to the ZIP file containing compressed JSON files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fhkmn\",\"text\":\"\\\"output_filenames\\\": one or more filenames for the output CSV files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d8n77\",\"text\":\"\\\"batch_size\\\": number of files to process concurrently in each batch (default is 10).\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a59gl\",\"text\":\"\\\"max_files\\\": maximum number of files to process.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7r7ve\",\"text\":\"\\\"max_workers\\\": number of worker threads for concurrent processing (default is 2).\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adlj9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"79jsl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ea2m2\",\"text\":\"PeerExtractor() Class Initialization:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":37}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5a6lp\",\"text\":\"After the setup, the PeerExtractor class is initialized. This class takes the following parameters:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bhah7\",\"text\":\"\\\"zip_filename\\\": the path to the ZIP file containing compressed JSON files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e1rht\",\"text\":\"\\\"batch_size\\\": the number of files to process concurrently in each batch, with a default value of 10.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"efvso\",\"text\":\"\\\"max_workers\\\": the maximum number of threads for concurrent processing, with a default value of 2.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ssi3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9lnbl\",\"text\":\"\\\"process_files\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":23}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fh2r3\",\"text\":\"With the setup complete, the script begins working through the ZIP file. This method opens the ZIP file, identifies the relevant files, and then divides them into manageable batches (the size of which is determined by the user). This method oversees the entire process, ensuring smooth operation from start to finish. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4vvt9\",\"text\":\"Here's a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"drkiu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7at0q\",\"text\":\"- \\\"csv_writer\\\": an instance of the CSVWriter function used for writing CSV files. This logic was implemented primarily for testing purposes because, on average, every 1600 files need CSV conversion. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4l8q3\",\"text\":\"- If \\\"max_files\\\" is specified, the function limits the number of files processed, mainly for testing purposes. After that, the function processes files in batches using the \\\"process_batch\\\" method. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2jepo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"arlh\",\"text\":\"\\\"batch\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":15}],\"entityRanges\":[],\"data\":{}},{\"key\":\"29upf\",\"text\":\"When dealing with a large number of files, often the best choice is to handle them in smaller groups. The batch method manages to divide the task into smaller parts that the script can handle more efficiently, without overloading the system, especially if one does not possess a performative machine. Here's a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1sv5u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dh4bv\",\"text\":\"- \\\"n\\\": the size of each batch.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fehrg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"be2eb\",\"text\":\"This generator method helps in splitting a large list into smaller chunks or batches, each of size n. It iterates over the input list and yields successive slices of the list, allowing for batch processing. As said, this method is useful in scenarios where processing the entire list at once would be inefficient or consume too much memory.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bvvll\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bkorn\",\"text\":\"\\\"process_batch\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":23}],\"entityRanges\":[],\"data\":{}},{\"key\":\"508q1\",\"text\":\"Once the files are grouped together, it's time to start working on them. This method concurrently processes a given batch of files using a thread pool managed by the ThreadPoolExecutor module. For each file in the batch, a separate thread is created to handle the file processing, which involves reading and extracting peer review items. The results from each thread are collected and combined into a single list. The use of concurrent threads allows multiple files to be processed simultaneously, significantly speeding up the overall processing time compared to sequential processing.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":166,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fapqp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ugj5\",\"text\":\"\\\"process_file\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":14},{\"style\":\"bold\",\"offset\":15,\"length\":7}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4h2ml\",\"text\":\"Now, this method reads and unpacks each file contained in the bigger ZIP file, getting it ready for further work. This careful approach ensures each file is handled properly. Here's a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"do0o3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b55tg\",\"text\":\"- \\\"zip_file\\\": the opened ZIP file object.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"878k9\",\"text\":\"- \\\"file_to_process\\\": the file name to process.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3l10q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8e6de\",\"text\":\"\\\"process_json_data\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":27}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2o5ub\",\"text\":\"The purpose of this method can be explained as essentially decompressing and decoding the JSON data. It then attempts to parse the string as JSON, handling potential parsing errors by logging any problematic data. Once parsed, the method checks the structure of the JSON data to determine if it contains a dictionary with an \\\"items\\\" key or is a list directly. This logic was implemented due to the fact that the structure of the data resulted in differences between peer review information and non-peer review information. Later, the method extracts peer review items from the JSON data by filtering the relevant JSON data.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77hsl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"al7hj\",\"text\":\"OciProcess() class initialization:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":34}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5iuir\",\"text\":\"This class is responsible for preparing the necessary tools and data for converting DOIs into OCIs (Open Citation Identifiers). Here's a detailed explanation of the initialization process and the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ejlua\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d36pc\",\"text\":\"- \\\"lookup_csv\\\": the CSV file with character-to-code mappings (defaults to LOOKUP_CSV).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"58gao\",\"text\":\"- \\\"crossref_code\\\": the prefix for CrossRef DOIs (defaults to CROSSREF_CODE).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ebep2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6g9k7\",\"text\":\"During initialization, the class first reads the CSV file specified by the \\\"lookup_csv\\\" argument to set up a dictionary. This dictionary maps characters found in DOIs to specific codes. Next, it sets the CrossRef prefix using the \\\"crossref_code\\\" argument, which will be used in the conversion of DOIs to OCIs (Open Citation Identifiers). This initialization ensures that the \\\"OciProcess\\\" instance is equipped with the necessary data and tools to initiate the conversion process, making subsequent citation processing tasks more efficient.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77lfb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ad56r\",\"text\":\"\\\"init_lookup_dic\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":25}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ckt7g\",\"text\":\"This method is responsible for setting up the lookup dictionary by reading data from a CSV file and populating it with character-to-code mappings. This is an essential part of the preparation process, ensuring the dictionary is ready for later use. Here's a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5k8ai\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dt5hu\",\"text\":\"- \\\"lookup_csv\\\": the path to the CSV file containing character-to-code mappings.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6imal\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1vrkr\",\"text\":\"The method uses csv.DictReader() to read the CSV file, which allows for easy lookup of the mappings. It also initializes the \\\"lookup_code\\\" to the highest code found in the CSV. This step ensures that any new codes can be assigned sequentially without conflicts. By extracting the character-to-code mappings from the CSV file, the \\\"init_lookup_dic\\\" method populates the \\\"lookup_dic\\\" dictionary and sets the \\\"lookup_code\\\". This ensures the lookup dictionary is correctly populated with existing mappings and prepared to handle new characters as needed.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":16,\"length\":16}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c8iqi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"75mno\",\"text\":\"\\\"calc_next_lookup_code\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":31}],\"entityRanges\":[],\"data\":{}},{\"key\":\"589f2\",\"text\":\"This method basically ensures each code is unique and follows a logical order. It calculates the next available code for the lookup dictionary by first ensuring that each code is assigned sequentially and handles transitions between ranges, such as moving from 089 to 100. This systematic approach prevents duplicate codes and maintains a logical order for the codes. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3v72u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cj39q\",\"text\":\"\\\"update_lookup\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2endk\",\"text\":\"This purpose of this method is to check if a character is already in the dictionary, and if not, it adds it with a code. By consequence its functionality is to update the lookup dictionary with a new character-to-code mapping if needed. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7gjgo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bmuje\",\"text\":\"\\\"c\\\": the character to be added to the lookup dictionary.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"964f8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"acdlq\",\"text\":\"The purpose of this method is to check if a character, specified by \\\"c\\\" is already in the dictionary, and if not, it adds it with a code. The\\\"update_lookup\\\" method updates the lookup dictionary with a new character-to-code mapping if needed. It calculates the next available code by calling \\\"calc_next_lookup\\\" and appends the new mapping to the CSV file using \\\"write_txtblock_on_csv\\\"  This ensures that the lookup dictionary remains up-to-date and consistent with the stored CSV file.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"848u9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cj64h\",\"text\":\"\\\"write_txtblock_on_csv\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":31}],\"entityRanges\":[],\"data\":{}},{\"key\":\"596d6\",\"text\":\"This method ensures data is stored in the right place for later use by appnding a text block to a CSV file and creating directories if necessary. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e71t6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7iqkh\",\"text\":\"\\\"csv_path\\\": the path to the CSV file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1mpa2\",\"text\":\"\\\"block_txt\\\": the text block to be appended.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1gd53\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0d0b\",\"text\":\"This method ensures data is stored in the right place for later use by appending a text block to a CSV file and creating directories if necessary. The method follows a specific flow: uses \\\"os.makedirs\\\" to ensure the directory exists before writing the file and handles potential errors related to directory creation, raising exceptions if issues occur. By writing a block of text to the CSV file specified by \\\"csv_path\\\" and ensuring the necessary directories are created if they do not already exist, this method helps maintain persistent storage of the lookup dictionary.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4f3kd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9dkk4\",\"text\":\"\\\"convert_doi_to_ci\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":27}],\"entityRanges\":[],\"data\":{}},{\"key\":\"33q0d\",\"text\":\"Now comes the main task of this section of functions: converting data. This method takes a DOI and turns it into a different format, ready for use by converting a DOI string to an OCI string using the lookup  dictionary. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8vn4b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5tk9d\",\"text\":\"\\\"doi_str\\\": the string of the DOI that needs to be converted\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"92lr8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f3pnq\",\"text\":\"By calling the \\\"match_str_to_lookup\\\" converts a DOI, the \\\"doi_str\\\", to an OCI by translating each character in the DOI to its corresponding code using the lookup dictionary. It adds a prefix (CrossRef code) to the translated string, producing a standardized OCI. This conversion is crucial for uniquely identifying and processing DOIs in a consistent format.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"qer4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c8e2q\",\"text\":\"\\\"match_str_to_lookup\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":29}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bchou\",\"text\":\"This method checks a dictionary and assigns a code for each character, making sure everything is translated correctly.  It works by converting a substring of the DOI into its corresponding code sequence. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"am4km\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2b9c2\",\"text\":\"\\\"str_val\\\": a string value from which characters will be extracted and converted to corresponding codes using the lookup dictionary.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cfg85\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e84gk\",\"text\":\"The flow of the method is the following: it translates a substring of the DOI into its corresponding code sequence using the lookup dictionary. If a character is encountered for the first time, it updates the lookup dictionary to include the new character-to-code mapping. By systematically translating each character, it generates a code sequence that uniquely represents the DOI substring. This ensures that DOIs can be consistently mapped to OCI strings for citation identification and processing purposes.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ur6h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7dkv\",\"text\":\"\\\"CSVWriter\\\" class initialization\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":32}],\"entityRanges\":[],\"data\":{}},{\"key\":\"la4s\",\"text\":\"Before writing data into CSV files, there's a setup phase. This part of the code prepares the CSVWriter class. It's like getting the right tools ready before starting work. The class is designed to handle the output filenames. If there's only one filename provided, it stores it as a list. Otherwise, it keeps them as they are. This ensures that the class can handle both single and multiple output files efficiently. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"657ea\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clou3\",\"text\":\"\\\"output_filenames\\\": The filename(s) for the output CSV file(s).\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ed9r4\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ks4r\",\"text\":\"\\\"write_to_csv\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7bphs\",\"text\":\"Once everything is set up, it's time to write data into the CSV files. This method opens each output file and starts putting data into them. For each piece of data, it creates a row in the CSV file.  Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bgi85\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4mvlg\",\"text\":\"\\\"peer_review_items\\\": List of peer review items to be written to CSV.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"q2nr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4igj7\",\"text\":\"This process repeats until all data is written. Additionally, this method is responsible for creating a unique identifier for each peer review relationship using the Open Citation Identifier (OCI) format. It ensures that each relationship between citing and cited entities has a distinct identifier. This helps in organizing and referencing the peer review data accurately.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8gq80\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fpm84\",\"text\":\"\\\"remove_duplicates\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":27}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9maat\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ubf3\",\"text\":\"After writing data, there's the cleanup step. This method ensures that there are no duplicate entries in the CSV files. It reads the CSV file, removes any duplicate rows based on the OCI (Open Citation Identifier), and saves the cleaned-up data into a new file. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5mngt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cc8j9\",\"text\":\"\\\"input_filename\\\": the name of the input file\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ad0mi\",\"text\":\"\\\"output_filename\\\": the name of the output file\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"51np3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bi0ed\",\"text\":\"This method basically ensures that the final CSV files contain unique peer review items, avoiding any redundancy or repetition.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a1286\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3f5gi\",\"text\":\"Main function argument, parsing, and execution flow:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":52}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8sbg2\",\"text\":\"The main function is responsible for parsing command-line arguments, initializing necessary components, and coordinating the entire processing workflow. Here’s a breakdown of its flow:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bfaog\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1boi\",\"text\":\"Initializes CSVWriter and NonPeerExtractor instances.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3di2c\",\"text\":\"Processes JSON files and writes peer review items to CSV.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"63nav\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qet7\",\"text\":\"In essence, the main function acts as the captain steering the ship. It listens for commands, prepares the necessary tools (CSVWriter and PeerExtractor), and initiates the processing workflow. This involves processing JSON files, writing peer review data to CSV files, and removing duplicates from the final output. By orchestrating these tasks, the main function ensures a smooth and organized execution of the entire process. It was chosen during development to save two CSV files in the peer review items extraction phase, one which is not altered and one which is filtered from duplicates as described above. Ths choice was made because in this way the final user can safely decide which file to use for his/her purposes.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"vg7v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ur9k\",\"text\":\"The extractions of items related non peer review entries follow the exact same logic, of course, with some modification, mainly in the fact that the \\\"type\\\" key in the JSON files in which the interest falls on in this phase is not anymore \\\"peer-review\\\" but everything else. The second and last modification to the logic is that everything regarding the OCI creation and its related implementations is not in the \\\"NonPeerExtractor.py\\\" software because there was non need to calculate the OCI.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f3e2c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"60jh4\",\"text\":\"It is necessary to mention that the class \\\"OciProcess\\\" and all its relative methods were taken from the COCI workflow contained in this Github page.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":131,\"length\":11}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"D241B6FC75B042F094639D5A80787DEB\",\"url\":\"https://github.com/opencitations/coci/tree/master?tab=readme-ov-file\"}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046896,"number":"2.1","cases":[],"critical":null},{"id":2071820,"guid":"0E8C2EB519D911EFAE230A58A9FEAC02","previous_id":2071822,"previous_guid":"0E8DF96F19D911EFAE230A58A9FEAC02","section":"\u003cp\u003eData analysis\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"2cun8\",\"text\":\"The data analysis phase of our project focuses on extracting relevant insights from the processed data obtained from Crossref; furthermore, a comparison with the database of OpenCitations Meta is performed, cross-referencing DOIs (Digital Object Identifiers) from our combined dataset with the OpenCitations Meta dataset to quantify the overlap between peer reviews and articles.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046900,"number":"5","cases":[],"critical":null},{"id":2071821,"guid":"0E8CFC1E19D911EFAE230A58A9FEAC02","previous_id":2071813,"previous_guid":"0E8463A419D911EFAE230A58A9FEAC02","section":"\u003cp\u003ePost-processing\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"8qm0e\",\"text\":\"Compartimentizing data into separate CSV files\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":46}],\"entityRanges\":[],\"data\":{}},{\"key\":\"97dc0\",\"text\":\"The Compartimentizer class has been designed to process the CSV file obtained as output of the classes Filter and Delta; the Compartimentizer splits the CSV’s columns into three separate CSV files: one containing information about citations (storing oci, citing doi and url, cited doi and url, citing date, cited date and timespan), one about provenance (storing oci, agent, source, creation date), one about venues (storing venues and ISSN codes). This operation can be useful for organizing and distinguishing different parts of the data, especially if it is to be included in a larger dataset.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"al8ie\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ffj2e\",\"text\":\"Initialization (__init__ method):\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":33}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e5urj\",\"text\":\"The Compartimentizer class is initialized with parameters specifying which columns to drop and where to save the output CSV files.\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cu5j\",\"text\":\"The parameters are stored as attributes of the instance.\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7kqc5\",\"text\":\"2. Compartmentalizing Data (compartimentizer method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":50}],\"entityRanges\":[],\"data\":{}},{\"key\":\"986rq\",\"text\":\"Reading Input File: the input CSV file is read into a Polars DataFrame (df) using pl.read_csv(path).\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":20}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fbp3h\",\"text\":\"Cloning DataFrames: two additional DataFrames (df1 and df2) are created by cloning the original DataFrame to retain the complete data structure for separate processing.\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":20}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bptur\",\"text\":\"Dropping Columns: columns specified in columns_to_drop are dropped from df to create the first output DataFrame; columns specified in columns_to_drop1 are dropped from df1 to create the second output DataFrame; columns specified in columns_to_drop2 are dropped from df2 to create the third output DataFrame.\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"68g1d\",\"text\":\"Writing Output Files: the resulting DataFrames are written to their respective output paths using write_csv.\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046901,"number":"4.1","cases":[],"critical":null},{"id":2071822,"guid":"0E8DF96F19D911EFAE230A58A9FEAC02","previous_id":2071821,"previous_guid":"0E8CFC1E19D911EFAE230A58A9FEAC02","section":"\u003cp\u003ePost-processing\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"d3jja\",\"text\":\"Creating PeerReview entities and updating the RDF\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":49}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5fp0l\",\"text\":\"The PeerReview class and its supporting functions provide a framework for transforming CSV-based citation data into RDF format compliant with the OpenCitations Data Model. This process facilitates the creation of a new index of citations, enabling analysis of peer reviews and their relationships with scholarly publications.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aa512\",\"text\":\"Similarly to what has been specified for the OciProcessor class, also for shaping the PeerReview class and its supporting functions the code was readapted from the COCI workflow contained in this Github page.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":191,\"length\":11}],\"data\":{}},{\"key\":\"bp7v4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8t1d3\",\"text\":\"1. Initialization of PeerReview Object:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":36}],\"entityRanges\":[],\"data\":{}},{\"key\":\"63g4c\",\"text\":\"An instance of the PeerReview class is created for each row in the CSV file. The __init__ method extracts the relevant data from the row and initializes the object.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6nuj\",\"text\":\"2. RDF Graph Generation (get_peer_review_rdf):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":43}],\"entityRanges\":[],\"data\":{}},{\"key\":\"38ucm\",\"text\":\"The get_peer_review_rdf method creates an RDF graph for each PeerReview object.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"do89i\",\"text\":\"3. Data Inclusion:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":15}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ar9e\",\"text\":\"Adds triples for the citing and cited entities using the citing_url and cited_url.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cebcf\",\"text\":\"Adds triples for citation creation date and time span using the citing_date and time_span.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3v45r\",\"text\":\"4. Provenance Inclusion:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":21}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2tt4d\",\"text\":\"Adds triples for provenance information using prov_agent_url, source, and prov_date.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2gpr9\",\"text\":\"5. Data Population (populate_data):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":32}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4lnad\",\"text\":\"The populate_data function reads the input CSV and creates PeerReview objects for each row.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5e4l6\",\"text\":\"It generates RDF graphs for each object and writes the serialized graphs to the output file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eesng\",\"text\":\"6. Provenance Population (populate_prov):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":38}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1qoi0\",\"text\":\"The populate_prov function is similar to populate_data but focuses on provenance data.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5t5es\",\"text\":\"It reads the input CSV, creates PeerReview objects with provenance information, generates RDF graphs, and writes the serialized graphs to the output file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"979v8\",\"text\":\"7. Output:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":7}],\"entityRanges\":[],\"data\":{}},{\"key\":\"48rft\",\"text\":\"The output files are in N-Triples format, containing RDF triples that represent peer review data and provenance information. These files can be used for further analysis or integration into other RDF-based systems.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9k2g3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"D241B6FC75B042F094639D5A80787DEB\",\"url\":\"https://github.com/opencitations/coci/tree/master?tab=readme-ov-file\"}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":2046902,"number":"4.2","cases":[],"critical":null},{"id":2073148,"guid":"A4C81606C3744FFFAB60A3362589A3D3","previous_id":2071820,"previous_guid":"0E8C2EB519D911EFAE230A58A9FEAC02","section":"\u003cp\u003eData analysis\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"hpbi\",\"text\":\"Extracting the top publication venues\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":37}],\"entityRanges\":[],\"data\":{}},{\"key\":\"24m42\",\"text\":\"The VenueCounter class is designed to process the CSV file obtained as output of the Filter and Delta classes in order to retrieve information about citations and their associated venues, handling various cases of ISSN and venue information availability. The goal is to count and identify the top publication venues in terms of the number of peer reviews received, as asked in our third research question (RQ3).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":406,\"length\":3}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3tbhk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f3j8\",\"text\":\"1. Initialization (__init__ method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":33}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9l2id\",\"text\":\"The VenueCounter class is initialized with the path to the input CSV file. This path is stored in the csv_file_path attribute.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7c632\",\"text\":\"2. Counting Venues (count_venues method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":38}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9d98d\",\"text\":\"Loading CSV File: the CSV file is read into a pandas DataFrame using specified data types for the cited_issn and cited_venue columns; missing values in these columns are replaced with empty strings.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":19}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fnjkd\",\"text\":\"Processing Multiple ISSNs: rows containing multiple ISSN values (comma-separated) are identified and split into separate columns (issn1 and issn2); these rows are grouped by issn1, issn2, and cited_venue, and their occurrences are counted.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":27}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f1da\",\"text\":\"Processing Single ISSN: rows without commas in cited_issn are grouped by cited_issn and cited_venue; the cited_issn column is renamed to issn1, and an issn2 column with None values is added; these grouped rows are counted.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":24}],\"entityRanges\":[],\"data\":{}},{\"key\":\"18mpa\",\"text\":\"Processing Empty ISSN: rows with empty cited_issn are grouped by cited_venue; columns issn1 and issn2 are added with appropriate values (issn1 as empty string and issn2 as None); these grouped rows are counted.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":23}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bor2h\",\"text\":\"Combining Results: the grouped DataFrames from the three cases are concatenated into a single DataFrame; duplicate rows are dropped, ensuring unique combinations of ISSNs and venues.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":19}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f1gem\",\"text\":\"Returning Final DataFrame: the final grouped DataFrame is returned.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":27}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9on0v\",\"text\":\"3. Getting Top Venues (get_top_venues method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":43}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a6h4s\",\"text\":\"The count_venues method is called to get the grouped DataFrame.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9daur\",\"text\":\"The DataFrame is sorted by the count of occurrences in descending order.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cksnl\",\"text\":\"The top n venues (default is 10) are returned.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"damin\",\"text\":\"4. Saving Results to CSV (save_to_csv method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":43}],\"entityRanges\":[],\"data\":{}},{\"key\":\"av1gl\",\"text\":\"The count_venues method is called to get the grouped DataFrame.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6tdud\",\"text\":\"The DataFrame is saved to the specified output CSV file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3aqhg\",\"text\":\"A confirmation message is printed indicating the location of the saved file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5.1","cases":[],"critical":null},{"id":2073149,"guid":"44F0F95721794C379C577EC9B57DE45C","previous_id":2073148,"previous_guid":"A4C81606C3744FFFAB60A3362589A3D3","section":"\u003cp\u003eData analysis\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"9e3sl\",\"text\":\"Comparing Crossref data with OpenCitations Meta \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":48}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bfdtc\",\"text\":\"The MetaAnalysis class is designed to process an OpenCitations Meta dump (contained in a zip file) to extract DOIs and compare them against lists of peer reviews and articles reviewed we retrieved from the Crossref dump; the results are saved to a CSV file. The goal is to determine the number of peer reviews and articles in Crossref that are also included in OpenCitations Meta, as asked in our fourth and fifth research question (RQ4, RQ5).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":433,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4sau7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ec950\",\"text\":\"1. Initialization (__init__ method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":33}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7i869\",\"text\":\"The MetaAnalysis class is initialized with the path to the combined CSV file, which is stored in the combined_csv_path attribute.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bo0hk\",\"text\":\"2. Extracting DOIs from Meta File (extract_doi_from_meta method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":62}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dfkde\",\"text\":\"Opening Output File: the output file is opened for writing, and the header 'DOI' is written.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":21}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cnqjk\",\"text\":\"Processing Zip File: the zip file is opened, and CSV files within it are identified; for each CSV file, the content is read in chunks, and DOIs are extracted using the extract_doi_from_text method; the extracted DOIs are written to the output file, excluding empty values.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":21}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fro0a\",\"text\":\"3. Extracting DOI from Text (extract_doi_from_text method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":56}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4tmve\",\"text\":\"Finding DOI: the method checks if the text contains 'doi:'; if found, it extracts the substring starting after 'doi:' and ending at the next space or end of text; if the extracted DOI contains a comma, it is enclosed in quotes; the extracted DOI is returned, or an empty string if no DOI is found.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":13}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1clp4\",\"text\":\"4. Counting Rows (count_rows method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":34}],\"entityRanges\":[],\"data\":{}},{\"key\":\"67ea2\",\"text\":\"The method opens the specified file and counts the number of lines, subtracting one for the header to get the total row count.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f24ii\",\"text\":\"5. Creating Peer Review and Article Lists (create_peer_review_and_article_lists method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":85}],\"entityRanges\":[],\"data\":{}},{\"key\":\"27sn8\",\"text\":\"Reading Combined CSV: the combined CSV file is read into a DataFrame.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"36tl3\",\"text\":\"Creating DOI Sets: sets of DOIs for peer reviews (citing_doi) and articles (cited_doi) are created.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":19}],\"entityRanges\":[],\"data\":{}},{\"key\":\"75s30\",\"text\":\"Processing Meta File: the meta file is read in chunks, and DOIs matching the peer review and article sets are identified; the matching DOIs are written to separate output files (meta_peer.csv and meta_article.csv).\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6sg9g\",\"text\":\"6. Dropping Duplicates and Saving (drop_duplicates_and_save method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":65}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jpk2\",\"text\":\"The input file is read into a DataFrame, duplicate rows are dropped, and the cleaned data is saved to the output file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8s1dj\",\"text\":\"7. Getting Peer Review Count (get_peer_review_count method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":57}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bv1n\",\"text\":\"The method calls extract_doi_from_meta to extract DOIs from the meta file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"19snl\",\"text\":\"Calls create_peer_review_and_article_lists to create peer review lists.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eukdj\",\"text\":\"Calls drop_duplicates_and_save to clean the peer review list.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d0f1a\",\"text\":\"Calls count_rows to count unique peer review DOIs and returns the count.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"db1lo\",\"text\":\"8. Getting Article Count (get_article_count method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":49}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7p2ea\",\"text\":\"The method calls extract_doi_from_meta to extract DOIs from the meta file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4vll8\",\"text\":\"Calls create_peer_review_and_article_lists to create article lists.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eehsh\",\"text\":\"Calls drop_duplicates_and_save to clean the article list.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"94eih\",\"text\":\"Calls count_rows to count unique article DOIs and returns the count.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1f6bs\",\"text\":\"9. Saving Counts to CSV (save_counts_to_csv method):\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":3,\"length\":49}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fns41\",\"text\":\"The method creates a DataFrame with the counts of peer reviews and articles.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b2gg1\",\"text\":\"Writes the DataFrame to the specified output file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ghpr\",\"text\":\"Prints a confirmation message indicating the path to the saved file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5.2","cases":[],"critical":null},{"id":2073150,"guid":"6A46D55F4E7F410F94763ED07A609A08","previous_id":2071814,"previous_guid":"0E8515AB19D911EFAE230A58A9FEAC02","section":"\u003cp\u003eGathering Data\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"2o10l\",\"text\":\"The OpenCitations Meta dump, similar to Crossref, includes detailed metadata on scholarly works. The dataset is structured to facilitate the exploration of citation networks, including peer reviews. The data typically includes fields such as the citing DOI, cited DOI, publication dates, and reviewer information. Here is an example of how data is structured in OpenCitations Meta:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bvvc\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"17q1m\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"aihan\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"864da\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"tables\",\"mutability\":\"MUTABLE\",\"data\":{\"cellsMeta\":{\"0_0\":\"\",\"0_1\":\"\",\"0_10\":\"\",\"0_2\":\"\",\"0_3\":\"\",\"0_4\":\"\",\"0_5\":\"\",\"0_6\":\"\",\"0_7\":\"\",\"0_8\":\"\",\"0_9\":\"\"},\"colTitles\":[\"id\",\"title\",\"author\",\"issue\",\"volume\",\"venue\",\"page\",\"pub_date\",\"type\",\"publisher\",\"editor\"],\"colWidths\":[],\"data\":[[\"omid/06901663767 doi:10.3390/inorganics7030032 openalex\",\"Computational Characterization Of Single-Electron Transfer Steps In Water Oxidation\",\"De Aguirre, Adiran [omid/062402536 orcid:0000-0001-7991-6406]; Funes-Ardoiz, Ignacio [omid/067012689771 orcid:0000-0002-5843-9660]; Maseras, Feliu [omid/06904940828]\",\"3\",\"7\",\"Inorganics [omid/06901664255 issn:2304-6740 openalex]\",\"32-32\",\"2019-03-01\",\"journal article\",\"Mdpi Ag [omid/0610116165 crossref:1968]\",\"\"]],\"guid\":\"70E6BCA4F7694EEEACF3249522D8EFD7\",\"isJexcelDataFormat\":true,\"legend\":\"\",\"mergeCells\":[],\"printData\":[[\"omid/06901663767 doi:10.3390/inorganics7030032 openalex\",\"Computational Characterization Of Single-Electron Transfer Steps In Water Oxidation\",\"De Aguirre, Adiran [omid/062402536 orcid:0000-0001-7991-6406]; Funes-Ardoiz, Ignacio [omid/067012689771 orcid:0000-0002-5843-9660]; Maseras, Feliu [omid/06904940828]\",\"3\",\"7\",\"Inorganics [omid/06901664255 issn:2304-6740 openalex]\",\"32-32\",\"2019-03-01\",\"journal article\",\"Mdpi Ag [omid/0610116165 crossref:1968]\",\"\"]],\"rowHeights\":[]}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1.2","cases":[],"critical":null},{"id":2073152,"guid":"20ECF56702D34D7A8B783590DF58CABB","previous_id":2073149,"previous_guid":"44F0F95721794C379C577EC9B57DE45C","section":"\u003cp\u003eVisualizing results\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"11oqk\",\"text\":\"Data visualization has been realized using the Python library Matplotlib (https://matplotlib.org/); the following graphs have been created as a result of the analysis performed:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":74,\"length\":23}],\"data\":{}},{\"key\":\"3klg7\",\"text\":\"a vertical bar chart showing the number of typed citations (i.e. a peer review reviews a publication) created, the number of peer reviews and the number of reviewed bibliographic resources retrieved from the Crossref dump;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9oblc\",\"text\":\"a horizontal bar chart showing the top ten venues ordered by the number of reviews received by the resources the venues contain;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"15qi4\",\"text\":\"two donut charts displaying how many citing and cited DOIs retrieved from Crossref are also contained in the OpenCitations Meta dataset;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9qa2s\",\"text\":\"a line chart showing the number of bibliographic resources that received a certain number of peer-reviews in Crossref;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5gkt4\",\"text\":\"a horizontal bar chart reporting the top ten cited DOIs in Crossref;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9vc0e\",\"text\":\"a donut chart showing the percentages of positive and negative timespan between the publication of a bibliographic resource and the related peer review;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ke8l\",\"text\":\"two horizontal bar charts showing the top ten venues by number of citations with a negative timespan and the number of citations received by venues without a reported ISSN;\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3m3l1\",\"text\":\"a vertical bar chart displaying the number of cited resources in Crossref, the number of cited resources that are also contained in Meta and the number of cited resources, present both in Crossref and Meta, whose citing resource is also present in Meta.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"chrof\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"14n9p\",\"text\":\"These graphs can be found, with their related descriptions and data anlaysis report, in the article reporting the results of this research (available in the Materials section of this protocol).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f2p8r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"MUTABLE\",\"data\":{\"guid\":\"243E43621AA211EFA15F0A58A9FEAC02\",\"url\":\"https://matplotlib.org\"}}}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":2073296,"guid":"0E888DC119D911EFAE230A58A9FEAC02","previous_id":2073297,"previous_guid":"6B7B6E9EEAE047BB8F2DCA95DC9E4BA9","section":"\u003cp\u003e\u003cstrong\u003eData processing\u003c/strong\u003e\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"353bc\",\"text\":\"Initial setup and argument parsing:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":35}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1vpge\",\"text\":\"The script starts by parsing the command-line arguments using the argparse module. It expects three required arguments. This setup phase ensures that the script receives the necessary input to perform its tasks. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"emtdr\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a0uje\",\"text\":\"\\\"peer_review_dir\\\": Directory containing peer-reviewed CSV files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ch6c\",\"text\":\"\\\"non_peer_review_dir\\\": Directory containing non-peer-reviewed CSV files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ecmbs\",\"text\":\"\\\"output_path\\\": Path for the output CSV file.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"53lsl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ad2ek\",\"text\":\"Class initialization: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9o9q2\",\"text\":\"The \\\"Filter\\\" class is then initialized with the provided directories for peer-reviewed and non-peer-reviewed data, the output path, and the column to join on (\\\"cited_doi\\\"). \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64iqs\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"113nn\",\"text\":\"Reading and Concatenating DataFrames: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":38}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvfba\",\"text\":\"The \\\"read_and_concatenate_dataframes\\\" method reads CSV files from the specified directory and then for each file, it uses \\\"polars.scan_csv\\\" to read the file and normalizes the \\\"cited_doi\\\" column by stripping newline and period characters and converting to lowercase. DataFrames are concatenated using \\\"polars.concat\\\". Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2h3hh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"264fj\",\"text\":\"\\\"directory\\\": the directory from which it needs to read the files.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4piq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3eupu\",\"text\":\"During the developmente of this method the \\\"polars.scan_csv\\\" function was used, mostly due to the fact that it lazily read CSV files, meaning that It does not load the entire file into memory, which is efficient for large datasets. Here's a deeper explanation:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"blaq4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"qdj6\",\"text\":\"It scans the file and allows for subsequent operations to be performed as a pipeline creating a LazyFrame Object that represents a deferred execution plan rather than an actual dataset in memory. It's designed to optimize memory usage by delaying computation until absolutely required..\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aapem\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"lknm\",\"text\":\"After that the normalization process ensures that DOI values are consistent by removing unwanted characters (from the start and the end of the string) and converting them to lowercase, which is important for accurate joins.  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a96qe\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1md1v\",\"text\":\"Validating DataFrames:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7q27c\",\"text\":\"Before proceeding further, the script validates the DataFrames to ensure that the column to join on (\\\"cited_doi\\\") exists in both DataFrames. This validation step prevents runtime errors during the join operation. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"10i72\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d2sg8\",\"text\":\"\\\"df1\\\": the first of the two DataFrames that the method is comparing\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eb54r\",\"text\":\"\\\"df2\\\": the second of the two DataFrames that the method is comparing\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"akot4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9i7t\",\"text\":\"Joining DataFrame:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"brrvl\",\"text\":\"Then, the join_dataframes method of the Filter class performs an inner join on the two DataFrames using the \\\"cited_doi\\\" column. This join operation combines the peer-reviewed and non-peer-reviewed data based on matching DOI values, creating a unified dataset that will be later used for further analysis. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5tsta\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8u28b\",\"text\":\"\\\"df1\\\": the first of the two DataFrames that the method is comparing\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eo6gk\",\"text\":\"\\\"df2\\\": the second of the two DataFrames that the method is comparing\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"es7pr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7a39j\",\"text\":\"Adding provenance information:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":30}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bvnaq\",\"text\":\"The \\\"add_provenance method\\\" add to the joined DataFrame with provenance information. It adds three new columns: \\\"prov_agent\\\" (URL indicating the provenance agent), \\\"source\\\" (URL of the data source), and \\\"prov_date\\\" (current timestamp in UTC). Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"11sod\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9bc5\",\"text\":\"\\\"df\\\" the Dataframe on which to add the specified columns\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4oeld\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dc8q5\",\"text\":\"These additional information are useful to track the origin and processing history of the data, ensuring transparency and reproducibility. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ftjvs\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ckdpo\",\"text\":\"Calculating time delta:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":23}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ckt0\",\"text\":\"The \\\"Delta\\\" class is then initialized with its provided DataFrame. It comprehends different static methods which don't depend on specific object instances. They do not access or modify instance-specific attributes, but rather operate solely on the parameters passed to them. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"81kag\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"s5ps\",\"text\":\"\\\"df\\\": the DataFrame on which the class will perform its calculations (the joined DataFrame)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8l378\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"912c2\",\"text\":\"Here, instead a list of the static methods:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"19n9e\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"g1c6\",\"text\":\"\\\"contain_years\\\": This method checks if the length of the date string (\\\"date_str\\\") is at least 4 characters long. In most date formats, the year is represented by 4 digits, so if the length of the string is 4 or greater, it likely contains information about the year.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"at90v\",\"text\":\"\\\"contain_months\\\": this method checks if the length of the date string is at least 7 characters long. In typical date formats, if the length is 7 or greater, it indicates that the string likely includes information about both the year and the month.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9fltr\",\"text\":\"\\\"contain_days\\\": This method checks if the length of the date string is at least 10 characters long. In common date representations, such as \\\"YYYY-MM-DD\\\", the length of the string is 10 characters if it includes information about the year, month, and day.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2hfpp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eifkk\",\"text\":\"These methods are responsible for the validation of date strings by determining the level of detail they contain. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"91vq2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1fmkt\",\"text\":\"The \\\"calculate_date_difference\\\" method: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":40}],\"entityRanges\":[],\"data\":{}},{\"key\":\"elpq0\",\"text\":\"Checks if dates are valid, basically if they have years, months and days specified. Then parses the dates and calculates the difference using \\\"dateutil.relativedelta\\\". Then finally it formats the difference as an ISO 8601 duration string. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dffk7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3n73d\",\"text\":\"\\\"citing_date\\\": the date of the citing entity (the peer review)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fq9ks\",\"text\":\"\\\"cited_date\\\": the date of the cited entity (the article reviewed)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a1teo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dmjqg\",\"text\":\"More in details: \\\"dateutil.relativedelta\\\" is responsible for providing a way to compute the difference between two dates considering years, months, and days, which is more precise than simple subtraction. ISO 8601 duration is instead responsible for managing the standard format for date and time durations, it basically ensures that the output is universally understandable and machine-readable.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l5mq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2reul\",\"text\":\"The \\\"add_delta_column\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":30}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e949s\",\"text\":\"This method contained in the \\\"Delta\\\" class adds a new column to the DataFrame that represents the time difference between \\\"citing_date\\\" and \\\"cited_date\\\" in each row. Thismethod takes no argument because it is called directly on the joined DataFrame. The process involves the use of \\\"pl.struct\\\"  and pl.map_elements\\\" functions provided by the Polars library. Here’s a deeper explanation of these functions:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4tqeu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"58vve\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3j8be\",\"text\":\"\\\"pl.struct\\\": This function is used to combine multiple columns into a single struct column. In this case, it takes the \\\"citing_date\\\" and \\\"cited_date\\\" columns and creates a struct that groups these two columns  together for each row. By combining these two date columns into a struct, it allows subsequent operations to treat them as a single entity. This is particularly useful for applying functions that require multiple inputs, such as calculating the time difference between two dates.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77m7e\",\"text\":\"\\\"pl.map_elements\\\": This function is applied to the struct column created in the previous step. It maps a given function to each element (each struct) of the column. In this context, it applies the  \\\"calculate_date_difference\\\" function to each struct containing \\\"citing_date\\\" and \\\"cited_date\\\". The \\\"map_elements\\\" function allows for element-wise operations on struct columns. It takes each struct (which contains a pair of dates) and processes it with the provided function to compute the desired output. \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"984d5\",\"text\":\"Lambda function: The lambda function contained in this method, \\\"lambda x:self.calculate_date_difference(x[\\\"citing_date\\\"], x[\\\"cited_date\\\"])\\\" is used to pass the dates from each struct to the \\\"calculate_date_difference\\\" method.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"brtq4\",\"text\":\"The \\\"return_dtype=pl.Utf8\\\" specifies that the result of the function (the time span) will be of string type.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c67l4\",\"text\":\"Creating the \\\"time_span\\\" Column:  The .alias(\\\"time_span\\\") part renames the resulting column to time_span, which holds the computed time differences.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3rj01\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3tl7q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"531mf\",\"text\":\"The \\\"save_csv\\\" method:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":22}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l6s0\",\"text\":\"This method is responsible for saving the final DataFrame (with provenance and delta columns) to the specified output path. Here a detailed list of the arguments it takes:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e13bn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eis3b\",\"text\":\"\\\"output_csv\\\": the desired name for the output CSV \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"csf51\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ct80\",\"text\":\"This method uses \\\"polars.sink_csv\\\" function which is determined by the choice of using \\\"plars.scan_csv\\\" function before. Basically using the scan function a LazyFrame Object is created which is more efficient in terms of memory than a DataFrame object, particularly for large datasets, as it postpones the execution of operations until necessary. However, due to its lazy evaluation nature, direct usage of \\\"write_csv\\\" function becomes inaccessible.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"abqck\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"r1rp\",\"text\":\"\\\"sink_csv\\\": This method is used to write the DataFrame to a CSV file efficiently. it efficiently serializes and writes tabular data from a DataFrame or LazyFrame Object to a CSV file on disk. It is part of the Polars library, which is optimized for performance and can handle large datasets effectively. \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ee63\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bqgvj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"as0dg\",\"text\":\"Main execution flow:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":20}],\"entityRanges\":[],\"data\":{}},{\"key\":\"20pn6\",\"text\":\"Finally, the main function orchestrates the entire process, executing each step in sequence. It reads, concatenates, validates, and joins the DataFrames, adds provenance information, calculates the time delta, and saves the final CSV file with the delta column. This structured execution flow ensures that each task is performed accurately and efficiently, resulting in a comprehensive analysis of the input data. Here the flow of the calling done by the \\\"main\\\" function:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4k6rc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"73hor\",\"text\":\"Parses arguments and initializes the Filter class.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dpqi5\",\"text\":\"Reads, concatenates, and validates DataFrames.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3n2sb\",\"text\":\"Joins DataFrames and adds provenance information.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3t5lt\",\"text\":\"Initializes Delta class and calculates the time_span column.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8nrp7\",\"text\":\"Saves the resulting DataFrame to the output path. \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3.1","cases":[],"critical":null},{"id":2073297,"guid":"6B7B6E9EEAE047BB8F2DCA95DC9E4BA9","previous_id":2071816,"previous_guid":"0E87CFCE19D911EFAE230A58A9FEAC02","section":"\u003cp\u003e\u003cstrong\u003eData processing\u003c/strong\u003e\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8g30b\",\"text\":\"Filtering, joining and calculation of delta for the CSVs\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":56}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":100557,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null}],"template_id":0,"title":"Protocol PROCI","title_html":"Protocol PROCI","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"µg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"°К","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"μV","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (µM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"µm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":207,"type_id":3,"name":"V","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"protocol-proci-defm3bk6","url":"https://www.protocols.io/view/protocol-proci-defm3bk6","version_class":97906,"version_data":{"id":2,"code":"defm3bk6","version_class":97906,"parent_id":99468,"parent_uri":"protocol-ocprip-dddk224w","is_same_owner":true,"is_parent_public":true,"has_pending_merge_request":false,"has_approved_merge_request":true,"merge_request":{"id":2737,"creator":{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""}},"created_on":1716674664,"can_manage":true}},"version_id":2,"version_uri":"protocol-proci-261ge56qwg47/v3","versions":[{"id":97906,"title":"Protocol OCPRIP","title_html":"Protocol OCPRIP","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.261ge56qwg47/v1","uri":"protocol-ocprip-dbus2nwe","published_on":1712968348,"modified_on":1712968348,"version_class":97906,"version_id":0,"version_code":"dbus2nwe","version_uri":"protocol-ocprip-261ge56qwg47/v1","created_on":1712565340,"categories":null,"type_id":1,"creator":{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}},{"id":99468,"title":"Protocol OCPRIP","title_html":"Protocol OCPRIP","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.261ge56qwg47/v2","uri":"protocol-ocprip-dddk224w","published_on":1715267130,"modified_on":1715267130,"version_class":97906,"version_id":1,"version_code":"dddk224w","version_uri":"protocol-ocprip-261ge56qwg47/v2","created_on":1712565340,"categories":null,"type_id":1,"creator":{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}},{"id":100557,"title":"Protocol PROCI","title_html":"Protocol PROCI","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.261ge56qwg47/v3","uri":"protocol-proci-defm3bk6","published_on":1716880482,"modified_on":1716880482,"version_class":97906,"version_id":2,"version_code":"defm3bk6","version_uri":"protocol-proci-261ge56qwg47/v3","created_on":1712565340,"categories":null,"type_id":1,"creator":{"name":"Nicole Liggeri","affiliation":"University of Bologna","affiliation_url":null,"username":"nicole-liggeri","link":null,"image":{"source":"/img/avatars/004.png","placeholder":"/img/avatars/004.png","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}