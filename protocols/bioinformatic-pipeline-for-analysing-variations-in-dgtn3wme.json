{"access":{"can_view":true,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":false,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"authors":[{"name":"Angelo Sante Varvara","affiliation":"Department of Biosciences, Biotechnology and Environment, University of Bari Aldo Moro, Bari, Italy","affiliation_url":"","username":"angelo-sante-varvara","link":"","user_image_file":{"guid":"ACE5D1B15B2D11EFA2EF0A58A9FEAC02","file_name":"q55hcfsnp.jpg","url":"https://files.protocols.io/external/q55hcfsnp-ACE5D1B15B2D11EFA2EF0A58A9FEAC02.jpg","mime":"image/jpeg","size":70186,"width":0,"height":0,"avg_color":"","scan_status":0,"created_at":1723743720},"note":"","is_verified_user":true},{"name":"Ilenia Urso","affiliation":"Institute of Biomembranes, Bioenergetics and Molecular Biotechnologies, Consiglio Nazionale delle Ricerche, Bari, Italy","affiliation_url":null,"username":"n4xle132q1y4qle1","link":null,"user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0},"note":"","is_verified_user":true},{"name":"Sharon Natasha Cox","affiliation":"Department of Biosciences, Biotechnology and Environment, University of Bari Aldo Moro, Bari, Italy","affiliation_url":null,"username":"sharon-natasha-cox1","link":null,"user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0},"note":"","is_verified_user":true},{"name":"Graziano Pesole","affiliation":"Department of Biosciences, Biotechnology and Environment, University of Bari Aldo Moro, Bari, Italy ; Institute of Biomembranes, Bioenergetics and Molecular Biotechnologies, Consiglio Nazionale delle Ricerche, Bari, Italy","affiliation_url":null,"username":"graziano-pesole","link":null,"user_image_file":{"guid":"00000000000000000000000000000001","file_name":"avatar.png","url":"https://www.protocols.io/img/avatars/001.png","mime":"image/png","size":0,"width":100,"height":100,"avg_color":"","scan_status":0,"created_at":0},"note":"","is_verified_user":true}],"before_start":"{\"blocks\":[{\"key\":\"da76p\",\"text\":\"#Versions of tools used in this pipeline:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eoh3i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4fvlu\",\"text\":\"- Dorado 0.7.2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6i4ae\",\"text\":\"- samtools 1.19.2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"679rp\",\"text\":\"- NanoStat 1.6.0\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3i9g2\",\"text\":\"- pycoQC 2.5.2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6tc2b\",\"text\":\"- Clair3 1.0.9\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"894s4\",\"text\":\"- Clair3-Nova 0.3.0\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f0he3\",\"text\":\"- bcftools 1.19\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ag2sn\",\"text\":\"- sniffles2 2.2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9f3f4\",\"text\":\"- sniffles2_plots 0.2.0\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"k9ev\",\"text\":\"- SvAnna 1.0.4\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fnba9\",\"text\":\"- whatshap 2.1\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5dn5l\",\"text\":\"- modkit 0.2.2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5ot6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8nl68\",\"text\":\"Please kindly note that whilst running Dorado without a GPU is technically possible, it is strongly inadvisable as basecalling will be much slower when running purely on CPU.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c4qa8\",\"text\":\"Dorado is heavily optimized for Nvidia A100 (ampere) and H100 (hopper) GPUs and will deliver maximum performance on nodes containing these GPUs.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_manage_keywords":true,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1720446012,"creator":{"name":"Angelo Sante Varvara","affiliation":"University of Bari","affiliation_url":"","username":"angelo-sante-varvara","link":"","user_image_file":{"guid":"ACE5D1B15B2D11EFA2EF0A58A9FEAC02","file_name":"q55hcfsnp.jpg","url":"https://files.protocols.io/external/q55hcfsnp-ACE5D1B15B2D11EFA2EF0A58A9FEAC02.jpg","mime":"image/jpeg","size":70186,"width":0,"height":0,"avg_color":"","scan_status":0,"created_at":1723743720},"badges":[{"id":2,"name":"Author","image":{"source":"/img/badges/bronze.svg","placeholder":"/img/badges/bronze.svg"}},{"id":6,"name":"Science accelerator","image":{"source":"/img/badges/accelerator.svg","placeholder":"/img/badges/accelerator.svg"}}],"affiliations":[{"affiliation":"University of Bari","url":"","job_title":"PhD student in Computational Biology","is_default":true}]},"cross_cloud_origin":null,"description":"{\"blocks\":[{\"key\":\"dddgn\",\"text\":\"Recent advances in sequencing technologies have paved the way for personalized medicine and clinical genomics, providing unprecedented insights into the genetic basis of human health and disease. High-throughput sequencing is now recognized as an effective diagnostic tool for patients affected by rare diseases but the use of either Whole Exome Sequencing (WES) or Whole Genome Sequencing (WGS) technologies has shown to be uninformative in many cases. On the contrary, the recent introduction of long-read technologies can resolve genomic regions inaccessible to short-read sequencing, but a reliable benchmark assessment is missing.Â \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ep0e\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3q47d\",\"text\":\"Following a long and intense benchmarking activity, here we present our bioinformatic pipeline based on Oxford Nanopore Technology (ONT) long reads aimed at shading lights to the stages of alignment, SNVs, indels, and SV calling, and modified bases analysis.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"","document":"","documents":[{"id":487590,"guid":"","type_id":0,"filename":"","key":"","color":"","height":0,"width":0,"is_document":null,"original_file_id":null,"thumb_url":"https://www.protocols.io/img/extensions/jpg.png","size":345300,"is_private":0,"is_new":0,"ofn":"protocol.jpg","url":"https://content.protocols.io/files/q6fgcfsnp.jpg","bucket_name":null,"s3_webp_url":"","file_id":487590}],"doi":"dx.doi.org/10.17504/protocols.io.36wgqnoz3gk5/v1","doi_status":2,"ethics_statement":"","fork_id":null,"fork_info":null,"fork_info_status":"not_fork","forks":[],"funders":[],"groups":[{"id":127374,"uri":"human_ont","title":"Human_ONT","is_public":false,"image":{"source":"https://content.protocols.io/files/688D72623D1411EF9EF60A58A9FEAC02-placeholder.png","placeholder":"https://content.protocols.io/files/688D72623D1411EF9EF60A58A9FEAC02-placeholder.png"},"tech_support":{"email":null,"phone":null,"use_email":false,"hide_contact":false,"url":null}}],"guid":"ED0E1C6C521B4CCD9BCEBF58142EDE4D","guidelines":"","has_references":false,"has_step_reagents":false,"has_versions":true,"id":102990,"image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"image_attribution":"","in_trash":false,"is_bookmarked":true,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_doi_reserved":true,"is_in_pending_publishing":false,"is_in_transfer":false,"is_owner":true,"is_research":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":1270474,"journal":null,"journals":[],"keywords":"Bioinformatics,ONT,Nanopore,variants,human,variations,reads,indels,SNV,SV,alignment,phasing,dorado,clair3,whatshap,modkit,modified bases,variant calling,IGV","last_modified":1727715085,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"protocol_references":"","public":true,"public_fork_note":"","published_on":1727715085,"references":[],"related_equipments":[],"related_materials":[],"reserved_doi":"10.17504/protocols.io.36wgqnoz3gk5/v1","retraction_reason":null,"samples":{},"shared_access_id":287,"show_comparison":false,"sign_info":null,"space_access":{"can_view":false,"can_edit":false,"can_remove":false,"can_add":false,"can_publish":false,"can_get_doi":true,"can_share":false,"can_move":false,"can_move_outside":false,"can_transfer":false,"can_download":false,"limited_run":false,"limited_private_links":false,"limited_blind_links":false,"is_locked":false},"space_id":126954,"state_version_id":3693,"stats":{"is_voted":false,"number_of_views":54,"number_of_steps":14,"number_of_bookmarks":1,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it's working"},"steps":[{"id":2129740,"guid":"DD05CE2294BD48449CE60719AB518857","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eBasecalling and alignment\u003c/p\u003e","section_color":"#A492FF","section_duration":39600,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"dnk8g\",\"text\":\"Basecalling raw data in pod5 format with Dorado basecalling.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":60},{\"style\":\"italic\",\"offset\":42,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a93qv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e2chq\",\"text\":\"Dorado is a high-performance open-source basecaller for Oxford Nanopore reads.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8jmq0\",\"text\":\"First, let's download the latest models for our needs with Dorado download.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":59,\"length\":15}],\"entityRanges\":[],\"data\":{}},{\"key\":\"frq68\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"eo94s\",\"text\":\"Then, we can run Dorado basecaller on our raw data in pod5. \",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":18,\"length\":16}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b6psm\",\"text\":\"If your raw data are in fast5 format, it is recommended to convert them in pod5 with pod5 convert fast5 tool to reach optimal performances.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":85,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1mch3\",\"text\":\"For our test, we are going to use human Genome assemblyÂ GRCh38 as a reference, calling both 5mC and 5hmC modified bases, using the most updated and accurate models.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dho88\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"u52i\",\"text\":\"Following the basecalling step, create a sequencing summary with Dorado summary, it outputs a tab-separated file with read-level sequencing information from the BAM file generated during basecalling.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":66,\"length\":18}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a1q5s\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"5kvh1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Downloading Dorado models\",\"description\":\"\",\"guid\":\"5D64B1E9481211EFB8520A58A9FEAC02\",\"name\":\"dorado download --model dna_r10.4.1_e8.2_400bps_sup@v5.0.0\\n\\ndorado download --model dna_r10.4.1_e8.2_400bps_sup@v5.0.0_5mCG_5hmCG@v1\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Basecalling with Dorado\",\"description\":\"\",\"guid\":\"92A1373B481211EF89400A58A9FEAC02\",\"name\":\"dorado basecaller dna_r10.4.1_e8.2_400bps_sup@v5.0.0 /sample/pod5/ --min-qscore 10 --recursive --modified-bases-models dna_r10.4.1_e8.2_400bps_sup@v5.0.0_5mCG_5hmCG@v1 \\n--reference hg38.fa \\u003e calls.bam\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running Dorado summary\",\"description\":\"\",\"guid\":\"E7CA6186481411EFB8520A58A9FEAC02\",\"name\":\"dorado summary calls.bam \\u003e sequencing_summary_dorado.txt\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":32400,"original_id":0,"number":"1","cases":[],"critical":null},{"id":2129787,"guid":"29F73E9945944D04BD3CADE3461A511D","previous_id":2129740,"previous_guid":"DD05CE2294BD48449CE60719AB518857","section":"\u003cp\u003eBasecalling and alignment\u003c/p\u003e","section_color":"#A492FF","section_duration":39600,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"es6l\",\"text\":\"Sort and index the resulting alignment with samtools.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":53},{\"style\":\"italic\",\"offset\":44,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"do5pc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e2kv2\",\"text\":\"It's time to sort the alignment in bam format with samtools sort.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":51,\"length\":13}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c6k0t\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"fe0qa\",\"text\":\"Indexing the sorted bam is mandatory for further steps.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ct9h\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"4plk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Sorting alignment\",\"description\":\"\",\"guid\":\"5D18EA9D481311EFB8520A58A9FEAC02\",\"name\":\"samtools sort -@ 16 calls.bam -o calls_sorted.bam\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Indexing alignment\",\"description\":\"\",\"guid\":\"A31ED467481311EFB8520A58A9FEAC02\",\"name\":\"samtools index -@ 16 calls_sorted.bam\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":7200,"original_id":0,"number":"2","cases":[],"critical":null},{"id":2132068,"guid":"2408EFB600D442DF824D352B9798FD1E","previous_id":2129787,"previous_guid":"29F73E9945944D04BD3CADE3461A511D","section":"\u003cp\u003eAlignment statistics\u003c/p\u003e","section_color":"#94EBFF","section_duration":3600,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"evnr8\",\"text\":\"Create alignment statistics with NanoStat, samtools, and pycoQC.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":64},{\"style\":\"italic\",\"offset\":33,\"length\":19},{\"style\":\"italic\",\"offset\":57,\"length\":6}],\"entityRanges\":[],\"data\":{}},{\"key\":\"19tl1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"floh6\",\"text\":\"NanoStat highlights alignment information as, for instance, N50 or read length and read quality.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2hltj\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"7qaj8\",\"text\":\"Samtools utilities give us insights on coverage and mapping values.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5m8f8\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bsf4r\",\"text\":\"PycoQC produces an html format file with tons of charts regarding basecalling progress and outcomes.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"43pco\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"d8iim\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running NanoStat\",\"description\":\"\",\"guid\":\"18F01FA9481411EF89400A58A9FEAC02\",\"name\":\"NanoStat --summary sequencing_summary_dorado.txt -t 12 \\u003e Nanostats.txt\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running samtools stats and samtools coverage\",\"description\":\"\",\"guid\":\"79129F44481411EF89400A58A9FEAC02\",\"name\":\"samtools stats -@ 16 calls_sorted.bam \\u003e samtools_stats.txt\\n\\nsamtools coverage calls_sorted.bam \\u003e samtools_coverage.txt\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running pycoQC\",\"description\":\"\",\"guid\":\"21B677F1481511EFB8520A58A9FEAC02\",\"name\":\"pycoQC -f sequencing_summary_dorado.txt -o report_dorado.html\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":3600,"original_id":0,"number":"3","cases":[],"critical":null},{"id":2132075,"guid":"E0FF4F35CCD34C94BE6287E974EBCC7E","previous_id":2132068,"previous_guid":"2408EFB600D442DF824D352B9798FD1E","section":"\u003cp\u003eVariant calling\u003c/p\u003e","section_color":"#84CE84","section_duration":9300,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1ko4u\",\"text\":\"SNV and indels calling with Clair3.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":35},{\"style\":\"italic\",\"offset\":29,\"length\":5}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a5hci\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"75eh0\",\"text\":\"Variant calling is performed with Clair3 and we strongly advise these parameters, with the same model path used for the basecalling stage.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":35,\"length\":5}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jbps\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"dnl2a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running clair3\",\"description\":\"\",\"guid\":\"E52E2651481511EFB8520A58A9FEAC02\",\"name\":\"run_clair3.sh --bam_fn=\\\"calls_sorted.bam\\\" --ref_fn=\\\"hg38.fa\\\" --threads=16 --platform=\\\"ont\\\" --include_all_ctgs --model_path=\\\"dna_r10.4.1_e8.2_400bps_sup@v5.0.0\\\" --output=\\\"clair3\\\"\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":7200,"original_id":0,"number":"4","cases":[],"critical":null},{"id":2134935,"guid":"404E98C1D7E34339B70C1F515D315D68","previous_id":2132075,"previous_guid":"E0FF4F35CCD34C94BE6287E974EBCC7E","section":"\u003cp\u003eVariant calling\u003c/p\u003e","section_color":"#84CE84","section_duration":9300,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"5dp3q\",\"text\":\"Polishing calls with bcftools.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":30},{\"style\":\"italic\",\"offset\":21,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"faa3o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fr7jt\",\"text\":\"This step depends on your alignment statistics. We usually advise removing all \\\"lowQual\\\" calls as well as variants with depth below 5 (or 10 if your coverage is above 30x).\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fi1nr\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"c8d0n\",\"text\":\"Furthermore, bcftools norm command will split all multi-allelic variants into multiple rows and furtherly check calls with the reference throwing out redundancies or errors, producing a vcf file with improved accuracy.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":13,\"length\":13}],\"entityRanges\":[],\"data\":{}},{\"key\":\"50nml\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"4hnrp\",\"text\":\"Lastly, it can probably be helpful to add further info to the final vcf file, especially in pathogenic studies. Annovar and SnpEff are both powerful tools that can fill variant calls with annotations, as those from ClinVar, Gnomad and dbSNP.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Filtering vcf\",\"description\":\"\",\"guid\":\"123416C8481611EF89400A58A9FEAC02\",\"name\":\"bcftools view merge_output.vcf.gz -i 'FILTER=\\\"PASS\\\" \\u0026 FMT/DP\\u003e5â --threads 8 --output filtered_1.vcf.gz\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running bcftools norm\",\"description\":\"\",\"guid\":\"35FA5A6A481611EF89400A58A9FEAC02\",\"name\":\"bcftools norm -m-any --check-ref -w -f hg38.fa filtered_1.vcf.gz -o filtered_2.vcf.gz\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":600,"original_id":0,"number":"5","cases":[],"critical":null},{"id":2147841,"guid":"DE5B773E58434EBFAAD54F404CE5289D","previous_id":2134935,"previous_guid":"404E98C1D7E34339B70C1F515D315D68","section":"\u003cp\u003eVariant calling\u003c/p\u003e","section_color":"#84CE84","section_duration":9300,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"7r9ca\",\"text\":\"SV calling with sniffles2.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":26},{\"style\":\"italic\",\"offset\":16,\"length\":10}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c90lj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dgqvb\",\"text\":\"We strongly advise using the bed files found in sniffles GitHub repository to achieve better performances while calling structural variants in repetitive regions.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":48,\"length\":8}],\"entityRanges\":[],\"data\":{}},{\"key\":\"auqru\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9ap2j\",\"text\":\"Calls can be subsequently filtered and polished depending on our needs with bcftools.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":76,\"length\":8}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running sniffles2\",\"description\":\"\",\"guid\":\"706C0878481611EF89400A58A9FEAC02\",\"name\":\"sniffles --input calls_sorted.bam --vcf sniffles.vcf --snf sniffles.snf --reference hg38.fa --minsvlen 50 --output-rnames --threads 16 --tandem-repeats human_GRCh38_no_alt_analysis_set.trf.bed\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":600,"original_id":0,"number":"6","cases":[],"critical":null},{"id":2147937,"guid":"2C6F153FA560459C92B3A541AC330A92","previous_id":2154969,"previous_guid":"8A8A98E0C4FD4100A4DDA37C3A7FE2F3","section":"\u003cp\u003ePhasing\u003c/p\u003e","section_color":"#FFED92","section_duration":12900,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"ct16c\",\"text\":\"Phasing heterozygous variants with whatshap phase.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":50},{\"style\":\"italic\",\"offset\":35,\"length\":15}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9nfnp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bi90u\",\"text\":\"This tool allows phasing variants (called via clair3), annotating the info directly in our vcf file.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c8uir\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"f8mv9\",\"text\":\"Please note that also structural variants can be phased with whatshap phase in the same way.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":61,\"length\":8}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running whatshap phase\",\"description\":\"\",\"guid\":\"396DCFA1481711EFB8350A58A9FEAC02\",\"name\":\"whatshap phase -o phased.vcf.gz --reference hg38.fa --ignore-read-groups merge_output.vcf.gz calls_sorted.bam\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":1800,"original_id":0,"number":"8","cases":[],"critical":null},{"id":2147938,"guid":"3094FB576FED483D8FF4D7FB21D74DD3","previous_id":2147937,"previous_guid":"2C6F153FA560459C92B3A541AC330A92","section":"\u003cp\u003ePhasing\u003c/p\u003e","section_color":"#FFED92","section_duration":12900,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"djgkt\",\"text\":\"Phasing assessment with whatshap stats.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":39},{\"style\":\"italic\",\"offset\":24,\"length\":15}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7mk59\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbva9\",\"text\":\"Assessing the amount of phased heterozygous variants is crucial, and we can achieve this with whatshap stats. It will output various statistics which can vary a bit depending on the alignment quality (coverage, N50, etc), but we can safely conclude that a percentage above 90% is expected in 30X covered genomes.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":94,\"length\":14}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8016\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"2huu7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running whatshap stats\",\"description\":\"\",\"guid\":\"D8491819481711EFB8350A58A9FEAC02\",\"name\":\"whatshap stats --tsv=whatshap.tsv --gtf=whatshap.gtf phased.vcf.gz \\u003e stats_whatshap.txt\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":300,"original_id":0,"number":"9","cases":[],"critical":null},{"id":2151168,"guid":"0F3D0C2F31844CE5BEAC6B1C91B75B0F","previous_id":2147938,"previous_guid":"3094FB576FED483D8FF4D7FB21D74DD3","section":"\u003cp\u003ePhasing\u003c/p\u003e","section_color":"#FFED92","section_duration":12900,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6r777\",\"text\":\"Tagging reads by haplotype with whatshap haplotag.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":50},{\"style\":\"italic\",\"offset\":32,\"length\":17}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c18c5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"841k1\",\"text\":\"Quite often it is interesting to show the reads as well as the variants. For that, we can run the whatshap haplotag subcommand on the phased VCF file. It tags each read in a BAM file with HP:i:1 or HP:i:2 depending on which haplotype it belongs to, and also adds a PS tag that describes in which haplotype block the read is.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":98,\"length\":17}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2b8vg\",\"text\":\"The command below creates a BAM file 'haplotagged.bam' with the tagged reads, which you can open in IGV, in order to visualize either haplotype assignment and modified bases.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"pd2p\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"1b89r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running whatshap haplotag\",\"description\":\"\",\"guid\":\"CE8673E4483611EFB8350A58A9FEAC02\",\"name\":\"whatshap haplotag -o haplotagged.bam --reference hg38.fa phased.vcf.gz calls_sorted.bam\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":10800,"original_id":0,"number":"10","cases":[],"critical":null},{"id":2151491,"guid":"752842F87C684AC6980096E7A75D4C9D","previous_id":2165335,"previous_guid":"2752ADEB01F14619887C0D2950DD0128","section":"\u003cp\u003eModified bases\u003c/p\u003e","section_color":"#f5a623","section_duration":10800,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1veib\",\"text\":\"Modified bases calling and stats with modkit.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":45},{\"style\":\"italic\",\"offset\":38,\"length\":6}],\"entityRanges\":[],\"data\":{}},{\"key\":\"frfou\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"atgfi\",\"text\":\"Modified bases can be called with modkit directly from the modBAM file, depending on the type of model chosen during the basecalling stage. Modkit can effectively count the following modified bases: 5mC, 5hmC, 6mA. It outputs a bedMethyl file, a table with the counts of base modifications from every sequencing read over each reference genomic position. No reference sequence is required (hence we strongly advise using it) and for user convenience, the counting process can be modulated using several additional transforms and filters, for instance the most basic of these is to report only counts from reference CpG dinucleotides.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":34,\"length\":6}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2m9sn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"cbf10\",\"text\":\"It is also possible to produce a summary to have an overview of the mod tags that are present in a BAM and get basic statistics. The default output is a totals table (designated by '#' lines) and a modification calls table. We ran the command with --no-sampling flag to count modified bases throughout the genome but if you prefer, you can choose a specific region or a specific number of reads to be randomly picked.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":248,\"length\":13}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bq8v6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"de1n6\",\"text\":\"Furthermore, modkit offers the possibility to perform differential methylation scoring. This can be done using two subcommands: modkit dmr pair to compare regions in a pair of samples (for example, tumor and normal, or control and experiment), or modkit dmr multi to compare regions between all pairs of samples (for example, a trio sample set ). Before performing this step, the input data (i.e., bedMethyl files created in the previous step) must be compressed with bgzip and indexed with tabix. Additionally, you must specify a BED file containing the specific regions to be compared, such as CpG Islands in hg38. This BED file should contain 4 columns: chrom, chromStart, chromEnd, and CpGname. Keeping the name column is optional and we can also specify the modified base in which we are interested in, for example, for CpG islands we can specify \\\"--base C\\\". \",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":128,\"length\":15},{\"style\":\"italic\",\"offset\":247,\"length\":16}],\"entityRanges\":[],\"data\":{}},{\"key\":\"254ui\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"308cg\",\"text\":\"The modkit dmr multi command performs pairwise comparisons across all regions specified in the regions BED file for more than two samples. The data preparation is the same as described in the previous section, applied to each sample. An example command for a trio is the following: \",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":4,\"length\":16}],\"entityRanges\":[],\"data\":{}},{\"key\":\"49o53\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":3,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"3ofi\",\"text\":\"The latest version of modkit introduces the option \\\"--segments\\\", which allows modkit dmr to dynamically identify and generate regions of differential methylation during the analysis using a hidden Markov model, instead of relying on pre-defined regions. This can provide more flexible and potentially more accurate identification of methylation patterns in your data\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":78,\"length\":10}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bn2qa\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":4,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"fsu2n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running modkit pileup\",\"description\":\"\",\"guid\":\"401999C9490211EF81960A58A9FEAC02\",\"name\":\"modkit pileup calls_sorted.bam pileup_m.bed --ref hg38.fa --log-filepath pileup.log -t 16\",\"os_name\":\"\",\"os_version\":\"\"}},\"1\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running modkit summary\",\"description\":\"\",\"guid\":\"ED2A3A38490611EF81960A58A9FEAC02\",\"name\":\"modkit summary calls_sorted.bam --no-sampling -t 16\",\"os_name\":\"\",\"os_version\":\"\"}},\"2\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Differential methylation scoring for a pair of samples\",\"guid\":\"44AA57864FEA11EF9BEC0A58A9FEAC02\",\"name\":\"modkit dmr pair -a control.bed.gz --index-a control.bed.gz.tbi -b  case.bed.gz --index-b case.bed.gz.tbi -o differential_case_control.bed -r CpG.bed --ref hg38.fa --base C --threads 16 --log-filepath file.log\",\"os_name\":\"\",\"os_version\":\"\"}},\"3\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Differential methylation scoring on all pairs of samples\",\"guid\":\"1F7F12A74FEC11EF81B20A58A9FEAC02\",\"name\":\"modkit dmr multi -s father.bed.gz norm1 --index father.bed.gz.tbi norm1 -s mother.bed.gz norm2 --index mother.bed.gz.tbi norm2 -s child.bed.gz child1 --index child.bed.gz.tbi child1 -o out_path --regions-bed CpG.bed --ref hg38.fa --base C -t 32 --log-filepath file.log\",\"os_name\":\"\",\"os_version\":\"\"}},\"4\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"\",\"description\":\"Differential methylation using a Hidden Markov Model with --segments option\",\"guid\":\"841823394FEE11EF81B20A58A9FEAC02\",\"name\":\"modkit dmr pair --segment segmentation.bed  -a control.bed.gz --index-a control.bed.gz.tbi -b case.bed.gz --index-b case.bed.gz.tbi -o out_path --ref hg38.fa --base C -t 32 --log-filepath file.log\\n\\n\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":10800,"original_id":0,"number":"12","cases":[],"critical":null},{"id":2154969,"guid":"8A8A98E0C4FD4100A4DDA37C3A7FE2F3","previous_id":2156878,"previous_guid":"D7C6DD13FB1C47D6B48769CEF41B701F","section":"\u003cp\u003eVariant calling\u003c/p\u003e","section_color":"#84CE84","section_duration":9300,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"jln9\",\"text\":\"SV annotation and prioritization with SvAnna.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"bold\",\"offset\":0,\"length\":45},{\"style\":\"italic\",\"offset\":38,\"length\":7}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqeoo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ut0n\",\"text\":\"Structural variants need to be annotated as well as, in case of pathogenic analysis, prioritized. We benchmarked several tools for this purpose, but we determined SvAnna to be the most suitable for our goals, taking as inputs either sniffles2 vcf and our HPOs. \",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":233,\"length\":9}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ffud\",\"text\":\"The output in html is specifically useful in order to have a first look at the most valuable structural variants in terms of pathogenic relevance.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3elgf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"ver1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running SvAnna\",\"description\":\"\",\"guid\":\"2841B86C4A9411EFB1CF0A58A9FEAC02\",\"name\":\"java -jar svanna-cli-1.0.4.jar prioritize -d /svanna-cli-1.0.4/svanna-data --output-format html,vcf --vcf sniffles.vcf --phenotype-term HP:0001250 --phenotype-term HP:0001249 --phenotype-term HP:0000256 --n-threads 8 --out-dir /svanna-cli-1.0.4/output\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":600,"original_id":0,"number":"7","cases":[],"critical":null},{"id":2154974,"guid":"3ABB4D97E32142C7A8B5A978828666A0","previous_id":2151491,"previous_guid":"752842F87C684AC6980096E7A75D4C9D","section":"\u003cp\u003eFurther analysis\u003c/p\u003e","section_color":"#EA9F6C","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"5o6u4\",\"text\":\"Further analyses are expected to be performed according to the specific aim of your study. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"13","cases":[],"critical":null},{"id":2156878,"guid":"D7C6DD13FB1C47D6B48769CEF41B701F","previous_id":2147841,"previous_guid":"DE5B773E58434EBFAAD54F404CE5289D","section":"\u003cp\u003eVariant calling\u003c/p\u003e","section_color":"#84CE84","section_duration":9300,"is_substep":true,"step":"{\"blocks\":[{\"key\":\"fr461\",\"text\":\"Additionally, sniffles2 developers offer a python program that generates a wide range of plots for single and multi-sample VCF files, such as SV size \\u0026 type distribution, and genotype frequency.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"italic\",\"offset\":13,\"length\":10}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bmmjl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"er51f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Creating plots\",\"description\":\"\",\"guid\":\"B8526E374A9711EF85B70A58A9FEAC02\",\"name\":\"python3 -m sniffles2_plot -i sniffles.vcf -o sniffles2_plots\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":300,"original_id":0,"number":"6.1","cases":[],"critical":null},{"id":2165335,"guid":"2752ADEB01F14619887C0D2950DD0128","previous_id":2151168,"previous_guid":"0F3D0C2F31844CE5BEAC6B1C91B75B0F","section":"\u003cp\u003eTips for trios\u003c/p\u003e","section_color":"#9b9b9b","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"1kle7\",\"text\":\"In case we had a trio of samples (child, parent1, and parent2) the above stages of variant calling and phasing can be completed with a single command thanks to the Clair3-Nova tool. With few lines of code, we would be able to perform SNVs and indels calling, phasing heterozygous variants, and haplotagging input bam files with haplotype infos, the two latter steps ran via whatshap if we specify the tool path.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"30ert\",\"text\":\"If needed, Clair3-Nova can output also gvcfs files.\",\"type\":\"align-justify\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a4i57\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"868tu\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"IMMUTABLE\",\"data\":{\"can_edit\":true,\"command_name\":\"Running Clair3-Nova\",\"description\":\"\",\"guid\":\"DE967B9A501511EF81B20A58A9FEAC02\",\"name\":\"run_clair3_nova.sh \\\\\\n  --bam_fn_c=child_sorted.bam \\\\\\n  --bam_fn_p1=P1_sorted.bam \\\\\\n  --bam_fn_p2=P2_sorted.bam \\\\\\n  --output=clair3_nova \\\\\\n  --ref_fn=hg38.fa \\\\\\n  --threads=12 \\\\\\n  --model_path_clair3=r1041_e82_400bps_sup_v430 \\\\\\n  --model_path_clair3_nova=r1041_e82_400bps_sup_nova \\\\\\n  --gvcf \\\\\\n  --include_all_ctgs \\\\\\n  --whatshap=/usr/bin/whatshap \\\\\\n  --enable_output_phasing \\\\\\n  --enable_output_haplotagging\",\"os_name\":\"\",\"os_version\":\"\"}}}}","data":null,"protocol_id":102990,"case_id":0,"critical_ids":"","duration":43200,"original_id":0,"number":"11","cases":[],"critical":null}],"template_id":0,"title":"Bioinformatic pipeline for analysing variations in long-reads reconstructed human genomes","title_html":"\u003cp\u003eBioinformatic pipeline for analysing variations in long-reads reconstructed human genomes\u003c/p\u003e","type_id":1,"units":[{"id":1,"type_id":3,"name":"ÂµL","can_manage":0,"read_only":0},{"id":2,"type_id":3,"name":"mL","can_manage":0,"read_only":0},{"id":3,"type_id":3,"name":"L","can_manage":0,"read_only":0},{"id":4,"type_id":3,"name":"Âµg","can_manage":0,"read_only":0},{"id":5,"type_id":3,"name":"mg","can_manage":0,"read_only":0},{"id":6,"type_id":3,"name":"g","can_manage":0,"read_only":0},{"id":7,"type_id":3,"name":"kg","can_manage":0,"read_only":0},{"id":8,"type_id":3,"name":"ng","can_manage":0,"read_only":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0,"read_only":0},{"id":10,"type_id":24,"name":"Â°C","can_manage":0,"read_only":0},{"id":11,"type_id":24,"name":"Â°Ð","can_manage":0,"read_only":0},{"id":12,"type_id":24,"name":"Â°F","can_manage":0,"read_only":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0,"read_only":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0,"read_only":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0,"read_only":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0,"read_only":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0,"read_only":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0,"read_only":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0,"read_only":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0,"read_only":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":1},{"id":22,"type_id":25,"name":"Molarity (M)","can_manage":0,"read_only":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0,"read_only":0},{"id":24,"type_id":3,"name":"Î¼V","can_manage":0,"read_only":0},{"id":25,"type_id":3,"name":"ms","can_manage":0,"read_only":0},{"id":26,"type_id":3,"name":"pg","can_manage":0,"read_only":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0,"read_only":0},{"id":28,"type_id":25,"name":"millimolar (mM)","can_manage":0,"read_only":0},{"id":29,"type_id":25,"name":"micromolar (ÂµM)","can_manage":0,"read_only":0},{"id":30,"type_id":25,"name":"nanomolar (nM)","can_manage":0,"read_only":0},{"id":31,"type_id":25,"name":"picomolar (pM)","can_manage":0,"read_only":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0,"read_only":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0,"read_only":0},{"id":34,"type_id":30,"name":"x g","can_manage":0,"read_only":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0,"read_only":0},{"id":200,"type_id":32,"name":"cm","can_manage":0,"read_only":0},{"id":201,"type_id":32,"name":"mm","can_manage":0,"read_only":0},{"id":202,"type_id":32,"name":"Âµm","can_manage":0,"read_only":0},{"id":203,"type_id":32,"name":"nm","can_manage":0,"read_only":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0,"read_only":0},{"id":205,"type_id":25,"name":"Âµg/ÂµL","can_manage":0,"read_only":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0,"read_only":0},{"id":207,"type_id":3,"name":"V","can_manage":0,"read_only":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0,"read_only":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0,"read_only":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0,"read_only":0}],"uri":"bioinformatic-pipeline-for-analysing-variations-in-dgtn3wme","url":"https://www.protocols.io/view/bioinformatic-pipeline-for-analysing-variations-in-dgtn3wme","version_class":102990,"version_data":{"id":0,"code":"dgtn3wme","version_class":102990,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"merge_request":null},"version_id":0,"version_uri":"bioinformatic-pipeline-for-analysing-variations-in-36wgqnoz3gk5/v1","versions":[{"id":102990,"title":"Bioinformatic pipeline for analysing variations in long-reads reconstructed human genomes","title_html":"\u003cp\u003eBioinformatic pipeline for analysing variations in long-reads reconstructed human genomes\u003c/p\u003e","image":{"source":"https://www.protocols.io/img/default_protocol.png","webp_source":null,"placeholder":"https://www.protocols.io/img/default_protocol.png","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.36wgqnoz3gk5/v1","uri":"bioinformatic-pipeline-for-analysing-variations-in-dgtn3wme","published_on":1727715085,"modified_on":1727715085,"version_class":102990,"version_id":0,"version_code":"dgtn3wme","version_uri":"bioinformatic-pipeline-for-analysing-variations-in-36wgqnoz3gk5/v1","created_on":1720446012,"categories":null,"type_id":1,"creator":{"name":"Angelo Sante Varvara","affiliation":"University of Bari","affiliation_url":"","username":"angelo-sante-varvara","link":"","user_image_file":{"guid":"ACE5D1B15B2D11EFA2EF0A58A9FEAC02","file_name":"q55hcfsnp.jpg","url":"https://files.protocols.io/external/q55hcfsnp-ACE5D1B15B2D11EFA2EF0A58A9FEAC02.jpg","mime":"image/jpeg","size":70186,"width":0,"height":0,"avg_color":"","scan_status":0,"created_at":1723743720}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}