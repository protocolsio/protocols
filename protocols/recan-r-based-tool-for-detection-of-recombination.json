{"id":47430,"title":"Recan: R-based tool for detection of recombination in viral genomes","title_html":"<p>Recan: R-based tool for detection of recombination in viral genomes<\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.bsjencje","doi_status":2,"uri":"recan-r-based-tool-for-detection-of-recombination-bsjencje","type_id":1,"template_id":5,"published_on":1614500579,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":1,"version_data":{"id":"1","code":"bsjencje","parent_id":47085,"parent_uri":"recan-r-based-tool-for-detection-of-recombination-br8mm9u6","is_same_owner":true,"has_pending_merge_request":false,"has_approved_merge_request":true},"created_on":1613724119,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Vasily Pavelko","affiliation":null,"affiliations":[],"username":"vasily-pavelko","note":null,"link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/czfqbinjp.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/czfqbinjp.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":12,"authors":[{"name":"Vasily Pavelko","affiliation":"International Biotechnology Center Generium","affiliations":[],"username":"vasily-pavelko","note":"","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/czfqbinjp.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/czfqbinjp.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":18920,"uri":"recan","title":"recan","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":18920,"uri":"recan","title":"recan","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":true,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Recan: R-based tool for detection of recombination in viral genomes","title_html":"Recan: R-based tool for detection of recombination in viral genomes","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"recan-r-based-tool-for-detection-of-recombination-bsjencje","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1614500579,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/recan-r-based-tool-for-detection-of-recombination-bsjencje","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"A7E23DD032AF4ADC9C59C564D3D24880","state_version_id":370,"steps":[{"id":1129453,"guid":"D710C670729011EB9F7B975A429F4A14","previous_id":1129511,"previous_guid":"DDAD8A40729A11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5AB89C80127B4D1191A35E7D4B99D66A","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan package in R"}},{"id":1054724,"guid":"3813CFCBBA41498CAF5363914DBA4F19","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Hepatitis C virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"617BF4B0729111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8610,"name":"setwd(\"\/path\/to\/sequences\/\")\nls <- list.files(path = \".\")\nt <- 3\n{\n  seq <- read.fasta(ls[t])\n  mat <- (replicate(30, system.time({seqSim(seq, window = 400, shift = 200)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":"","os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129455,"guid":"8175D6A0729111EB9F7B975A429F4A14","previous_id":1129564,"previous_guid":"B890860072AD11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A0AF41A216BC486A89DA02EE560CC217","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of seqcombo package in R"}},{"id":1054724,"guid":"272E724D3DD049B9AE6FB07875F443CC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Lumpy Skin Disease Virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"94226AC0729111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8611,"name":"library(seqcombo)\n{\n  mat <- (replicate(30, system.time({simplot(\"lsdv.fasta\", query = 1, \n                                             window = 400, step = 200, \n                                             group = FALSE, id, sep,\n                                             sd = FALSE)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129511,"guid":"DDAD8A40729A11EB9F7B975A429F4A14","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"37D7FA434CBD4662B0E2CAF58097A029","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan package in R"}},{"id":1054724,"guid":"B8AB3C6F8F0343B89B49172EB74C85CF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Human Immunodeficiency Virus datasets.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129513,"guid":"43CD56C0729B11EB9F7B975A429F4A14","previous_id":1129453,"previous_guid":"D710C670729011EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A7EA9B9F96CD458B8BC089C4045B8944","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan package in R"}},{"id":1054724,"guid":"99FD9A9FC2914F50AECC0227506DE18B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Norovirus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"618F4A10729B11EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8614,"name":"setwd(\"\/path\/to\/sequences\/\")\nls <- list.files(path = \".\")\nt <- 7\n{\n  seq <- read.fasta(ls[t])\n  mat <- (replicate(30, system.time({seqSim(seq, window = 400, shift = 200)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129514,"guid":"4769B760729B11EB9F7B975A429F4A14","previous_id":1129513,"previous_guid":"43CD56C0729B11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"99672847F4B64282B70E40F63A697BEF","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan package in R"}},{"id":1054724,"guid":"0FD0999191E64D459AE64C9AC0FA8A6D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Lumpy Skin Disease Virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"57F7D850729B11EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8613,"name":"setwd(\"\/path\/to\/sequences\/\")\nls <- list.files(path = \".\")\nt <- 6\n{\n  seq <- read.fasta(ls[t])\n  mat <- (replicate(30, system.time({seqSim(seq, window = 400, shift = 200)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129562,"guid":"B6CA1DE072AD11EB9F7B975A429F4A14","previous_id":1129514,"previous_guid":"4769B760729B11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E7AC93D2923F4700AC8E0B72C5C878B4","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of seqcombo package in R"}},{"id":1054724,"guid":"4CF1EAEFAA1448528C63BF6D74EFF7FE","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Human Immunodeficiency Virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"17B0066072AE11EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8615,"name":"library(seqcombo)\n{\n  mat <- (replicate(30, system.time({simplot(\"hiv.fasta\", query = 1, \n                                             window = 400, step = 200, \n                                             group = FALSE, id, sep,\n                                             sd = FALSE)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129563,"guid":"B8055D0072AD11EB9F7B975A429F4A14","previous_id":1129562,"previous_guid":"B6CA1DE072AD11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5C436025228E4E5DAFB299AED497397A","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of seqcombo package in R"}},{"id":1054724,"guid":"23EEA1E9EFCC41A09B1FECAA2500DB54","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Hepatitis C virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"5BEE1E2072AE11EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8616,"name":"library(seqcombo)\n{\n  mat <- (replicate(30, system.time({simplot(\"hcv.fasta\", query = 1, \n                                             window = 400, step = 200, \n                                             group = FALSE, id, sep,\n                                             sd = FALSE)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129564,"guid":"B890860072AD11EB9F7B975A429F4A14","previous_id":1129563,"previous_guid":"B8055D0072AD11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4044628230744C12B52C3A90136F7D84","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of seqcombo package in R"}},{"id":1054724,"guid":"751C8577BF504C0E83575642A9ACAF5B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Norovirus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"AD6D009072AE11EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8617,"name":"library(seqcombo)\n{\n  mat <- (replicate(30, system.time({simplot(\"norovirus.fasta\", query = 1, \n                                             window = 400, step = 200, \n                                             group = FALSE, id, sep,\n                                             sd = FALSE)})))\n  print(apply(mat, MARGIN = 1, mean)*1000)\n  print(apply(mat, MARGIN = 1, sd)*1000)\n}","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129570,"guid":"8CD5966072BF11EB9F7B975A429F4A14","previous_id":1129571,"previous_guid":"9D14FB1072BF11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"20BB073B45FD4501A91CB08A7F63C810","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan library in Python"}},{"id":1054724,"guid":"6AC1F35DE2434823AC45E4FF713E1869","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Hepatitis C virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"198986B072C111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8618,"name":"from datetime import datetime \nsim_obj = Simgen(\"\/path\/to\/sequences\/hcv.fasta\")\nsim_obj.get_info()\nstart_time = datetime.now() \nsim_obj.simgen(window=400, shift=200, pot_rec=1)\ntime_elapsed = datetime.now() - start_time \nprint('Time elapsed (hh:mm:ss.ms) {}'.format(time_elapsed))","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129571,"guid":"9D14FB1072BF11EB9F7B975A429F4A14","previous_id":1129455,"previous_guid":"8175D6A0729111EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4EFC346314B7484F96D9E0021F78AA46","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan library in Python"}},{"id":1054724,"guid":"A40C92625CDE41C78E55C58C3584C637","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Human Immunodeficiency Virus datasets.  Each step I run 2 times as a preparatory steps, and then 7 runs used for calculation average time.<\/div><\/div>"}},{"id":1054725,"guid":"395A5CD072C111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8619,"name":"from datetime import datetime \nsim_obj = Simgen(\"\/path\/to\/sequences\/hiv.fasta\")\nstart_time = datetime.now() \nsim_obj.simgen(window=400, shift=200, pot_rec=1)\ntime_elapsed = datetime.now() - start_time \nprint('Time elapsed (hh:mm:ss.ms) {}'.format(time_elapsed))","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129572,"guid":"9E07987072BF11EB9F7B975A429F4A14","previous_id":1129570,"previous_guid":"8CD5966072BF11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BAFE2E29B47B4EB380E989E8E2A60D27","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan library in Python"}},{"id":1054724,"guid":"ED45970E4DA34B3D8FEB815D13DB1E3A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Norovirus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"746D804072C111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8620,"name":"from datetime import datetime \nsim_obj = Simgen(\"\/path\/to\/sequences\/norovirus.fasta\")\nstart_time = datetime.now() \nsim_obj.simgen(window=400, shift=200, pot_rec=1)\ntime_elapsed = datetime.now() - start_time \nprint('Time elapsed (hh:mm:ss.ms) {}'.format(time_elapsed))","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1129573,"guid":"9F269D0072BF11EB9F7B975A429F4A14","previous_id":1129572,"previous_guid":"9E07987072BF11EB9F7B975A429F4A14","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1766576A02BA4F8E9C952AE25AA2AFE2","order_id":1,"type_id":6,"title":"Section","source":{"title":"Benchmarking of recan library in Python"}},{"id":1054724,"guid":"DCDF3E6F32004DD595F36CD96143732D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Calculating average execution time of code using Lumpy Skin Disease Virus datasets.<\/div><\/div>"}},{"id":1054725,"guid":"8B911D9072C111EB9F7B975A429F4A14","order_id":2,"type_id":15,"title":"command","source":{"id":8621,"name":"from datetime import datetime \nsim_obj = Simgen(\"\/path\/to\/sequences\/lsdv.fasta\")\nstart_time = datetime.now() \nsim_obj.simgen(window=400, shift=200, pot_rec=1)\ntime_elapsed = datetime.now() - start_time \nprint('Time elapsed (hh:mm:ss.ms) {}'.format(time_elapsed))","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">Recan is an R version of the Python library that allows the identification of recombination events through construction and exploration of similarity plots based on genetic distances between nucleotide sequences. After porting I validated this package using sequences of viruses with previously identified recombitations. During benchmarking both versions demonstrated the same execution time. <\/div><div class = \"text-block\"><span>To benchmark the packages we selected the same four sets of viral genomes used in the Python version of recan <\/span><a href=\"https:\/\/www.zotero.org\/google-docs\/?broken=1VahDR\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">(Babin, 2020)<\/span><\/a><span>. <\/span><\/div><\/div>","changed_on":1614500579}