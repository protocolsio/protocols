{"id":36717,"title":"High-throughput SARS-CoV-2 and host genome sequencing - alignment protocol ","title_html":"<p>High-throughput SARS-CoV-2 and host genome sequencing - alignment protocol <\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e08901479f2db9c9dbddbc74c685818bf61286a0108da2213500b3fa275b3254\/b7v9bddtf.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e08901479f2db9c9dbddbc74c685818bf61286a0108da2213500b3fa275b3254\/b7v9bddtf.png"},"doi":null,"doi_status":0,"uri":"high-throughput-sars-cov-2-and-host-genome-sequenc-bf4mjqu6","type_id":1,"template_id":1,"published_on":1608044938,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":"0","code":"bf4mjqu6","parent_id":0,"parent_uri":null,"is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":false},"created_on":1588803095,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Christopher Hughes","affiliation":null,"affiliations":[],"username":"m4tle1z1y1t4rle1","note":null,"link":null,"image":{"source":"\/img\/avatars\/002.png","placeholder":"\/img\/avatars\/002.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":5,"authors":[{"name":"Christopher Hughes","affiliation":"Stanford University","affiliations":[],"username":"m4tle1z1y1t4rle1","note":"","link":null,"image":{"source":"\/img\/avatars\/002.png","placeholder":"\/img\/avatars\/002.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/high-throughput-sars-cov-2-and-host-genome-sequenc-bf4mjqu6","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"6A4554808FE611EAA2418BADD681953C","state_version_id":1703,"steps":[{"id":934704,"guid":"49B739208FF711EAA2418BADD681953C","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"CBF401E7AF9045878AA32032CB3CCD89","order_id":1,"type_id":6,"title":"Section","source":{"title":"Alignment"}},{"id":1054724,"guid":"8280E08A6AED443184183E7089F4EABB","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The pipeline is broken into two steps: alignment and recalibration. First, alignment is performed using the alignment.sh script:<\/div><\/div>"}},{"id":1054725,"guid":"4EF203A0C6C211EABA59C186F882C5A9","order_id":2,"type_id":15,"title":"command","source":{"id":7606,"name":"#!\/bin\/bash\n\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=8\n#SBATCH --account=euan\n#SBATCH --partition=batch\n#SBATCH --time=20:00:00\n#SBATCH --mail-user=email@email.edu --mail-type=BEGIN,END,FAIL\n#SBATCH --mem=16G\n\n#Load tools\nml purge\nml bwa\nml samtools\nml fastqc\n\n\n#Load sample name\nR1=$1\nR2=$2\nsample_name=$3\nlane=$4\necho $R1 $R2 $sample_name $lane\n\n\n#Step 0: Perform FASTQ QC and output reports for R1\/R2\nfastqc -t 2 ${R1} -o \/path\/to\/${sample_name}\/fastqc\nfastqc -t 2 ${R2} -o \/path\/to\/${sample_name}\/fastqc\n\n#Step 1: Assign read groups and align\nread_tmp=$(zcat ${R1} | grep ^@ | head -1 | sed 's|\\:|\\t|g')\n\nreadGroup=\"@RG\\\\tID:$(echo $read_tmp | awk '{print $3 \".\" $4}')\\\\tCN:Stanford\\\\tSM:${sample_name}\\\\tLB:${sample_name}\\\\tPL:illumina\"\n\n#Alignment\nbwa mem -K 100000000 \\\n-R ${readGroup} \\\n-t ${threads} \\\n-M \\\n${human_reference} \\\n${R1} \\\n${R2} \\\n-o ${sample_name}_${lane}.bam\n\n#Sort the aligned .bam\nsamtools sort --threads -@ ${threads} -m ${memory} \\\n${sample_name}\/${sample_name}_${lane}.bam \\\n-o ${sample_name}_${lane}.bam\n\n#Step 2: Index BAM\nsamtools index -@ ${threads} ${sample_name}_${lane}.bam","command_name":"alignment.sh","command":"Performs BWA alignment of a sample and produces QC reports of demultiplex FASTQ files","os_name":"CentOS Linux","os_version":"7 (Core)"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":934706,"guid":"AF5DDE008FF711EAA2418BADD681953C","previous_id":934704,"previous_guid":"49B739208FF711EAA2418BADD681953C","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"24900FDCB6C34EFC90B126F9BA2007B9","order_id":1,"type_id":6,"title":"Section","source":{"title":"Recalibration"}},{"id":1054724,"guid":"E7532545789E40A39784E303A792172E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">After each lane for the sample has been aligned, the .bams are merged, duplicates are marked and base recalibration is performed using recalibration.sh:<\/div><\/div>"}},{"id":1054725,"guid":"82AF7BC0900B11EAA2418BADD681953C","order_id":2,"type_id":15,"title":"command","source":{"id":7325,"name":"#!\/bin\/bash\n\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=8\n#SBATCH --account=euan\n#SBATCH --partition=batch\n#SBATCH --time=16:00:00\n#SBATCH --mail-user=email@email.edu --mail-type=BEGIN,END,FAIL\n#SBATCH --mem=16G\n\n#Load tools\nml purge\nml samtools\nml gatk\nml qualimap\nml mosdepth\n\n#Load sample name\nsample_name=$1\n\ncd \/path\/to\/${sample_name}\/\n\n\n#Merges each lane for the sample where L* is a wild card for L001 or L002\nsamtools merge -@ ${threads} -f ${sample_name}_merged.bam ${sample_name}_L*.bam\nsamtools index -@ ${threads} ${sample_name}_merged.bam\n\n#Mark Duplicates\ngatk --java-options \"-Xmx12G -XX:ConcGCThreads=1\" \\\nMarkDuplicates \\\n--USE_JDK_DEFLATER true \\\n--USE_JDK_INFLATER true \\\n--MAX_RECORDS_IN_RAM 50000 \\\n--INPUT ${sample_name}_merged.bam \\\n--METRICS_FILE ${sample_name}.bam.metrics \\\n--TMP_DIR . \\\n--CREATE_INDEX true \\\n--OUTPUT ${sample_name}.md.bam\n\n\n#Removes the merged BAM file to keep things cleaned up if disk space is a concern\nif [ -s ${sample_name}.md.bam ]; then\n\techo Cleaning up intermediate BAM files...\n\trm ${sample_name}_merged.ba*\nfi\n\n#Create base recalibration table\ngatk --java-options \"-Xmx12G -XX:ConcGCThreads=1\" \\\nBaseRecalibrator \\\n-I ${sample_name}.md.bam \\\n-O ${sample_name}.recal.table \\\n-R ${human_reference} \\\n--use-jdk-deflater true \\\n--use-jdk-inflater true \\\n--known-sites \/path\/to\/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz \\\n--known-sites \/path\/to\/dbsnp_146.hg38.vcf.gz \\\n--known-sites \/path\/to\/hg381000G_phase1.snps.high_confidence.hg38.vcf.gz \n\n#Apply base recalibration table\ngatk --java-options \"-Xmx12G -XX:ConcGCThreads=1\" \\\nApplyBQSR \\\n-R ${human_reference} \\\n--input ${sample_name}.md.bam \\\n--output ${sample_name}.recal.bam \\\n--bqsr-recal-file ${sample_name}.recal.table\n\n#Index the recalibrated BAM\nsamtools index -@ ${threads} ${sample_name}.recal.bam\n\n#Allows for sanity check on the .bam prior to generating metrics\necho Applying Samtools Quickcheck...\nsamtools quickcheck ${sample_name}.recal.bam > ${sample_name}.quickcheck.txt\n\n#Validate the SAM for other issues\ngatk --java-options \"-Xmx12G -XX:ConcGCThreads=1\" \\\nValidateSamFile \\\n-I ${sample_name}.recal.bam \\\n--MODE SUMMARY \\\n-O ${sample_name}.validateSAM.txt\n\n#Generate metrics for BAM\nsamtools stats ${sample_name}.recal.bam > ${sample_name}.samtools.stats.out\nplot-bamstats -p ${sample_name}.plots ${sample_name}.samtools.stats.out\n\n\n#Clean up and rename\nmv ${sample_name}.recal.bam ${sample_name}_${batch_name}.bam\nmv ${sample_name}.recal.bam.bai ${sample_name}_${batch_name}.bai\n\nmkdir \/path\/to\/${sample_name}\/intermediates\nmv ${sample_name}.* intermediates\/\nmv ${sample_name}_L* intermediates\/\nmv ${sample_name}_merged* intermediates\/\n\n#Calculate Coverage\nmkdir path\/to\/${sample_name}\/${sample_name}\nunset DISPLAY\n\nqualimap bamqc -outdir path\/to\/${sample_name}\/${sample_name}\/ -outformat HTML -bam ${sample_name}_${batch_name}.bam\n\n\nmosdepth -t ${threads} path\/to\/${sample_name}\/${sample_name}\/ ${sample_name}_${batch_name}.bam","command_name":"recalibration.sh","command":"Performs BAM merging, duplicate marking, recalibration, and statistics on the BAMs","os_name":"CentOS Linux","os_version":"7 (Core)"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":981067,"guid":"93A3BD60C6C511EABA59C186F882C5A9","previous_id":934706,"previous_guid":"AF5DDE008FF711EAA2418BADD681953C","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"888CA89A27654A06807672DB434DF94B","order_id":1,"type_id":6,"title":"Section","source":{"title":"SLURM Submission"}},{"id":1054724,"guid":"28A13A68D5DD4302A195BB4066FB5C0E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">An example script of how each sample is submitted to SLURM: <\/div><\/div>"}},{"id":1054725,"guid":"DF463A40C6C511EABA59C186F882C5A9","order_id":2,"type_id":15,"title":"command","source":{"id":7607,"name":"sbatch --job-name=${sample_name}_${lane}_alignment \\\n--output=\/path\/to\/${sample_name}\/${sample_name}_${lane}_pipeline.log \\\n\/path\/to\/alignment.sh \\\n\/path\/to\/${sample_name}_${lane}_R1.fastq.gz \\\n\/path\/to\/${sample_name}_${lane}_R2.fastq.gz \\\n${sample_name} \\\n${lane}","command_name":"sbatch command for alignment","command":"Example code of how samples are submitted to SLURM for alignment","os_name":"CentosOS Linux","os_version":"7 (Core)"}},{"id":1054726,"guid":"0BB399E0C6C811EABA59C186F882C5A9","order_id":3,"type_id":15,"title":"command","source":{"id":7608,"name":"sbatch --job-name=${sample_name}_recalibration \\\n--output=\/path\/to\/${sample_name}\/${sample_name}_recalibration.log \\\n\/path\/to\/recalibration.sh \\\n${sample_name}","command_name":"sbatch command for recalibration","command":"Example code of how samples are submitted to SLURM for recalibration","os_name":"CentosOS Linux","os_version":"7 (Core)"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":981070,"guid":"4A1875D0C6C711EABA59C186F882C5A9","previous_id":981067,"previous_guid":"93A3BD60C6C511EABA59C186F882C5A9","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"79B652B298E64D3C92C7412376D85567","order_id":1,"type_id":6,"title":"Section","source":{"title":"MultiQC Report"}},{"id":1054724,"guid":"A34AFC5B744E48549DB37DC1DBDC553B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">MultiQC is a tool that allows for aggregation of several output reports from each sample. We use MultiQC to generate reports for all of our samples by navigating to the parent directory and running the command: <\/div><\/div>"}},{"id":1054725,"guid":"62666CE0C6C811EABA59C186F882C5A9","order_id":2,"type_id":15,"title":"command","source":{"id":7609,"name":"cd \/path\/to\/parent\/of\/samples\/\n\nmultiqc . --interactive","command_name":"multiqc","command":"Run multiqc on all sample directories","os_name":"CentosOS Linux","os_version":"7 (Core)"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":981071,"guid":"8DA103C0C6C811EABA59C186F882C5A9","previous_id":981070,"previous_guid":"4A1875D0C6C711EABA59C186F882C5A9","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D44E5C4C08AC40DCA4BEB8148AA83129","order_id":1,"type_id":6,"title":"Section","source":{"title":"MultiQC Report"}},{"id":1054724,"guid":"17DA8B1F7D904E5DA39000BD44F62E6B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">A configuration file is used to generate the MultiQC report. This .yaml should be saved in the home directory as multiqc_config.yaml: <\/div><div class = \"text-block\">Expected output: <\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e08901479f2db9c9dbddbc74c685818bf61286a0108da2213500b3fa275b3254\/ceu7bddtf.png\" \/><\/div><\/div>"}},{"id":1054725,"guid":"D1E005E0C6C811EABA59C186F882C5A9","order_id":2,"type_id":15,"title":"command","source":{"id":7610,"name":"extra_fn_clean_exts:\n    - .clean\n    - _S\n    - _final\n    - .AHJHNYCCXX\n    - _merged\n\ntable_columns_visible:\n QualiMap:\n  avg_gc: True\n  median_insert_size: True\n  1_x_pc: True\n  5_x_pc: True\n  10_x_pc: True\n  30_x_pc: False\n  median_coverage: True\n  mean_coverage: True\n  percentage_aligned: True\n  total_reads: True\n\n mosdepth:\n  median_coverage: False\n  1_x_pc: False\n  5_x_pc: False\n  10_x_pc: False\n  30_x_pc: False\n  50_x_pc: False\n\n Samtools:\n  error_rate: True\n  non-primary_alignments: True\n  reads_mapped: False\n  reads_mapped_percent: False\n  reads_properly_paired_percent: False\n  reads_MQ0_percent: False\n  raw_total_sequences: False\n\n FastQC:\n  percent_duplicates: False\n  percent_gc: False\n  avg_sequence_length: False\n  percent_fails: False\n  total_sequences: False\n\ncustom_plot_config:\n mosdepth-coverage-per-contig:\n  ymax: 20\n\ntop_modules:\n - 'qualimap'\n\nremove_sections:\n - mosdepth-coverage-dist\n - mosdepth-coverage-cov","command_name":"multiqc_config.yaml","command":"The configuration file used to generate the MultiQC report.","os_name":"CentosOS Linux","os_version":"7 (Core)"}},{"id":1054726,"guid":"1E9F736B88CF4AADB70E6F634A18F63A","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/e08901479f2db9c9dbddbc74c685818bf61286a0108da2213500b3fa275b3254\/ceu7bddtf.png\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">This protocol is designed to perform alignment on low-coverage (0.5x - 3x) whole-genome human sequences from Illumina MiSeq and NovaSeq platforms. This protocol was derived from two previously validated alignment and variant calling pipelines:<\/div><div class = \"text-block\">Nextflow:<\/div><div class = \"text-block\">nf-core\/sarek 2.5.2<\/div><div class = \"text-block\">https:\/\/github.com\/nf-core\/sarek<\/div><div class = \"text-block\"><span>Garcia M, Juhos S, Larsson M et al. Sarek: A portable workflow  for whole-genome sequencing analysis of germline and somatic variants  [version 1; peer review: awaiting peer review]<\/span><span style = \"font-weight:bold;\">.<\/span><span>. <\/span><span style = \"font-style:italic;\">F1000Research<\/span><span> 2020, 9:63. <\/span><a href=\"https:\/\/f1000research.com\/articles\/9-63\/v1\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">doi: 10.12688\/f1000research.16665.1<\/span><\/a><span style = \":;\">.<\/span><\/div><div class = \"text-block\">and<\/div><div class = \"text-block\">WDL + GATK4:<\/div><div class = \"text-block\">gatk4-genome-processing-pipeline<\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/gatk-workflows\/gatk4-genome-processing-pipeline\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/github.com\/gatk-workflows\/gatk4-genome-processing-pipeline<\/span><\/a><\/div><div class = \"text-block\"><span>Poplin, R. <\/span><span style = \"font-style:italic;\">et al.<\/span><span> Scaling accurate genetic variant discovery to tens of thousands of samples. <\/span><span style = \"font-style:italic;\">bioRxiv<\/span><span> 201178 (2017). doi:10.1101\/201178<\/span><\/div><div class = \"text-block\">Protocol image adapted (removed indel realignment step) from Figure 1 of Poplin, R. et al (2017). <\/div><div class = \"text-block\">What this pipeline does:<\/div><div class = \"text-block\">1. Performs quality check of demultiplexed FASTQ data<\/div><div class = \"text-block\">2. Aligns and maps FASTQ to the human reference<\/div><div class = \"text-block\">3. Marks duplicates in the alignments<\/div><div class = \"text-block\">4. Recalibrates base quality using known variants<\/div><div class = \"text-block\">5. Creates an index for the .BAM file<\/div><div class = \"text-block\">6. Validates the .BAM file for any errors<\/div><div class = \"text-block\">7. Calculates coverage per contig, .BAM file statistics, and plots those statistics<\/div><div class = \"text-block\">Inputs:<\/div><div class = \"text-block\">Demultiplexed FASTQ files for a single sample for one or multiple lanes<\/div><div class = \"text-block\">Outputs:<\/div><div class = \"text-block\">Aligned, de-deduped, recalibrated, QC'd BAM file<\/div><div class = \"text-block\">Coverage statistics and plots<\/div><div class = \"text-block\">BAM statistics and plots<\/div><div class = \"text-block\">FASTQ statistics and plots<\/div><\/div>","changed_on":1608044938}