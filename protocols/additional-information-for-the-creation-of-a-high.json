{"id":51514,"title":"Additional information for the creation of a\u00a0high-quality draft genome for Melaleuca alternifolia (tea tree)","title_html":"<p>Additional information for the creation of a\u00a0high-quality draft genome for <em>Melaleuca alternifolia<\/em> (tea tree)<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/d6ktbjw6p.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/d6ktbjw6p.jpg"},"doi":"dx.doi.org\/10.17504\/protocols.io.bwi2pcge","doi_status":2,"uri":"additional-information-for-the-creation-of-a-high-bwi2pcge","type_id":1,"template_id":5,"published_on":1628557691,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":0,"code":"bwi2pcge","parent_id":0,"parent_uri":null,"has_pending_merge_request":0,"has_approved_merge_request":0},"created_on":1626161145,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":18,"authors":[{"name":"Julia Voelker","affiliation":"Faculty of Science and Engineering, Southern Cross University, Military Road, East Lismore NSW 2480, Australia","affiliations":[],"username":"julia-voelker","note":null,"link":null,"image":{"source":"\/img\/avatars\/011.png","placeholder":"\/img\/avatars\/011.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":23779,"uri":"southern-cross-university","title":"Southern Cross University","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":23779,"uri":"southern-cross-university","title":"Southern Cross University","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":true,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Additional information for the creation of a\u00a0high-quality draft genome for Melaleuca alternifolia (tea tree)","title_html":"Additional information for the creation of a\u00a0high-quality draft genome for Melaleuca alternifolia (tea tree)","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"additional-information-for-the-creation-of-a-high-bwi2pcge","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1628557691,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/additional-information-for-the-creation-of-a-high-bwi2pcge","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"126D69580AB740B18B97A26D92C03321","state_version_id":13,"steps":[{"id":1212506,"guid":"2BE6F80E7DA749C8BB87ACE358B43BD3","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5C692505E0264C84B731F0D3C959728D","order_id":1,"type_id":6,"title":"Section","source":{"title":"DNA extraction"}},{"id":1054724,"guid":"B2C1550FD50F43749196E4E72FC14EB5","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>In order to yield high-quality DNA for PacBio sequencing, the CTAB extraction protocol from Healey<\/span><span style = \"font-style:italic;\"> et al.<\/span><span> (2014) was used with the following modifications. DNA was extracted in a buffer containing 100 mM Tris-HCl (pH 8), 25 mM EDTA, 1.4 M NaCl, 2% (w\/v) CTAB, and 1% (v\/v) \u03b2-mercaptoethanol. After the first protein extraction with chloroform-isoamyl alcohol (24:1), RNase A treatment at 37\u00b0C was prolonged from 15 to 40 min. Furthermore, the chloroform-isoamyl alcohol purification was repeated until the interface with contaminants (between the organic and aqueous layer) disappeared (3-4 times). For DNA precipitation, 1\/10 volume of 5 M NaCl was added to the purified aqueous phase and carefully mixed by inversion. Then, one volume of Isopropanol, at room temperature (RT), was added to the solution and gently mixed in. After a few inversions, the solution was centrifuged immediately for 8 min at 4799 g, to prevent the precipitation of contaminants. The supernatant was removed, and the pellet was washed 2 times with Ethanol. For each washing step, 3 ml of 70% Ethanol were added to the pellet, and the solution was swirled gently. Then, the tube was centrifuged for 8 min at 4799 g and the supernatant carefully decanted. After the second washing, the tube containing the pellet was inverted on a Kim-wipe and air-dried for around 15 min at RT. Finally, 100 \u03bcl of 10 mM Tris, pH 8, were added to the translucent pellet, and the DNA was resuspended over night at 4\u00b0C<\/span><\/div><br\/><br\/><div class = \"text-block\"><span style = \"vertical-align:sub;\">Healey, A., A. Furtado, T. Cooper and R. J. Henry, 2014 Protocol: a simple method for extracting next-generation sequencing quality genomic DNA from recalcitrant plant species. Plant Methods 10<\/span><span style = \"vertical-align:sub;font-weight:bold;\">:<\/span><span style = \"vertical-align:sub;\"> 21.<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#417505","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212507,"guid":"C7B3FC55A953405687FAAFAAF25A93DF","previous_id":1212506,"previous_guid":"2BE6F80E7DA749C8BB87ACE358B43BD3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"7EC6AA75FA9C48DB9DD78B32791E24C5","order_id":1,"type_id":6,"title":"Section","source":{"title":"PacBio sequencing"}},{"id":1054724,"guid":"0CBB22C00A6A44399F90F9BE5B43B5E1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">DNA was concentrated to 200-250 ng\/\u03bcl using AMPure PB beads (Pacific Biosciences) at the Ramaciotti Centre for Genomics so that it was suitable for library preparation, where the aim was for DNA fragments of 20-50 Kb. <\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">The gDNA fragments were sequenced using 2 PacBio Sequel SMRT cells <\/li><\/ul><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212508,"guid":"25F0C3D758C84D558A2E45B776F20DD1","previous_id":1212507,"previous_guid":"C7B3FC55A953405687FAAFAAF25A93DF","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"075F4B62144044988D5DC67526884AE8","order_id":1,"type_id":6,"title":"Section","source":{"title":"PacBio quality controls and read filtering"}},{"id":1054724,"guid":"4176520A4BF141E0BC790CF1EDB65C3D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><ol style = \"list-style-type: decimal;\"><\/ol><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">fastqc [-t threads] [-o output dir] PacBio_raw_reads.fq<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">2. Reads were mapped to the <\/div><div class = \"text-block\"><a href=\"https:\/\/www.ncbi.nlm.nih.gov\/nuccore\/MG925369\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">reference sequence of the E. grandis chloroplast (GenBank accession MG925369.1)<\/span><\/a><\/div><div class = \"text-block\"> using minimap2 v2.17-r941 (RRID:SCR_018550). Reads aligning with more than 80% of their length were filtered out and the remaining reads were used for the nuclear genome assembly. <\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#For alignment to a circular sequence, duplicate E. grandis chloroplast and fuse ends of dupliacted sequence together<\/div><br\/><div class = \"text-block\">cat chloroplast.fa chloroplast.fa > chloroplast_duplicated.fa<\/div><br\/><div class = \"text-block\">bbmap\/fuse.sh in=chloroplast_duplicated.fa out=chloroplast_fusedDuplicate.fa pad=0<\/div><br\/><div class = \"text-block\">#Minimap alignment<\/div><div class = \"text-block\">minimap2 -x map-pb [-t threads] chloroplast_fusedDuplicate.fa PacBio_raw_reads.fa > output.paf<\/div><br\/><div class = \"text-block\">#Identify reads that aligned with at least 80% of their length <\/div><div class = \"text-block\">awk '{if ((P=$11\/$2*100) >= 80) {print P\"\\t\"$_}}' output.paf > chloro80.txt<\/div><br\/><div class = \"text-block\">#Filter PacBio reads<\/div><div class = \"text-block\">bbmap\/filterbyname.sh in=PacBio_raw_reads.fa out=PacBio_filtered_for_assembly.fa names=chloro80_IDs.txt include=f<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212509,"guid":"5573E559DEED4202870361A046A12B83","previous_id":1212508,"previous_guid":"25F0C3D758C84D558A2E45B776F20DD1","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"64BDB710A46F48B0BA61EE40BF5A2FF5","order_id":1,"type_id":6,"title":"Section","source":{"title":"Genome assembly"}},{"id":1054724,"guid":"CFF11E8C51BE4ABDAF5D763ACFDB6741","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Genome assembly with the MaSuRCA v3.4.0 (RRID:SCR_010691) hybrid assembler using long-reads and Illumina short-reads. The available short paired-end reads from the same genotype (Calvert<\/span><span style = \"font-style:italic;\"> et al.<\/span><span> 2018) were incorporated into the assembly. <\/span><\/div><br\/><div class = \"text-block\"><span style = \"vertical-align:sub;\">Calvert J, Baten A, Butler J, Barkla B, Shepherd M. Terpene synthase genes in Melaleuca alternifolia: comparative analysis of lineage-specific subfamily variation within Myrtaceae. Plant Syst Evol. 2018;304(1):111-21<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212510,"guid":"19A77266C1FB46DEA45BE94B533156C7","previous_id":1212509,"previous_guid":"5573E559DEED4202870361A046A12B83","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"B2EDB901D37247FEA9DBF1AA56384871","order_id":1,"type_id":6,"title":"Section","source":{"title":"Genome assembly"}},{"id":1054724,"guid":"16831192D40D4342AD00BB25FE76CE4C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Prepare short-read libraries<\/span><\/div><div class = \"text-block\">Prior to assembly, BBTools v38.50 (RRID:SCR_016968) was used to filter Illumina reads for sequences of at least 75 bp length, and duplicate reads were removed using FastUniq (RRID:SCR_000682). Four libraries were available, with insert sizes of 350 bp, 550 bp, 300 bp, and 700 bp, respectively. <\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">fastuniq -i file_list -o Illumina1_uniq.fq -p Illumina2_uniq.fq<\/div><br\/><div class = \"text-block\">bbmap\/bbduk.sh in1=Illumina1_uniq.fq in2=Illumina2_uniq.fq out1=<out1> out2=<out2> minlength=75 ordered=t<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212511,"guid":"E3C7827C1324449F8C84F4F4D9908580","previous_id":1212510,"previous_guid":"19A77266C1FB46DEA45BE94B533156C7","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8A14F721DDB542ABA404D0A8AB2E47B3","order_id":1,"type_id":6,"title":"Section","source":{"title":"Genome assembly"}},{"id":1054724,"guid":"0C7265880D4848348033B50B2A394ED9","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">MaSuRCA v3.4.0 genome assembly<\/span><span>, following the instructions on <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alekseyzimin\/masurca\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">the MaSuRCA GitHub<\/span><\/a><\/div><div class = \"text-block\">. <\/div><br\/><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#Parameters used in configuration file<\/div><div class = \"text-block\">DATA<\/div><div class = \"text-block\">PE= pA 350 52 Illumina_A_1.fq Illumina_A_2.fq<\/div><div class = \"text-block\">PE= pB 550 82 Illumina_B_1.fq Illumina_B_2.fq<\/div><div class = \"text-block\">PE= pC 300 45 Illumina_C_1.fq Illumina_C_2.fq<\/div><div class = \"text-block\">PE= pD 700 105 Illumina_D_1.fq Illumina_D_2.fq<\/div><br\/><div class = \"text-block\">PACBIO=PacBio_filtered_for_assembly.fa<\/div><div class = \"text-block\">END<\/div><br\/><div class = \"text-block\">PARAMETERS<\/div><div class = \"text-block\">GRAPH_KMER_SIZE = auto<\/div><div class = \"text-block\">USE_LINKING_MATES = 0<\/div><div class = \"text-block\">USE_GRID=0<\/div><div class = \"text-block\">LHE_COVERAGE=30<\/div><div class = \"text-block\">MEGA_READS_ONE_PASS=0<\/div><div class = \"text-block\">CA_PARAMETERS =  cgwErrorRate=0.15<\/div><div class = \"text-block\">CLOSE_GAPS=1<\/div><div class = \"text-block\">NUM_THREADS = 14<\/div><div class = \"text-block\">JF_SIZE = 14200000000<\/div><div class = \"text-block\">FLYE_ASSEMBLY=0<\/div><div class = \"text-block\">END<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212512,"guid":"9AFF6AAE6B344E9E84DCF65AB926B9A2","previous_id":1212511,"previous_guid":"E3C7827C1324449F8C84F4F4D9908580","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"30F5842D68C9476A9C98EEF6FE168F28","order_id":1,"type_id":6,"title":"Section","source":{"title":"Assembly quality controls and filtering"}},{"id":1054724,"guid":"B1E63FFCEAE2448393D1B3CFEFAFEC45","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The genome assembly was filtered to remove contaminated scaffolds before calculating final assembly statistics.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212513,"guid":"AFBF3343FE7E44489602AEBDF8D6D059","previous_id":1212512,"previous_guid":"9AFF6AAE6B344E9E84DCF65AB926B9A2","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"FCE6F229FCF54ED798F440BA312E621E","order_id":1,"type_id":6,"title":"Section","source":{"title":"Assembly quality controls and filtering"}},{"id":1054724,"guid":"EE2DB77E93414AFA95474D5FC8125E2B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Assess quality of assembly<\/span><\/div><div class = \"text-block\">1. Quality control with Quast v5.0.2 (RRID:SCR_001228) <\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">quast-5.0.2\/quast.py -o <out_dir>  [-t threads]  --eukaryote --large --min-contig 0 --est-ref-size 356970000 --labels MaSuRCA assembly.fasta<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">2. Quality control with BUSCO (RRID:SCR_015008) <\/div><div class = \"text-block\"><a href=\"https:\/\/usegalaxy.org.au\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Galaxy<\/span><\/a><\/div><div class = \"text-block\"> version 4.1.2, eudicot-odb10 database, mode genome<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212514,"guid":"4BA7D395FFBE4019A76275A731734474","previous_id":1212513,"previous_guid":"AFBF3343FE7E44489602AEBDF8D6D059","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"9F39490E8A8C4377A04286A42D3D189C","order_id":1,"type_id":6,"title":"Section","source":{"title":"Assembly quality controls and filtering"}},{"id":1054724,"guid":"E0BF86A109FA4AC09A1BE63813AC06D9","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Removal of contaminated scaffolds<\/span><\/div><div class = \"text-block\">Contamination identification and filtering with BlobTools v1.1.1 (RRID:SCR_017618). The NCBI nucleotide (nt) database (downloaded 07\/2020) was used as reference for BLASTn v2.9.0+ (RRID:SCR_001598), while the UniProt reference proteomes (release 05\/2020) were input for Diamond blastx v0.9.24. The required coverage files were created with minimap2 and SAMtools v1.9 (RRID:SCR_002105)<\/div><br\/><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">blastn -query assembly.fasta -db <ncbi_nt> -out blast.out.tab [-num_threads] -outfmt '6 qseqid staxids bitscore std' -max_hsps 1 -evalue 1e-25 -max_target_seqs 10<\/div><br\/><div class = \"text-block\">blastx --query assembly.fasta --db uniprot_DB_proteomes_2020_05\/reference_proteomes.dmnd --outfmt 6 qseqid staxids bitscore qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle --sensitive --max-target-seqs 1 --evalue 1e-25 [--threads] --out blastx.out.tab<\/div><br\/><div class = \"text-block\">minimap2 -ax map-pb [-t threads] assembly.fasta PacBio_filtered_for_assembly.fa > coverage.sam<\/div><br\/><div class = \"text-block\">#minimap2 alignment was also repeated for the Illumina read libraries, using '-ax sr' instead of '-ax map-pb' <\/div><br\/><div class = \"text-block\">#sort and index coverage file<\/div><div class = \"text-block\">samtools view -h -b [-@ threads] coverage.sam | samtools sort [-@ threads] > coverage.sorted.bam<\/div><br\/><div class = \"text-block\">#Run Blobtools <\/div><div class = \"text-block\">blobtools\/blobtools create -i assembly.fasta -t blast.out.tab -t blastx.out.tab -b PacBio_coverage.sorted.bam -b IlluminaA_coverage.sorted.bam -b IlluminaB_coverage.sorted.bam -b IlluminaC_coverage.sorted.bam -b IlluminaD_coverage.sorted.bam -x bestsumorder -o <out_dir> --db blobtools\/data\/nodesDB.txt<\/div><br\/><div class = \"text-block\">blobtools\/blobtools view -i output_blobDB.json -x bestsumorder<\/div><br\/><div class = \"text-block\">#Based on Blobtools output, created text file with all scaffolds that were identified as contamination (hits to viruses, proteobacteria, basidiomycota, ascomycota), used this text file to remove contaminated scaffolds from assembly<\/div><br\/><div class = \"text-block\">bbmap\/filterbyname.sh in=assembly.fasta out=assembly_removed_contam.fasta names=contaminated_scaffolds.list.txt include=f<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212515,"guid":"2C57E2976A19461EA597E9A468D6A42B","previous_id":1212514,"previous_guid":"4BA7D395FFBE4019A76275A731734474","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"97F8992659D541F08C7FC85887F2FD2B","order_id":1,"type_id":6,"title":"Section","source":{"title":"Assembly quality controls and filtering"}},{"id":1054724,"guid":"ECEC7E8C4ACA41A9AC3252D58E957FA9","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Repeat quality controls<\/span><span> with Quast v5.0.2 (RRID:SCR_001228) (see command in step 5.1, with filtered assembly as input) and BUSCO (RRID:SCR_015008) <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/usegalaxy.org.au\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Galaxy<\/span><\/a><\/div><div class = \"text-block\"> version 4.1.2, eudicot-odb10 database, mode genome<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212516,"guid":"9A47597681EE4786B7B87B101F434BEF","previous_id":1212515,"previous_guid":"2C57E2976A19461EA597E9A468D6A42B","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D2C11D3BBB1140ADAC0A8673E6672E65","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction"}},{"id":1054724,"guid":"ADA9573C5EDF479F9CC29A39DE3C4879","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The Fgenesh++ v7.2.2 pipeline (RRID:SCR_018928) was used to predict genes in the assembled scaffolds.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212517,"guid":"EFE8C3EA3127466FB40FEAC3CB74855A","previous_id":1212516,"previous_guid":"9A47597681EE4786B7B87B101F434BEF","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"ACADE1F885B3434691C1ADA8E2688676","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction"}},{"id":1054724,"guid":"150B7F5E76CA42A5A6251183BBC2C9BF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Preparation of RNAseq spliced reads<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">M. alternifolia<\/span><span> RNAseq data from three other individual trees of the same chemotype (BioProject <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/www.ncbi.nlm.nih.gov\/bioproject\/388506\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">PRJNA388506<\/span><\/a><\/div><div class = \"text-block\">; SRR5630605, SRR5630611, SRR5630622) were downloaded and converted to fastq format with the NCBI SRA toolkit. They were subjected to quality controls using FastQC (RRID:SCR_014583) and trimming with Flexbar (RRID:SCR_013001).<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#Identify adapter sequences in each read library<\/div><div class = \"text-block\">bbmap\/bbmerge.sh in1=RNAseq_1.fastq in2=RNAseq_2.fastq outa=adapters.fasta<\/div><br\/><div class = \"text-block\">#Trim reads and remove identified adapters<\/div><div class = \"text-block\">flexbar -r RNAseq_1.fastq -p RNAseq_2.fastq -a adapters.fasta --adapter-trim-end RIGHT -adapter-error-rate 0.1 --adapter-min-overlap 6 -ap ON --min-read-length 40 --max-uncalled 1 -q TAIL -qf i1.8 -qt 30 -pre-trim-left 10 -t RNAseq_trim<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">2. align trimmed RNAseq reads to the genome using ReadsMap (v1.10.1)<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#Assembled scaffolds need to be in single fasta files => one fasta file per sequence with all scaffold file names summarised in a list. In this case, scaffolds were split using the fgenesh++ pipeline, see step 6.2 below (split_multi_fasta.pl)<\/div><br\/><div class = \"text-block\">#RNAseq read libraries need to be in one file<\/div><div class = \"text-block\">cat SRR5630605_trim_paired.fasta SRR5630611_trim_paired.fasta SRR5630622_trim_paired.fasta > all_RNAseq_trim_paired.fasta<\/div><br\/><div class = \"text-block\">#Run ReadsMap<\/div><div class = \"text-block\">Readsmap_v1.10.1\/bin\/runReadsMap.pl --chr_list:scaffold_list.txt --reads:all_RNAseq_trim_paired.fasta --paired --max_indel:3 --spliced --wrkpath:<path> --peAv:330 --peSd:150 --sites<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212518,"guid":"6D67277ABE0E414C8A6C6378422EBC12","previous_id":1212517,"previous_guid":"EFE8C3EA3127466FB40FEAC3CB74855A","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"669DD6FB71D64C7EAB66B0026804B494","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction"}},{"id":1054724,"guid":"4D2488D2B62C4FA2BA78D9C5D6BF4195","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Fgenesh++ gene prediction<\/span><\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#a non-redundant plant protein fasta file was provided by SoftBerry, create database and index<\/div><br\/><div class = \"text-block\">makeblastdb -in nr_plants -dbtype prot -max_file_sz 2GB<\/div><br\/><div class = \"text-block\">FGENESHPIPE_7.2.2-x86_64-linux\/FGENESHPIPE\/scripts\/make_nr_indexed.pl -f nr_plants -i nr_plants.ind<\/div><br\/><div class = \"text-block\">#create split scaffolds lists for parallel execution of FGENESH<\/div><br\/><div class = \"text-block\">mkdir split_scaffolds<\/div><div class = \"text-block\">FGENESHPIPE_7.2.2-x86_64-linux\/SCRIPTS\/split_multi_fasta.pl assembly_removed_contam.fasta -name seq_id -dir .\/split_scaffolds\/ -mklist scaffolds.list<\/div><br\/><div class = \"text-block\">FGENESHPIPE_7.2.2-x86_64-linux\/SCRIPTS\/scripts_split_seq_list\/make_sorted_seq_list.pl scaffolds.list scaffolds.list.sorted scaffolds_len.sorted<\/div><br\/><div class = \"text-block\">mkdir sequence_lists <\/div><div class = \"text-block\">cd sequence_lists<\/div><div class = \"text-block\">FGENESHPIPE_7.2.2-x86_64-linux\/SCRIPTS\/scripts_split_seq_list\/split_list_N_size.pl ..\/scaffolds_len.sorted -n <threads> -name split.list<\/div><br\/><div class = \"text-block\">#create command list file<\/div><br\/><div class = \"text-block\">for i in split_[0-9]*.list; do echo \"run_pipe.pl \/path\/fgenesh.cfg> -l path\/sequence_lists\/${i} -d <output_path>\" >> commands.txt; done<\/div><br\/><div class = \"text-block\">nohup parallel < commmands.txt 2>&1&<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">The following parameters were provided in the configuration file:<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\"># Organism-specific and pipeline parameters<\/div><br\/><div class = \"text-block\">GENE_PARAM = Eucalyptus_grandis.mpar.dat       # gene prediction parameters<\/div><div class = \"text-block\">PIPE_PARAM = FGENESHPIPE\/non_mamm.par          # location of parameters files<\/div><br\/><div class = \"text-block\">MAP_mRNAs = 0<\/div><div class = \"text-block\">MAP_ESTS = 0<\/div><br\/><div class = \"text-block\"># Predict genes with GC donor splice sites or not<\/div><div class = \"text-block\">PREDICT_GC = 1<\/div><br\/><div class = \"text-block\"># Using reads<\/div><div class = \"text-block\">USE_READS = 1                  # use reads info to improve gene models<\/div><div class = \"text-block\">DIR_SITES = sites_files        #Created with ReadsMap for each single scaffold<\/div><br\/><div class = \"text-block\"># Using known proteins for prediction <\/div><div class = \"text-block\">USE_PROTEINS = 1                              # 0 - no, 1 -yes<\/div><div class = \"text-block\">PROG_PROT    = 1                              # 1 - use prot_map, 2 - use blast<\/div><div class = \"text-block\">NUM_THREADS  = 1                              # number of processors for 'prot_map' or 'blast'<\/div><div class = \"text-block\">PROTEIN_DB   = nr_plants                      # protein DB<\/div><div class = \"text-block\">PROTEIN_DB_INDEX   = nr_plants.ind            # protein DB index file<\/div><div class = \"text-block\">PROTEIN_DB_TAG   = NR                         # short name for protein db<\/div><div class = \"text-block\">BLAST_AI_PROTEINS = 1           # find homologs for ab initio predicted genes (0 - no, 1 - yes)<\/div><br\/><div class = \"text-block\"># Predicting genes in long introns of other genes<\/div><div class = \"text-block\">INTRONIC_GENES = 0<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212519,"guid":"02A1DBCEBDB3487F96A612E2AA53802F","previous_id":1212518,"previous_guid":"6D67277ABE0E414C8A6C6378422EBC12","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BDE304BD81DD4AA39DD7E7F562FC3A7A","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction quality controls and filtering"}},{"id":1054724,"guid":"AC9EB99FD65E4765B0810B3E839A3643","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Predicted genes were filtered to remove incomplete gene models or genes coinciding with repeat regions. Quality controls were undertaken with InterProScan analysis and BUSCO assessment. <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#4a90e2","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212520,"guid":"D08E6193E0DF4AFF82D9D7763F51349D","previous_id":1212519,"previous_guid":"02A1DBCEBDB3487F96A612E2AA53802F","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C6AE8532D50E44B18C7D0471F44E7D01","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction quality controls and filtering"}},{"id":1054724,"guid":"06BC72F1E02748EA8AE67FDE9B95E671","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Removal of incomplete gene models<\/span><\/div><div class = \"text-block\">The fgenesh++ output already provided information about genes without start- or stop-codon (listed as \"5'incomplete\" or \"3'incomplete\"). These genes were filtered out.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#4a90e2","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212521,"guid":"87E611651DE94C90A641BCD739FD0191","previous_id":1212520,"previous_guid":"D08E6193E0DF4AFF82D9D7763F51349D","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8FC1DE3CA26049DF8D43AC78E01963EB","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction quality controls and filtering"}},{"id":1054724,"guid":"088243BBAC8046E3B6A18329E0390EBD","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Quality control with InterProScan<\/span><span> (<\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/usegalaxy.eu\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Galaxy<\/span><\/a><\/div><div class = \"text-block\"> version 5.0.0, RRID:SCR_005829). A similarity-based approach was used to screen predicted proteins for sequences listed in the PfamA database (RRID:SCR_004726). Furthermore, using the <\/div><div class = \"text-block\"><a href=\"https:\/\/pfam.xfam.org\/search#tabview=tab4\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">taxonomy search of the Pfam database<\/span><\/a><\/div><div class = \"text-block\">, a list of protein families known to be present in \"eudicotyledons\" was created to assess which InterProScan results contained those eudicot protein families. <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#4a90e2","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212522,"guid":"0F6172ED12CA4ADABBADDC1F628A4392","previous_id":1212521,"previous_guid":"87E611651DE94C90A641BCD739FD0191","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3F801B68F2CA4EDB854F381F7AF8E5F4","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction quality controls and filtering"}},{"id":1054724,"guid":"2E7849547E3F47F78E0DD326F9CBA11C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Filtering based on repeat content<\/span><\/div><br\/><div class = \"text-block\">1. Transposable elements (TE) in the assembled genome were first identified with RepeatModeler v2.0.1 (RRID:SCR_015027), RepeatMasker v4.1.0 (RRID:SCR_012954) and the Dfam 3.1 database:<\/div><br\/><div class = \"text-block\">Downloaded this <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/Dfam-consortium\/TETools\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Docker image<\/span><\/a><\/div><div class = \"text-block\"> and followed commands from <\/div><div class = \"text-block\"><a href=\"https:\/\/bioinformaticsworkbook.org\/dataAnalysis\/ComparativeGenomics\/RepeatModeler_RepeatMasker.html#gsc.tab=0\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">these instructions<\/span><\/a><\/div><div class = \"text-block\">.<\/div><br\/><div class = \"text-block\">The repeat report was created with the following command:<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">RepeatMasker {-pa 16} -gff -lib consensi.fa.classified <yourmultifasta_file> <\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">2. The RepeatMasker output was filtered to only include  DNA-transposon or retrotransposon related repeats (based on the repeat class\/family reported in the tabular output).<\/div><br\/><div class = \"text-block\">3. Tabular output containing the repeat information and coordinates in the genome was converted to BED format to search for overlaps between gene predictions and repeats using Bedtools intersect v2.29.2 (RRID:SCR_006646).<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">awk 'NR > 3 {print($5\"\\t\"$6-1\"\\t\"$7\"\\t\"$10\"\\t\"$11)}' transposable_elements.out > transposable_elements.bed<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">4. Genes containing a full-length transposon or having at least 20% of their sequence overlapping with repeat regions were determined with Bedtools intersect v2.29.2 (RRID:SCR_006646).<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">bedtools intersect -a complete_genes.gff3 -b transposable_elements.bed -f 0.2 -F 1.0 -e -wo > TE-overlaps.tab<\/div><\/div><\/code><\/pre><\/div><br\/><div class = \"text-block\">5. Using the InterProScan output, it was investigated which of the genes overlapping with repeats contain non-TE releated PfamA domains. <\/div><div class = \"text-block\">A list of transposon-related Pfam domains was created with the <\/div><div class = \"text-block\"><a href=\"https:\/\/pfam.xfam.org\/search#tabview=tab2\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">keyword search<\/span><\/a><\/div><div class = \"text-block\"> of the Pfam database, using the keyword \"transposon\". Genes were retained, if they contained Pfam domains not associated with transposons or viruses.<\/div><br\/><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">#Filter InterProScan output for genes overlapping with repeats<\/div><br\/><div class = \"text-block\">awk 'FNR==NR {lines[$9]; next} $1 in lines' TE-overlaps.tab Interproscan_output.tab |  awk '$4 == \"Pfam\"' > Pfam_for_genes_with_TE-overlaps.tab<\/div><br\/><div class = \"text-block\">#Check which identified genes contain Pfam domains not related to TE or virus domains<\/div><br\/><div class = \"text-block\">awk 'FNR==NR {lines[$1]; next} ! ($5 in lines)' Pfam_transposon.list TE-overlaps.tab | grep -E -v -i 'Viral movement protein|Herpesviridae' | cut -f 1 | sort -u > Genes_with_Pfam_domains_to-keep.list<\/div><br\/><div class = \"text-block\">#Filter file listing genes with TE-overlaps <\/div><br\/><div class = \"text-block\">cut -f 9 TE-overlaps.tab | sort -u  > TE-overlaps.list <\/div><br\/><div class = \"text-block\">awk 'FNR==NR {lines[$1]; next} ! ($1 in lines)' Genes_with_Pfam_domains_to_keep.list TE-overlaps.list > TE-overlaps_filtered.list<\/div><br\/><div class = \"text-block\">#Filter predicted CDS and protein sequences<\/div><div class = \"text-block\">bbmap\/filterbyname.sh  in=<CDS_or_protein_fasta> out=<filtered_fasta>  names=TE-overlaps_filtered.list  include=f<\/div><\/div><\/code><\/pre><\/div><br\/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#4a90e2","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1212523,"guid":"70A8AAA5A3EA4C178A414FF3CA23663A","previous_id":1212522,"previous_guid":"0F6172ED12CA4ADABBADDC1F628A4392","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"11C64BC1C0BF4F49866181680D12A431","order_id":1,"type_id":6,"title":"Section","source":{"title":"Gene prediction quality controls and filtering"}},{"id":1054724,"guid":"D1A5D4DF39604A25BBE6A42656D3E8D8","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Quality control<\/span><span> of the filtered protein sequences with BUSCO (RRID:SCR_015008) <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/usegalaxy.org.au\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Galaxy<\/span><\/a><\/div><div class = \"text-block\"> version 4.1.2, eudicot-odb10 database, mode proteome<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#4a90e2","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>This protocol provides additional information to be read together with the publication about the genome assembly of <\/span><span style = \"font-style:italic;\">Melaleuca alternifolia<\/span><span> (tea tree). This is an extension to the methods listed in the manuscript, especially regarding the computational methods and specific commands that were used for genome assembly and annotation, as well as various quality control and filtering steps. <\/span><\/div><\/div>","changed_on":1628557691}