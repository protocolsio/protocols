{"id":38026,"title":"Getting started with VirSorter2 ","title_html":"<p>Getting started with VirSorter2 <\/p>","image":{"source":"https:\/\/www.protocols.io\/img\/default_protocol.png","placeholder":"https:\/\/www.protocols.io\/img\/default_protocol.png"},"doi":null,"doi_status":0,"uri":"getting-started-with-virsorter2-bhdij24e","type_id":1,"template_id":5,"published_on":1591802034,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"created_on":1591795443,"categories":null,"creator":{"name":"Jiarong Guo","affiliation":null,"affiliations":[{"affiliation":null,"url":null,"is_default":1}],"username":"jiarong-guo","link":null,"image":{"source":"\/img\/avatars\/002.png","placeholder":"\/img\/avatars\/002.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"public":1,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":5,"authors":[{"name":"Jiarong Guo","affiliation":"Ohio State University, Columbus","affiliations":[],"username":"jiarong-guo","link":null,"image":{"source":"\/img\/avatars\/002.png","placeholder":"\/img\/avatars\/002.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/getting-started-with-virsorter2-bhdij24e","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"A1470990AB1D11EA9D92FFEF4EF5F618","state_version_id":1101,"steps":[{"id":958423,"guid":"AFE65600AB2111EA9D92FFEF4EF5F618","previous_id":958426,"previous_guid":"B2388030AB1D11EA9D92FFEF4EF5F618","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"FE8DEB054A24456EA4B338E53D86A721","order_id":1,"type_id":6,"title":"Section","source":{"title":"Download database and dependencies"}},{"id":1054724,"guid":"03FCE8BFDC0F465095178023A9F5883B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Then download all databases and install dependencies (takes 10+ mins, but this only need to be done once). The following command line downloads databases and dependencies to \"db\" directory, and its location is recorded in the tool configuration as a default, so you do not need to type \"--db-dir\" of other VirSorter2 subcommands.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">virsorter setup -d db -j 4<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":958426,"guid":"B2388030AB1D11EA9D92FFEF4EF5F618","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"11E66567171542D9BF2C6A7FCD63E476","order_id":1,"type_id":6,"title":"Section","source":{"title":"Installation"}},{"id":1054724,"guid":"2A7D0A7934164B77872E8FB33925D714","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Skip this step if you already have VirSorter2 installed. You can find out by type in the following command in terminal:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">virsorter -h<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\">If you see message like below, then you have VirSorter2 installed already.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">Usage: virsorter [OPTIONS] COMMAND [ARGS]...<\/div><div class = \"text-block\">  virsorter - workflow for identifying viral sequences<\/div><div class = \"text-block\">Options:<\/div><div class = \"text-block\">  --version   Show the version and exit.<\/div><div class = \"text-block\">  -h, --help  Show this message and exit.<\/div><div class = \"text-block\">Commands:<\/div><div class = \"text-block\">  run            run virsorter main workflow<\/div><div class = \"text-block\">  setup          download reference files (~10GB) and install dependencies<\/div><div class = \"text-block\">  train-feature  subcommand for training feature of customized classifier<\/div><div class = \"text-block\">  train-model    subcommand for training customized classifier model<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\">A message like this means VirSorter2 is not installed.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">-bash: virsorter: command not found<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Option 1:<\/span><\/div><div class = \"text-block\">Conda is the easiest way to install VirSorter2. Conda can install by following <\/div><div class = \"text-block\"><a href=\"https:\/\/docs.conda.io\/projects\/conda\/en\/latest\/user-guide\/install\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">this link<\/span><\/a><\/div><div class = \"text-block\">.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">conda intall virsorter<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Option 2:<\/span><\/div><div class = \"text-block\">To install the development version (most updated but may not work all the time):<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">conda create -n vs2 python=3 scikit-learn=0.22.1 imbalanced-learn pandas seaborn hmmer prodigal screed ncbi-genome-download ruamel.yaml snakemake=5.16.0 click <\/div><div class = \"text-block\">conda activate vs2 <\/div><div class = \"text-block\">git clone https:\/\/github.com\/jiarong\/VirSorter2.git <\/div><div class = \"text-block\">cd VirSorter2 <\/div><div class = \"text-block\">pip install -e .<\/div><\/div><\/code><\/pre><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":958428,"guid":"B10A6E30AB2211EA9D92FFEF4EF5F618","previous_id":958423,"previous_guid":"AFE65600AB2111EA9D92FFEF4EF5F618","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"DCFF79088571477B9F165DC0B558C437","order_id":1,"type_id":6,"title":"Section","source":{"title":"Quick run"}},{"id":1054724,"guid":"381D3873524D4F8D80863DC0013988C1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">To run viral sequence identification:<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\"># fetch testing data<\/div><div class = \"text-block\">wget -O test.fa https:\/\/raw.githubusercontent.com\/jiarong\/VirSorter2\/master\/test\/8seq.fa <\/div><div class = \"text-block\"># run classification with 4 threads (-j) and test-out as output diretory (-w) virsorter run -w test.out -i test.fa -j 4 <\/div><div class = \"text-block\"># check output<\/div><div class = \"text-block\">ls test.out<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\">Due to large HMM database that VirSorter2 uses, this small dataset takes a few mins to finish. In the output directory (test.out), three files are useful:<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">final-viral-combined.fa:      identified viral sequences<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">final-viral-score.tsv:            table with score of each viral sequences across groups<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">final-viral-boundary.tsv:     table with boundary information<\/li><\/ul><\/div><div class = \"text-block\">More details of output files can be found in Section \"Detailed description on output files\" below.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">NOTE<\/span><\/div><div class = \"text-block\">Note that suffix \"||full\" or \"||{i}index_partial\" have been added to original sequence names to differentiate sub-sequences in case of multiple viral subsequences found in one contig (\"{i}\" can be numbers starting from 0 to max number of viral fragments found in that contig).<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":958430,"guid":"CE1D6760AB2311EA9D92FFEF4EF5F618","previous_id":958428,"previous_guid":"B10A6E30AB2211EA9D92FFEF4EF5F618","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3551A4D54EE7401A86D319E560993247","order_id":1,"type_id":6,"title":"Section","source":{"title":"More options"}},{"id":1054724,"guid":"B6CFE54D17F84362933B26FAD065C9EC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Choosing viral groups (\"--include-groups\")<\/span><\/div><div class = \"text-block\"><span>VirSorter2 finds all viral groups currently included (ssDNAphage, NCLDV , RNA, ssDNA virus, and<\/span><span style = \"font-style:italic;\">lavidavirida<\/span><span>) by default. You can use--include-groupsto chose specific groups:<\/span><\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">rm -rf test.out <\/div><div class = \"text-block\">virsorter run -w test.out -i test.fa --include-groups \"dsDNAphage,ssDNA\" -j 4<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Re-run with different score cutoff (\"--min-score\")<\/span><\/div><div class = \"text-block\">VirSorter2 takes one positional argument, \"all\" or \"classify\". The default is all, which means running the whole pipeline, including 1) preprocessing, 2) annotation (feature extraction), and 3) classification. The main computational bottleneck is the annotation step, taking about 95% of CPU time. In case you just want to re-run with different score cutoff (--min-score), the \"classify\" argument can skip the annotation steps, and only re-run classify step.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">virsorter run -w test.out -i test.fa --include-groups \"dsDNAphage,ssDNA\" -j 4 --min-score 0.8 classify<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Speed up a run (--provirus-off)<\/span><\/div><div class = \"text-block\">In case you need to have some results quickly, there are two options: 1) turn off provirus step with \"--provirus-off\"; this reduces sensitivity on sequences that are only partially virus; 2) subsample ORFs (Open Reading Frame) from each sequence with \"--max-orf-per-seq\"; This option subsamples ORFs to a cutoff if a sequence has more ORFs than that. Note that this option is only availale when--provirus-offis used.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">rm -rf test.out <\/div><div class = \"text-block\">virsorter run -w test.out -i test.fa --provirus-off --max-orf-per-seq 20<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Other options<\/span><\/div><div class = \"text-block\">You can \"runvirsorter run -h\" to see all options. VirSorter2 is a wrapper around <\/div><div class = \"text-block\"><a href=\"https:\/\/snakemake.readthedocs.io\/en\/stable\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">snakemake<\/span><\/a><\/div><div class = \"text-block\">, a great pipeline management tool designed for reproducibility, and running on computer clusters. All snakemake options still works here. You just need to append those snakemake option to virsorter options (after the \"all\" or \"classify\" argument). For example, the \"--forceall\" snakemake option can be used to re-run the pipeline.<\/div><div class = \"text-block\"><pre><code><div class = \"text-blocks\"><div class = \"text-block\">virsorter run -w test.out -i test.fa --provirus-off --max-orf-per-seq 20 --forceall<\/div><\/div><\/code><\/pre><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">NOTE<\/span><span style = \"font-weight:bold;\">:<\/span><\/div><div class = \"text-block\">When you re-run any VirSorter2 command, it will pick up at the step (rule in snakemake term) where it stopped last time. It will do nothing if it suceeded last time. The \"--forceall\" option can be used to enforce the re-run.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":958432,"guid":"6BD19B60AB2511EA9D92FFEF4EF5F618","previous_id":958430,"previous_guid":"CE1D6760AB2311EA9D92FFEF4EF5F618","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4B9E3EF3FC9E40EE9E288C47499DFC58","order_id":1,"type_id":6,"title":"Section","source":{"title":"Detailed description on output files"}},{"id":1054724,"guid":"8F5F4762424549FFAC249F71F467141B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">1. \"final-viral-combined.fa\": <\/span><\/div><div class = \"text-block\">Identified viral sequences, including two types. Full sequences identified as viral (added with suffix \"||full\"); partial sequences identified as viral (added with suffix \"||{i}index_partial\"); here \"{i}\" can be numbers starting from 0 to max number of viral fragments found in that contig.<\/div><div class = \"text-block\">Headers of sequences looks likes:<\/div><div class = \"text-block\">>Caudo-circular||full    shape:circular||start:327||end:32076||group:dsDNAphage||score:0.993||hallmark:4<\/div><div class = \"text-block\">There is a some information in description filed, including: \"shape\", \"start\" and \"end\" position on contig of a viral sequence, best classifier (\"group\"), \"score\" from the classfier (ranging from 0 to 1, higher means more like to be viral), number of \"hallmark\" genes.j<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">NOTE<\/span><\/div><div class = \"text-block\">Note that classifiers of different viral groups are not exclusive from each other, and may have overlap in their target viral sequence space, which means this info should not be used as reliable classification. We limit the purpose of VirSorter2 to viral idenfication only.<\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><span style = \"font-weight:bold;\">2. \"final-viral-score.tsv\": <\/span><\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\">A tab delimited table on score of each viral sequences across groups.<\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><span style = \"font-weight:bold;\">3. \"final-viral-boundary.tsv\":<\/span><\/div><\/div><div class = \"text-block\"><div class = \"justify\" style = \"text-align:left\"><\/div><\/div><div class = \"text-block\">Only some of the columns in this file are useful:<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">seqname:  original sequence name<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_orf_index_start, trim_orf_index_end:  start and end ORF index on orignal sequence of identified viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_bp_start, trim_bp_end:  start and end position on orignal sequence of identified viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_pr:  score of final trimmed viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">partial:  full sequence as viral or partial sequence as viral; this is defined when a full sequence has score > score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_orf_index_start, trim_orf_index_end:  start and end ORF index on orignal sequence of identified viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_bp_start, trim_bp_end:  start and end position on orignal sequence of identified viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_pr:  score of final trimmed viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">partial:  full sequence as viral or partial sequence as viral; this is defined when a full sequence has score > score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_bp_start, trim_bp_end:  start and end position on orignal sequence of identified viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_pr:  score of final trimmed viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">partial:  full sequence as viral or partial sequence as viral; this is defined when a full sequence has score > score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">trim_pr:  score of final trimmed viral sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">partial:  full sequence as viral or partial sequence as viral; this is defined when a full sequence has score > score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">partial:  full sequence as viral or partial sequence as viral; this is defined when a full sequence has score > score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">pr_full:  score of the original sequence<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">hallmark_cnt:  hallmark gene count<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>group:  the classifier of viral group that gives high score; this should <\/span><span style = \"font-weight:bold;\">NOT <\/span><span>be used as reliable classification<\/span><\/li><\/ul><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><\/ul><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">NOTE<\/span><\/div><div class = \"text-block\">VirSorter2 tends overestimate the size of viral sequence during provirus extraction procedure in order to achieve better sensitity.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":null,"materials":[],"description":null,"changed_on":1591802034}