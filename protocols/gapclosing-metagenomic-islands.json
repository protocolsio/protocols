{"id":39648,"title":"Gapclosing metagenomic islands","title_html":"<p>Gapclosing metagenomic islands<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfh5dhjw.png","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfh5dhjw.png"},"doi":"dx.doi.org\/10.17504\/protocols.io.bix8kfrw","doi_status":2,"uri":"gapclosing-metagenomic-islands-bix8kfrw","type_id":1,"template_id":1,"published_on":1595531684,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"created_on":1595529917,"categories":null,"creator":{"name":"Chris Bellas","affiliation":"University of Innsbruck","affiliations":[{"affiliation":"University of Innsbruck","url":"","is_default":1}],"username":"chris-bellas","link":null,"image":{"source":"\/img\/avatars\/012.png","placeholder":"\/img\/avatars\/012.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"},{"id":5,"image":{"source":"\/img\/badges\/star.svg","placeholder":"\/img\/badges\/star.svg"},"name":"Early adopter"},{"id":6,"image":{"source":"\/img\/badges\/accelerator.svg","placeholder":"\/img\/badges\/accelerator.svg"},"name":"Science accelerator"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"public":1,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":8,"authors":[{"name":"Chris Bellas","affiliation":"University of Innsbruck","affiliations":[],"username":"chris-bellas","link":null,"image":{"source":"\/img\/avatars\/012.png","placeholder":"\/img\/avatars\/012.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/gapclosing-metagenomic-islands-bix8kfrw","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"861DA42D45004859A655D653566B0C4B","state_version_id":68,"steps":[{"id":987102,"guid":"F342023E92B9473785E25154CAE473DC","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1F85F82C255D4230BF230E1EE9C5B8F6","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"95F98D29CB204657A8B23F8CE5A5EA1B","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhzdhjw.png\" \/><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">1) Map metagenomic reads to virus reference contig<\/span><\/div><div class = \"text-block\">Starting with an assembled phage contig  (phage_reference_contig.fasta).  <\/div><div class = \"text-block\">i) Map trimmed, unassembled reads from a different metagenome (Query metagenome) to this reference using Bowtie2<\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Bowtie2 -I 0 -X 800 --no-unal --very-sensitive -1 Query_metagenome_R1.fastq -2 Querymetagenome_R2.fastq -S samfile.sam<\/span><\/div><div class = \"text-block\">( -I 0 and -X 800 refer to the min and max size of the paired end reads+insert before they are flagged as discordant. --no-unal keeps the files small and discards all reads that do not map to the contig. -1 and -2 are the forward [R1] and reverse [R2] reads from the metagenome)<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">1b) Import samfile into Geneious<\/span><\/div><div class = \"text-block\"><span>i) <\/span><span style = \"font-style:italic;\">File> Import> From file <samfile.sam><\/span><\/div><div class = \"text-block\">Metagenomic islands should be visible as gaps in the read mapping where reads possess <90% identity to the reference. The missing reads are present in the metagenome, we have to find them without a reference. <\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhwdhjw.png\" \/><\/div><div class = \"text-block\">ii) Generate a majority consensus sequence <\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Right click on the filename > Generate consensus sequence<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Settings: <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">0% Majority<\/span><span> (this selects the most frequently occurring base at a specific genome position)<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">If no coverage call: Ref<\/span><span> (the calls the reference genome through the MGI gaps)<\/span><\/div><div class = \"text-block\">Do not trim the sequence.<\/div><div class = \"text-block\"><span style = \"font-style:italic;\"><Consensus.fasta><\/span><span>  file will be generated for this metagenome. MGI gaps will be plugged with the reference genome temporarily.<\/span><\/div><div class = \"text-block\">iii) Export the consensus as a fasta file <\/div><div class = \"text-block\"><span style = \"font-style:italic;\">File > Export > Selected Documents<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\"><Consensus.fasta><\/span><span> is the exported fasta file.<\/span><\/div><\/div>"}},{"id":1054725,"guid":"B14CE0636829499AB27E06BDD2742F99","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhzdhjw.png\" \/><\/div>"}},{"id":1054726,"guid":"9A588C254B4343EB9A55447EF0C2C03D","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhwdhjw.png\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987103,"guid":"1E8E51913C2C4DD192BDF24512B4BF7C","previous_id":987102,"previous_guid":"F342023E92B9473785E25154CAE473DC","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4D92C810895B4AB6A990B5A89FC83951","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"9804AB752ABD4C62BDAD9F972DC433DF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Assemble the query metagenome <\/span><span style = \"font-weight:bold;font-style:italic;\"><Query_metagenome.fastq><\/span><\/div><div class = \"text-block\">Using SPAdes, CLC or another favorite assembler:<\/div><div class = \"text-block\">i) Assemble the metagenomic reads into contigs. <\/div><div class = \"text-block\">(This should allow large sections of the target genome to be assembled in the query metagenome. Many of these contigs should cross and include the MGI regions shown in Fig. 2. We next need to find them).<\/div><div class = \"text-block\"><span>Output:<\/span><span style = \"font-style:italic;\"> <Assembled_query.fasta><\/span><span> (Fasta contigs from the metagenomic assembly)<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987104,"guid":"93AD571E8D1E44209A8E4E11D6077229","previous_id":987103,"previous_guid":"1E8E51913C2C4DD192BDF24512B4BF7C","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D95E1C9395484A42B6E09BA16DCAF1B1","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"1E94D47BD4B94F6995516C8C49AA46F1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Locate assembled contigs that belong the target virus genome<\/span><\/div><div class = \"text-block\">Using blast we will find virus contigs which might belong to the target virus from Fig. 2. <\/div><div class = \"text-block\">i) Blast all metagenomic contigs against the virus consensus and pick matching reads.<\/div><div class = \"text-block\">We will only pick matching reads over 150bp. The following shell script can be copied and pasted into a file Phising.sh<\/div><div class = \"text-block\"><span>Use the command <\/span><span style = \"font-style:italic;\">.\/Phising.sh Consensus.fasta Assembled_query.fasta (replaces with your filenames)<\/span><\/div><div class = \"text-block\"><span>Use the following to make it executable:<\/span><span style = \"font-style:italic;\"> chmod +x Phising.sh <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Phising.sh<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Blasts denovo assembly (Assembled_query.fasta) against virus genome (Consensus.fasta) then picks all results >150bp as fasta files (E-value cut off 10-5).<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Usage .\/Phishing.sh <Consensus.fasta> <Assembled_query.fasta><\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">makeblastdb -dbtype nucl -in $1<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">blastn -query $2 -db  $1  -evalue 0.00001 -num_threads 4 -outfmt 6 -out  $2_blastn_$1<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Generate results list for matches<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">awk ' $4>=150  {print $1\"@\"}' $2_blastn_$1 >$2_blastn_$1_phishing_list<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Pick matching fasta entires from Assembled_query.fasta<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">tr '\\n' '@' <$2 | sed 's\/>\/\\n>\/g'| grep -f $2_blastn_$1_phishing_list| tr '@' '\\n' >$2_blastn_$1_phishes<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#Remove ambigous bases (N's) from matching contigs as they hinder future alignment <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">tr -d \"N\" <$2_blastn_$1_phishes >$2_blastn_$1_phishes_NoN.fasta<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">#*phishes_NoN.fasta is file of matching fasta records <\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987105,"guid":"86B0CB476BB24367A2B075CF1DC22CB7","previous_id":987104,"previous_guid":"93AD571E8D1E44209A8E4E11D6077229","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BE6FFF646EFA4F8E9E5E89B22849D076","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"1EDADE907A6F4F709F56769105086574","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Align assmbled contigs onto the virus reference genome<\/span><\/div><div class = \"text-block\"><span>i) Import <<\/span><span style = \"font-style:italic;\">*phishes_NoN.fast<\/span><span>a> into Geneious. <\/span><span style = \"font-style:italic;\">File > Import > From file<\/span><\/div><div class = \"text-block\"><span>ii) In Geneious, select both <\/span><span style = \"font-style:italic;\">Consensus.fasta<\/span><span> and <\/span><span style = \"font-style:italic;\">*phishes_NoN.fasta<\/span><span> then <\/span><span style = \"font-style:italic;\">click \"Map to Reference\"<\/span><span> and ensure Consensus.fasta is set as reference. <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Settings:<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Set Sensitivity to Custom Sensitivity<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Fine Tuning: None (fast \/ read mapping)<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">In the Advanced settings set: <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Allow gaps, Maximum Per Read: 50 %, <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Word Length: 10<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Maximum Mismatches Per Read: 50%<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Accurately map reads with errors to repeat regions: <Select yes><\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Map multiple best matches: Randomly<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Maximum Gap Size: 4000<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Index Word Length: 10<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Maximum Ambiguity: 16<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhxdhjw.png\" \/><\/div><\/div>"}},{"id":1054725,"guid":"51C8E154D7684546B2CBC3519E78EAFC","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhxdhjw.png\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987106,"guid":"0EE8DC27AB724F2FA3B4D5E55527A561","previous_id":987105,"previous_guid":"86B0CB476BB24367A2B075CF1DC22CB7","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0AB8DA6A58744C12B4025D19D5ECF7A2","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"A8CF0EC84C7A4791A8929DB90D9A2C3C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Generate majority consensus from resulting mapping file<\/span><\/div><div class = \"text-block\"><span>i) Geneious: <\/span><span style = \"font-style:italic;\">Right click on alignment > General consensus <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Settings:<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">0% Majority (Calls majority base for each position)<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">If no coverage call: Reference (calls reference genome if still no coverage)<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Do not trim sequence<\/span><\/div><div class = \"text-block\">This will generate the majority consensus (most frequently occurring base for each location in the genome) and cell the original reference if there is still no coverage.  <\/div><div class = \"text-block\"><span>Output <\/span><span style = \"font-style:italic;\"><working_virus_consensus.fasta><\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987107,"guid":"0179CC0C4926485E98360A844DDED067","previous_id":987106,"previous_guid":"0EE8DC27AB724F2FA3B4D5E55527A561","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"D32B40520C194E9D91F271572734E633","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"61649628E25842B9A5165D159CFD242E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Iteratively map unassembled reads back to <\/span><span style = \"font-weight:bold;font-style:italic;\">working_virus_consensus.fasta<\/span><span style = \"font-weight:bold;\"> to close any leftover gaps<\/span><\/div><div class = \"text-block\">i ) Import unassembled forward and reverse reads into Geneious <\/div><div class = \"text-block\"><span style = \"font-style:italic;\">File > Import > Query_metagenome_R1.fastq<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">File > Import > Query_metagenome_R2.fastq<\/span><\/div><div class = \"text-block\">ii) Link the paired reads in Geneious<\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Sequence > Set paired reads<\/span><\/div><div class = \"text-block\"><span>Select the imported paired metagenomic reads and <\/span><span style = \"font-style:italic;\">working_virus_consensus.fasta<\/span><span> then:<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Align\/Assemble > Map to reference<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Settings:<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Reference: working_virus_consensus.fasta<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Sensitivity: Medium-Low Sensitivity \/ Fast<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Fine Tuning: Iterate up to 25 times (or more until gaps are closed)<\/span><\/div><div class = \"text-block\">This will map all metagenomic reads to the contig, extending any ambiguous regions, then iterate the process. <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987108,"guid":"EF23F2A92E9E41B2802460CB19867443","previous_id":987107,"previous_guid":"0179CC0C4926485E98360A844DDED067","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A6CF07FA853147C49ADECCFD3609D8E5","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"642E7C5C893349CA9BD6EED286063B65","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Extract reads and reassemble the contig <\/span><span style = \"font-weight:bold;font-style:italic;\">de novo<\/span><\/div><div class = \"text-block\">i ) View the read mapping file in Geneious and click in the mapped reads to highlight one. <\/div><div class = \"text-block\"><span>Press <\/span><span style = \"font-style:italic;\">Ctrl A  <\/span><span>to select all reads<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhydhjw.png\" \/><\/div><div class = \"text-block\"><span>ii) <\/span><span style = \"font-style:italic;\">Right click<\/span><span> (on the read mappings) > <\/span><span style = \"font-style:italic;\">Extract Regions<\/span><\/div><div class = \"text-block\">Confirm you want to extract them as a list of sequences. <\/div><div class = \"text-block\">This generates a file with all mapped reads, paired and unpaired, and two consensus genomes. <\/div><div class = \"text-block\"><span>iii)<\/span><span style = \"font-style:italic;\"> <\/span><span>Delete the consensus and reference genomes to leave only the unassembled reads<\/span><\/div><div class = \"text-block\"><span>ii) <\/span><span style = \"font-style:italic;\">De novo<\/span><span> assemble the contigs agian (Either in Geneious or export the reads to a favorite assembler)<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Align\/Assemble > De novo Assemble: <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Settings:<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Assembler: Geneious<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Sensitivity: High Sensitivity<\/span><\/div><div class = \"text-block\">The virus genome should be reassembled into 1 or more large contigs which should read accross the MGI regions and allow the new gene variants to be detected.<\/div><\/div>"}},{"id":1054725,"guid":"9D15BDB3FFA3487C9FBB95A64D1722CF","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/public\/548ee5b11ce36037913b3f9d03edfe1d5d2270cc7928694c2970c4e34e5f2d80\/cfhydhjw.png\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":987109,"guid":"894835DB473647DF91DED094CBF0BFC2","previous_id":987108,"previous_guid":"EF23F2A92E9E41B2802460CB19867443","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"86546E7028A9443898838FCEB7CEEA65","order_id":1,"type_id":6,"title":"Section","source":{"title":""}},{"id":1054724,"guid":"A7B04DF591D84C4D87A4E6B3CBEE0937","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Align whole genomes using Mauve\/MUSCLE to compare MGI regions.<\/span><span style = \"font-weight:bold;\"> <\/span><\/div><div class = \"text-block\">Or extract MGI regions manually and align.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":null,"materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">This protocol allows gapclosing of metagenomic islands which occur when mapping metagenomic reads to a phage reference genome. These gaps arise because multiple gene variants co-exist for specific points on the genome, these variants fluctuate in dominance over space and time. This means mapping metagenomic reads from one location onto a phage reference genome from another will often result in multiple metagenomic islands. These gaps can be closed with the following protocol, allowing the other gene variants present in a phage pan-genome to be detected. <\/div><div class = \"text-block\">The protocol relies on detection of the same phages in similar ecosystems and relies on the phage being sequenced to sufficient depth in each sample to allow metagenomic assembly of large contigs (>10 X coverage). <\/div><div class = \"text-block\">Prerequisites:<\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Bowtie2<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Geneious software package<\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">SPAdes assembler <\/span><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Blast+ tools <\/span><\/div><\/div>","changed_on":1595531684}