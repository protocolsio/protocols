{"id":50171,"title":"Pristionchus Whole Genome Sequence Analysis","title_html":"<p>Pristionchus Whole Genome Sequence Analysis<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssubj57f.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssubj57f.jpg"},"doi":null,"doi_status":0,"uri":"pristionchus-whole-genome-sequence-analysis-bu83nzyn","type_id":1,"template_id":5,"published_on":1623301387,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":"0","code":"bu83nzyn","parent_id":0,"parent_uri":null,"is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":false},"created_on":1621804875,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Ray L. Hong","affiliation":"California State University, Northridge","affiliations":[{"affiliation":"California State University, Northridge","url":"","is_default":1}],"username":"ray-hong","note":null,"link":null,"image":{"source":"\/img\/avatars\/009.png","placeholder":"\/img\/avatars\/009.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":21,"authors":[{"name":"erick.rios. ","affiliation":"California State University Northridge","affiliations":[],"username":"m4wle1x1v1s4wle1","note":"erick.rios.492@my.csun.edu","link":null,"image":{"source":"\/img\/avatars\/015.png","placeholder":"\/img\/avatars\/015.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Ray Hong","affiliation":"California State University, Northridge","affiliations":[],"username":"ray-hong","note":"ray.hong@csun.edu","link":null,"image":{"source":"\/img\/avatars\/009.png","placeholder":"\/img\/avatars\/009.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":24637,"uri":"novicecodingerick","title":"NoviceCodingErick","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":24637,"uri":"novicecodingerick","title":"NoviceCodingErick","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":false,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Pristionchus Whole Genome Sequence Analysis","title_html":"Pristionchus Whole Genome Sequence Analysis","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"pristionchus-whole-genome-sequence-analysis-bu83nzyn","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1623301387,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/pristionchus-whole-genome-sequence-analysis-bu83nzyn","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"C94F29D0BC0C11EB9867B147E8521469","state_version_id":3204,"steps":[{"id":1183978,"guid":"CDFD96B0BC0C11EB9867B147E8521469","previous_id":1186109,"previous_guid":"DFE86380BDA311EB967E833406922398","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C7DA5664041B490B94A3FA0142130A99","order_id":1,"type_id":6,"title":"Section","source":{"title":"Preparing the read files"}},{"id":1054724,"guid":"9454A71BE60445D3B05FB2754633AFEB","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Create a workspace folder and download the sequence files in the compressed format, <\/span><span style = \"font-weight:bold;\">fq.gz<\/span><span>. Each genome should be at least two files from paired-end reads. BGI files may need to be concatenated into two files. Each compressed genome file could be up to 1 Gb. <\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":14400,"critical":null,"critical_id":null,"duration":7200},{"id":1183979,"guid":"33D15420BC0F11EB9867B147E8521469","previous_id":1183978,"previous_guid":"CDFD96B0BC0C11EB9867B147E8521469","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"DDE12EE700D64134BE68EF0F1C269A56","order_id":1,"type_id":6,"title":"Section","source":{"title":"Preparing the read files"}},{"id":1054724,"guid":"B03E3D8AD0074884BA7862AF985257AF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Decompress each file from the Terminal. On Mac OS10.12.x, open 'New Terminal at Folder' from your workspace. Each file should now end with <\/span><span style = \"font-weight:bold;\">.gz, <\/span><span>~3 Gb each.<\/span><\/div><div class = \"text-block\">- ls (list the files) <\/div><div class = \"text-block\">- gunzip -d filename (decompress)<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":14400,"critical":null,"critical_id":null,"duration":300},{"id":1183981,"guid":"5EAC4FC0BC1811EB9867B147E8521469","previous_id":1183979,"previous_guid":"33D15420BC0F11EB9867B147E8521469","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A664F18E33C94F9B88787E0AE02B3CD4","order_id":1,"type_id":6,"title":"Section","source":{"title":"Preparing the read files"}},{"id":1054724,"guid":"4EF87520160A49C19F10837ADCE0E7C2","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">If concatenating the files is necessary, perform the following and then run the alignment on combined_reads.fq. ~6 Gb each.<\/div><div class = \"text-block\">- cat reads1.fq reads2.fq .... readsN.fq > combined_reads.fq<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":14400,"critical":null,"critical_id":null,"duration":300},{"id":1185426,"guid":"EC3A8180BD2C11EBA5723BFC8CCD788D","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2EC1ACC40BBB41FA97B439DEE71A59A6","order_id":1,"type_id":6,"title":"Section","source":{"title":"Installing tools"}},{"id":1054724,"guid":"08E563508C7943079BD7969009CDB8DC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><a href=\"https:\/\/www.biorxiv.org\/content\/10.1101\/2020.11.12.379388v1\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">R\u00f6delsperger's Whole Genome Sequence<\/span><\/a><span style = \":;\"><\/span><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\"> <\/span><span>workflow requires BWA, samtools, and bcftools which are tools or packages that can be readily downloaded and installed. These tools are \"Linux\/Mac based\".<\/span><\/div><div class = \"text-block\">Windows users need to download an \"emulator\" of linux terminal such as \"ubuntu 20.04\" from <\/div><div class = \"text-block\"><span>sources such as the Microsoft store. (<\/span><span style = \"font-style:italic;\">e.g.<\/span><span> ubuntu 20.04.)<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1185427,"guid":"6DDCB190BD2D11EBA5723BFC8CCD788D","previous_id":1185426,"previous_guid":"EC3A8180BD2C11EBA5723BFC8CCD788D","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"0631A97330FC4D6C921C8A6D3EABC3F5","order_id":1,"type_id":6,"title":"Section","source":{"title":"Installing tools"}},{"id":1054724,"guid":"9FA11EC7FC5E4EA4A308E8177F149B5E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-style:italic;\">For Windows 10:<\/span><\/div><div class = \"text-block\"><ol style = \"list-style-type: decimal;\"><li style = \"counter-reset:ol0;\">Install \u201cubuntu 20.04 LTS\u201d (free) from the Microsoft store<\/li><li style = \"counter-reset:ol0;\">Once installed correctly<\/li><li style = \"counter-reset:ol0;\">Open windows command shell and type \u201cbash\u201d; it may take a few moments for first time running.<\/li><li style = \"counter-reset:ol0;\">$ sudo apt-get install bwa<\/li><li style = \"counter-reset:ol0;\">$ sudo apt-get install samtools<\/li><li style = \"counter-reset:ol0;\">$ sudo apt-get install bcftools<\/li><li style = \"counter-reset:ol0;\">You are now free to continue.<\/li><li style = \"counter-reset:ol0;\"><\/li><li style = \"counter-reset:ol0;\"><span style = \"font-style:italic;\">For Mac users:<\/span><\/li><li style = \"counter-reset:ol0;\">Open terminal\/console<\/li><li style = \"counter-reset:ol0;\">$ brew install bwa<\/li><li style = \"counter-reset:ol0;\">$ brew install samtools<\/li><li style = \"counter-reset:ol0;\">$ brew install bcftools<\/li><li style = \"counter-reset:ol0;\">You are now free to continue.<\/li><\/ol><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">For Mac users:<\/span><\/div><div class = \"text-block\"><ol style = \"list-style-type: decimal;\"><li style = \"counter-reset:ol0;\">Open terminal\/console<\/li><li style = \"counter-reset:ol0;\">$ brew install bwa<\/li><li style = \"counter-reset:ol0;\">$ brew install samtools<\/li><li style = \"counter-reset:ol0;\">$ brew install bcftools<\/li><li style = \"counter-reset:ol0;\">You are now free to continue.<\/li><\/ol><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":3600,"critical":null,"critical_id":null,"duration":1800},{"id":1186109,"guid":"DFE86380BDA311EB967E833406922398","previous_id":1185427,"previous_guid":"6DDCB190BD2D11EBA5723BFC8CCD788D","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1A7FEAA4E4C84695B7F1BE56AD8F1268","order_id":1,"type_id":6,"title":"Section","source":{"title":"Installing tools"}},{"id":1054724,"guid":"A2207B2BD8C545C9B278DFFB3F7A22BA","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"> Some computer systems may require admin or even root permissions in order to run the bash script. Use:<\/div><div class = \"text-block\">- sudo -i sudo -s<\/div><div class = \"text-block\">OR<\/div><div class = \"text-block\">- chmod -R 777 .\/<\/div><div class = \"text-block\">Bash script can now be ran with full permissions. You must enter this request for each run.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1186147,"guid":"7EDDA960BDAD11EBBC4D27E0C13160C0","previous_id":1183981,"previous_guid":"5EAC4FC0BC1811EB9867B147E8521469","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"EBA7C022E06C46D4A62091DB74327F90","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"DE10D8A164FA4E39B60AD898AF08A105","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Download or move the reference sequences into the same folder. You will need an addition mutant genome if the mutations were generated on top of an existing mutant strain. The following files are needed\/used for this example (<\/span><span style = \"font-weight:bold;\">R\u00f6delsperger's <\/span><span>workflow provides instructions for acquiring these files; With the only exception being the Automation_v1_3.sh bash script):<\/span><\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>El Paco Genome (Representative wild-type genome of <\/span><span style = \"font-style:italic;\">P. pacificus)<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">El_Paco_V3_gene_annotations_bcftools.gff3 (annotates the El Paco genome)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">SRR546092 (PS1843, Washington WILD mapping strain)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>ERR4367042 (<\/span><span style = \"font-style:italic;\">nhr-40 <\/span><span>suppressor, SUP, pooled mapping panel)<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>ERR4367073 (<\/span><span style = \"font-style:italic;\">nhr-40 <\/span><span>suppressor mutant line (<\/span><span style = \"font-style:italic;\">tu515<\/span><span>))<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>ERR4367101 (<\/span><span style = \"font-style:italic;\">nhr-40 <\/span><span>mutant line (<\/span><span style = \"font-style:italic;\">tu505<\/span><span>))<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">count_allele_frequencies.pl<\/li><\/ul><\/div><div class = \"text-block\">Automation_v1_3.sh <\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dsswbj567.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"6F514A30C9A411EBA5028916D8C813B5","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssabj567.sh","placeholder":"","original_name":"Automation_v1_3.sh"}},{"id":1054726,"guid":"B47FB87541E6428BA4E6356494874B11","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dsswbj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1186987,"guid":"4C7FE6F0BE6F11EB809CFDA534D07809","previous_id":1186147,"previous_guid":"7EDDA960BDAD11EBBC4D27E0C13160C0","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"39DC1EC84A824F4E9FAE6993091C3765","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"144564CFF24A41BD89EF11D891FFBA57","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Acquiring Automation_v1_3.sh<\/div><div class = \"text-block\">Copy the following Automation_v1_3.sh Bash script into a text document <\/div><div class = \"text-block\">(The code is located in the appendix section)<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1190613,"guid":"7E7BD500C42911EB89CA0FE703E6F300","previous_id":1186987,"previous_guid":"4C7FE6F0BE6F11EB809CFDA534D07809","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"5D32C02C8457423DB99EFCC9B7009EEE","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"B56D5547928840719A9B4531EB616608","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span> Name the script as desired and save the <\/span><span style = \"font-weight:bold;\">.txt<\/span><span> file.<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssybj567.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"13AA928C0014498E8D54C320BABB3B59","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssybj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1190614,"guid":"8169F440C42911EB89CA0FE703E6F300","previous_id":1190613,"previous_guid":"7E7BD500C42911EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BABA8383F764489598013D6536306A67","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"B569A947EE3D4E23B837D40D71B5BC84","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Open up bash terminal and navigate to where the script is located.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1190615,"guid":"829295C0C42911EB89CA0FE703E6F300","previous_id":1190614,"previous_guid":"8169F440C42911EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C6275508225F483E8420EBB81C31BC5D","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"45642766D2FF4EF1A3D72480C074F13F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Most likely Windows users will be required to convert the .txt from \"Windows (CRLF)\" to \"Unix (LF)\" because bash terminal can only utilize bash scripts in Unix (LF). CRLF and LF are \"control characters\" or \"bytecode\" and are different ways of reading files. <\/div><div class = \"text-block\">To convert from CRLF to LF enter in a Bash terminal (Enter the name of the script inplace of \"FILENAME\"):<\/div><div class = \"text-block\"><span>             <\/span><span style = \"font-weight:bold;\">fromdos FILENAME.txt<\/span><\/div><div class = \"text-block\"><span>      Note: You may need to use <\/span><span style = \"font-weight:bold;\">sudo apt install tofrodos<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dss4bj567.jpg\" \/><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dss8bj567.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"039BDCCA288342C6A7A6BBD7A2C64E17","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dss4bj567.jpg\" \/><\/div>"}},{"id":1054726,"guid":"1E4278740CF34B3D9F639A5782DF1813","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dss8bj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1190616,"guid":"83E37FC0C42911EB89CA0FE703E6F300","previous_id":1190615,"previous_guid":"829295C0C42911EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E2F730CA6E70415097B2D7187256B0F8","order_id":1,"type_id":6,"title":"Section","source":{"title":"Example files used"}},{"id":1054724,"guid":"0DC9C2B696F8426A9AEDF1494F4C6E72","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>Finally change the file extension from <\/span><span style = \"font-weight:bold;\">.txt<\/span><span> to <\/span><span style = \"font-weight:bold;\">.sh<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstcbj567.jpg\" \/><\/div><div class = \"text-block\">The script should now be usable.<\/div><\/div>"}},{"id":1054725,"guid":"3F9735ACBCE14C2A94FAD18444315455","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstcbj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":18000,"critical":null,"critical_id":null,"duration":0},{"id":1190631,"guid":"45A22A00C42D11EB89CA0FE703E6F300","previous_id":1191199,"previous_guid":"477CA850C58B11EB819D519ACE94D74E","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"170CB2A4DAEF4ADC9E466A8866D7B5CB","order_id":1,"type_id":6,"title":"Section","source":{"title":"Appendix Automation v1.3 bash script"}},{"id":1054724,"guid":"A3E9F0B8B6C94B44B85E028340431412","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">ENTIRE=n<\/div><div class = \"text-block\">ALIGNMENTS=n<\/div><div class = \"text-block\">REGIONS=n<\/div><div class = \"text-block\">MUTATIONS=n<\/div><div class = \"text-block\">INDEX=n<\/div><div class = \"text-block\">echo -n \"Perform ENTIRE Protocol? (Y\/n): \"<\/div><div class = \"text-block\">read ENTIRE<\/div><div class = \"text-block\">if [[ \"$ENTIRE\" == Y ]]; then<\/div><div class = \"text-block\">  echo \"WILL perform ENTIRE protocol.\"<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">if [ $ENTIRE != n -a $ENTIRE != Y ]; then<\/div><div class = \"text-block\">  echo \"You said $ENTIRE, assuming 'NO'\"<\/div><div class = \"text-block\">  ENTIRE=n<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">###################################<\/div><div class = \"text-block\">if [[ \"$ENTIRE\" == n ]]; then<\/div><div class = \"text-block\">  echo -n \"Perform candidate regions protocol? (Y\/n): \"<\/div><div class = \"text-block\">  read REGIONS<\/div><div class = \"text-block\">  if [ $REGIONS != n -a $REGIONS != Y ]; then<\/div><div class = \"text-block\">    echo \"You said $REGIONS, assuming 'NO'\"<\/div><div class = \"text-block\">    REGIONS=n<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">  echo -n \"Perform candidate mutations protocol? (Y\/n): \"<\/div><div class = \"text-block\">  read MUTATIONS<\/div><div class = \"text-block\">  if [ $MUTATIONS != n -a $MUTATIONS != Y ]; then<\/div><div class = \"text-block\">    echo \"You said $MUTATIONS, assuming 'NO'\"<\/div><div class = \"text-block\">    MUTATIONS=n<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">####################################<\/div><div class = \"text-block\">if [ $ENTIRE == Y -o $ALIGNMENTS == Y -o $REGIONS == Y -o $MUTATIONS == Y ]; then<\/div><div class = \"text-block\">  echo -n \"Enter representative genome (include file extension): \"<\/div><div class = \"text-block\">  read GENOME<\/div><div class = \"text-block\">  echo -n \"Index your representative genome? (Y\/n): \"<\/div><div class = \"text-block\">  read INDEX<\/div><div class = \"text-block\">  if [ $INDEX != Y -a $INDEX != n ]; then<\/div><div class = \"text-block\">    echo \"You said $INDEX, assuming 'NO'\"<\/div><div class = \"text-block\">    echo \"Will NOT index genome.\"<\/div><div class = \"text-block\">    INDEX=n<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">####################################<\/div><div class = \"text-block\">if [ $ENTIRE == Y -o $MUTATIONS == Y -o $ALIGNMENTS == Y ]; then<\/div><div class = \"text-block\">  echo -n \"Do you have suppressor reads? (Y\/n)\"<\/div><div class = \"text-block\">  read SUPPREAD<\/div><div class = \"text-block\">  if [ $SUPPREAD == Y ]; then<\/div><div class = \"text-block\">    echo -n \"Enter suppressor read 1 (include file extension): \"<\/div><div class = \"text-block\">    read SUPP_1<\/div><div class = \"text-block\">    echo -n \"Enter suppressor read 2 (include file extension): \"<\/div><div class = \"text-block\">    read SUPP_2<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">  if [ \"$SUPPREAD\" != Y -a $SUPPREAD != n ]; then<\/div><div class = \"text-block\">    echo \"No suppressor reads. Only mutant reads will be used.\"<\/div><div class = \"text-block\">    SUPPREAD=n<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">  echo -n \"Enter mutant read 1 (include file extension): \"<\/div><div class = \"text-block\">  read MUT_1<\/div><div class = \"text-block\">  echo -n \"Enter mutant read 2 (include file extension): \"<\/div><div class = \"text-block\">  read MUT_2<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">if [ \"$ENTIRE\" == Y -o $MUTATIONS == Y ]; then<\/div><div class = \"text-block\">  echo -n \"Candidate mutations; Enter annotation file (include file extension): \"<\/div><div class = \"text-block\">  read ANNOTATION<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">if [ \"$ENTIRE\" == Y -o $REGIONS == Y -o $ALIGNMENTS == Y ]; then<\/div><div class = \"text-block\">  echo -n \"Enter wild read 1 (include file extension): \"<\/div><div class = \"text-block\">  read WILD_1<\/div><div class = \"text-block\">  echo -n \"Enter wild read 2 (include file extension): \"<\/div><div class = \"text-block\">  read WILD_2<\/div><div class = \"text-block\">  echo -n \"Enter map read 1 (include file extension): \"<\/div><div class = \"text-block\">  read MAP_1<\/div><div class = \"text-block\">  echo -n \"Enter map read 2 (include file extension): \"<\/div><div class = \"text-block\">  read MAP_2<\/div><div class = \"text-block\">  if [ \"$ENTIRE\" == Y -o $REGIONS == Y ]; then<\/div><div class = \"text-block\">    echo -n \"Candidate regions; Enter 'Source Code 1' perl script (include file extension): \"<\/div><div class = \"text-block\">    read PERL<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">####################################<\/div><div class = \"text-block\">if [ $ENTIRE == Y -o $ALIGNMENTS == Y -o $REGIONS == Y -o $MUTATIONS == Y ]; then<\/div><div class = \"text-block\">  echo -n \"How many CPU threads to dedicate for alignments? (Minimum: 1; Max: 5): \"<\/div><div class = \"text-block\">  read THREAD<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">######################################################################################<\/div><div class = \"text-block\">if [[ \"$INDEX\" == Y ]];then<\/div><div class = \"text-block\">  bwa index $GENOME<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">####################### REGIONS ######################################################<\/div><div class = \"text-block\">if [ \"$ENTIRE\" == Y -o $REGIONS == Y ]; then<\/div><div class = \"text-block\">  bwa mem -t $THREAD -o WILD.sam $GENOME $WILD_1 $WILD_2<\/div><div class = \"text-block\">  bwa mem -t $THREAD -o MAP.sam $GENOME $MAP_1 $MAP_2<\/div><div class = \"text-block\">  samtools view -S -b MAP.sam > MAP_unsorted.bam<\/div><div class = \"text-block\">  samtools view -S -b WILD.sam > WILD_unsorted.bam<\/div><div class = \"text-block\">  samtools sort -o MAP.bam MAP_unsorted.bam<\/div><div class = \"text-block\">  samtools sort -o WILD.bam WILD_unsorted.bam<\/div><div class = \"text-block\">  samtools index MAP.bam<\/div><div class = \"text-block\">  samtools index WILD.bam<\/div><div class = \"text-block\">  rm MAP_unsorted.bam MAP.sam<\/div><div class = \"text-block\">  rm WILD_unsorted.bam WILD.sam<\/div><div class = \"text-block\">  bcftools mpileup -Ou -f $GENOME WILD.bam | bcftools call -mv -Ov -o WILD.vcf<\/div><div class = \"text-block\">  awk '{if($6>100) print}' WILD.vcf | grep -v INDEL |awk '{print $1 \"\\t\" $2}' > positions.txt<\/div><div class = \"text-block\">  samtools mpileup -f $GENOME -l positions.txt MAP.bam > pileup_data.txt<\/div><div class = \"text-block\">  perl $PERL pileup_data.txt > mapping_data.txt<\/div><div class = \"text-block\">  echo \"Candidate regions finished; Look for 'mapping_data.txt' file.\"<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">############################### MUTATIONS ############################################<\/div><div class = \"text-block\">if [ $SUPPREAD == Y ]; then<\/div><div class = \"text-block\">  bwa mem -t $THREAD -o SUPP.sam $GENOME $SUPP_1 $SUPP_2<\/div><div class = \"text-block\">  bwa mem -t $THREAD -o MUT.sam $GENOME $MUT_1 $MUT_2<\/div><div class = \"text-block\">  samtools view -S -b SUPP.sam > SUPP_unsorted.bam<\/div><div class = \"text-block\">  samtools view -S -b MUT.sam > MUT_unsorted.bam<\/div><div class = \"text-block\">  samtools sort -o SUPP.bam SUPP_unsorted.bam<\/div><div class = \"text-block\">  samtools sort -o MUT.bam MUT_unsorted.bam<\/div><div class = \"text-block\">  samtools index SUPP.bam<\/div><div class = \"text-block\">  samtools index MUT.bam<\/div><div class = \"text-block\">  rm SUPP_unsorted.bam SUPP.sam<\/div><div class = \"text-block\">  rm MUT_unsorted.bam MUT.sam<\/div><div class = \"text-block\">  bcftools mpileup -Ou -f $GENOME SUPP.bam | bcftools call -mv -Ou | bcftools view -i '%QUAL>=20' -Oz > SUPP.vcf.gz<\/div><div class = \"text-block\">  bcftools mpileup -Ou -f $GENOME MUT.bam | bcftools call -mv -Ou | bcftools view -i '%QUAL>=20' -Oz > MUT.vcf.gz<\/div><div class = \"text-block\">  bcftools index SUPP.vcf.gz<\/div><div class = \"text-block\">  bcftools index MUT.vcf.gz<\/div><div class = \"text-block\">  bcftools filter -O z SUPP.vcf.gz > SUPP_filtered1.vcf.gz<\/div><div class = \"text-block\">  bcftools index SUPP_filtered1.vcf.gz<\/div><div class = \"text-block\">  bcftools isec -C SUPP_filtered1.vcf.gz MUT.vcf.gz > pos.txt<\/div><div class = \"text-block\">  bcftools filter -O z -R pos.txt SUPP_filtered1.vcf.gz > SUPP_filtered2.vcf.gz<\/div><div class = \"text-block\">  bcftools sort -O z SUPP_filtered2.vcf.gz > SUPP_filtered2_sorted.vcf.gz<\/div><div class = \"text-block\">  bcftools index SUPP_filtered2_sorted.vcf.gz<\/div><div class = \"text-block\">  bcftools csq -p s -f $GENOME -g $ANNOTATION SUPP_filtered2_sorted.vcf.gz >   SUPP_variants_annotated.vcf<\/div><div class = \"text-block\">  grep missense SUPP_variants_annotated.vcf > Candidate_Mut.txt<\/div><div class = \"text-block\">  grep stop_gained SUPP_variants_annotated.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">  grep synonymous SUPP_variants_annotated.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">  grep INDEL SUPP_variants_annotated.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">  echo \"Candidate mutations protocol finished; Look for 'Candidate_Mut.txt' file\"<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">if [ $SUPPREAD == n ]; then<\/div><div class = \"text-block\">  bwa mem -t $THREAD -o MUT.sam $GENOME $MUT_1 $MUT_2<\/div><div class = \"text-block\">  samtools view -S -b MUT.sam > MUT_unsorted.bam<\/div><div class = \"text-block\">  samtools sort -o MUT.bam MUT_unsorted.bam<\/div><div class = \"text-block\">  samtools index MUT.bam<\/div><div class = \"text-block\">  rm MUT_unsorted.bam MUT.sam<\/div><div class = \"text-block\">  bcftools mpileup -Ou -f $GENOME MUT.bam | bcftools call -mv -Ou | bcftools view -i '%QUAL>=20' -Oz > MUT.vcf.gz<\/div><div class = \"text-block\">  bcftools index MUT.vcf.gz<\/div><div class = \"text-block\">  bcftools csq -p s -f $GENOME -g $ANNOTATION MUT.vcf.gz > MUT.vcf<\/div><div class = \"text-block\">  grep missense MUT.vcf > Candidate_Mut.txt<\/div><div class = \"text-block\">  grep stop_gained MUT.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">  grep synonymous MUT.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">  grep INDEL MUT.vcf >> Candidate_Mut.txt<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">######################################################################################<\/div><div class = \"text-block\">if [[ $ENTIRE == n ]]; then<\/div><div class = \"text-block\">  if [[ \"$REGIONS\" == n ]]; then<\/div><div class = \"text-block\">    echo \"Candidate regions protocol was not performed.\"<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">  if [[ \"$MUTATIONS\" == n ]]; then<\/div><div class = \"text-block\">    echo \"Candidate mutations protocol was not performed.\"<\/div><div class = \"text-block\">  fi<\/div><div class = \"text-block\">fi<\/div><div class = \"text-block\">if [ $ENTIRE == n -a $REGIONS == n -a $MUTATIONS == n -a $INDEX == n -a $ALIGNMENTS == n ];then  <\/div><div class = \"text-block\"> echo \"Nothing was accomplished this day.\"<\/div><div class = \"text-block\">else<\/div><div class = \"text-block\"> echo \"Something was accomplished!\"<\/div><div class = \"text-block\">fi<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#d0021b","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1190632,"guid":"70063700C42D11EB89CA0FE703E6F300","previous_id":1190633,"previous_guid":"7DFF5530C42D11EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3BA5704155904D73903F87AB3602F390","order_id":1,"type_id":6,"title":"Section","source":{"title":"Results"}},{"id":1054724,"guid":"E2C278A3FA8244F08A3EE629663FF96C","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"> After script completion, these are the resulting files:<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstgbj567.jpg\" \/><\/div><div class = \"text-block\"><span>\"mapping_data.txt\" is the result of the \"candidate regions\" part of <\/span><span style = \"font-weight:bold;\">R\u00f6delsperger's <\/span><span>workflow to be taken to Rstudio.<\/span><\/div><div class = \"text-block\"><span>\"Candidate_Mut.txt\" is the <\/span><span style = \"font-weight:bold;\">missense, stop<\/span><span style = \"font-weight:bold;font-weight:bold;\">_<\/span><span style = \"font-weight:bold;\">gained, synonymous, and INDEL <\/span><span>results from the \"Candidate Mutations\" part of <\/span><span style = \"font-weight:bold;\">R\u00f6delsperger's <\/span><span>workflow. <\/span><\/div><\/div>"}},{"id":1054725,"guid":"D90552588AA04B58ABF9C27826BF7B4D","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstgbj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1190633,"guid":"7DFF5530C42D11EB89CA0FE703E6F300","previous_id":1190616,"previous_guid":"83E37FC0C42911EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4C108815879B41FD86AD174877FFCE4F","order_id":1,"type_id":6,"title":"Section","source":{"title":"Initiating the script"}},{"id":1054724,"guid":"F06AFAE9D93B4622A60459805F43EC20","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">After the files have been gathered and prepared. To initiate the script, in a bash terminal enter:<\/div><div class = \"text-block\">.\/Automation_v1_3.sh<\/div><div class = \"text-block\"><span>You will be prompted a series of questions regarding what jobs you wish the script to handle for you. After all questions have been answered the script will commence running <\/span><span style = \"font-weight:bold;\">R\u00f6delsperger's <\/span><span>workflow and may take a few hours to complete.<\/span><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstkbj567.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"84417B6072A64D4CAB04113B6C775C3A","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstkbj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1190634,"guid":"8F9C2700C42D11EB89CA0FE703E6F300","previous_id":1190632,"previous_guid":"70063700C42D11EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8E186C55904E4934BC25670993824C20","order_id":1,"type_id":6,"title":"Section","source":{"title":"Results"}},{"id":1054724,"guid":"1DB9C239DF7F41FABDB7FBF99C7B4233","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Processing \"mapping_data.txt\" through Rstudio yields (see <\/div><div class = \"text-block\"><a href=\"https:\/\/www.biorxiv.org\/content\/10.1101\/2020.11.12.379388v1.full\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">R\u00f6delsperger's workflow<\/span><\/a><span style = \":;\"><\/span><\/div><div class = \"text-block\"> for the R scripts):<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstqbj567.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"E4DF3C290EAF48A2B786BB293AAB9F88","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstqbj567.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1190637,"guid":"6205D060C42E11EB89CA0FE703E6F300","previous_id":1190634,"previous_guid":"8F9C2700C42D11EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"99AF1A3B49C44EF8BD4A004465F52F7B","order_id":1,"type_id":6,"title":"Section","source":{"title":"Results"}},{"id":1054724,"guid":"927D9DA9A8D44267B394D44068777958","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The script places \"candidate mutations\" into the \"Candidate_Mut.txt\" file:<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/protocols-files.s3.amazonaws.com\/files\/dq2bbj567.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWSNCI5SNCPTWTQQ%2F20210610%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210610T043655Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=73f3c730ff3ac7c1809b785ab5f1a2d05001113ab133ff968bc6f2b4311b03e4\" \/><\/div><\/div>"}},{"id":1054725,"guid":"CE70066431C14D8AA86DE87C02ABF90B","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/protocols-files.s3.amazonaws.com\/files\/dq2bbj567.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWSNCI5SNCPTWTQQ%2F20210610%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210610T043655Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=73f3c730ff3ac7c1809b785ab5f1a2d05001113ab133ff968bc6f2b4311b03e4\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1191199,"guid":"477CA850C58B11EB819D519ACE94D74E","previous_id":1193457,"previous_guid":"4CB84320C88211EBB16965EF54E60FE2","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"C435A33A9609464398487B65E5D134B3","order_id":1,"type_id":6,"title":"Section","source":{"title":"Visualizing Alignments"}},{"id":1054724,"guid":"C7E6F8599423472681A88EA286EC111F","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Large insertions and deletions >1 kb will not be identified by the Candidate Mutation workflow. Instead, use the <\/div><div class = \"text-block\"><a href=\"https:\/\/software.broadinstitute.org\/software\/igv\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Integrative Genomics Viewer<\/span><\/a><\/div><div class = \"text-block\"> (IGV) to hone in on the chromosomal region you have identified by positional mapping.<\/div><div class = \"text-block\">You will need to load the following files to IGV (using a csu60 example):<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>El Paco Genome (Representative genome of <\/span><span style = \"font-style:italic;\">P. pacificus)<\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">El_Paco_V3_gene_annotations_bcftools.gff3 (annotates the El Paco genome)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span style = \"font-style:italic;\">Ppa-hsd-2(csu60)<\/span><span> whole genome sequence .bam file (<\/span><span style = \"font-style:italic;\">csu60<\/span><span> raw reads are on <\/span><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><a href=\"https:\/\/figshare.com\/articles\/dataset\/Pristionchus_pacificus_csu60_Whole_Genome_Sequence\/14502177\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Figshare<\/span><\/a><\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">)<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\"><span>Indexed <\/span><span style = \"font-style:italic;\">Ppa-hsd-2(csu60)<\/span><span> whole genome sequences (or, run >Samtools index csu60.bam to obtain the .bai file)<\/span><\/li><\/ul><\/div><div class = \"text-block\"><span style = \"font-style:italic;\">Ppa-hsd-2(csu60)<\/span><span> whole genome sequence .bam file (<\/span><span style = \"font-style:italic;\">csu60<\/span><span> raw reads are on <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/figshare.com\/articles\/dataset\/Pristionchus_pacificus_csu60_Whole_Genome_Sequence\/14502177\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">Figshare<\/span><\/a><\/div><div class = \"text-block\">)<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><\/ul><\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstybj57f.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"31CDF0D25E814C0A9301BFA0013C5118","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dstybj57f.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#E57785","section_duration":1800,"critical":null,"critical_id":null,"duration":0},{"id":1193457,"guid":"4CB84320C88211EBB16965EF54E60FE2","previous_id":1190637,"previous_guid":"6205D060C42E11EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"FF7F6BB339734FCA92554EF639F47B80","order_id":1,"type_id":6,"title":"Section","source":{"title":"Results"}},{"id":1054724,"guid":"038800D979E2402AB63F7A052A1305D0","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">We recommend sequencing the genomes of multiple alleles in addition to chromosomal mapping to find likely phenotype-causing genes. To compare candidate mutation lists, use the following commands: <\/div><div class = \"text-block\">>perl extract_genes.pl Mut1_variants_annotated_all.vcf> set1.txt<\/div><div class = \"text-block\">>perl extract_genes.pl Mut2_variants_annotated_all.vcf> set2.txt<\/div><div class = \"text-block\">>perl compare_lists.pl set1.txt set2.txt<\/div><\/div>"}},{"id":1054725,"guid":"12F68AF0C9AB11EB8908EB4F96C6B194","order_id":2,"type_id":15,"title":"command","source":{"id":8911,"name":">perl extract_genes.pl Mut1_variants_annotated_all.vcf> set1.txt\n>perl extract_genes.pl Mut2_variants_annotated_all.vcf> set2.txt\n>perl compare_lists.pl set1.txt set2.txt","command_name":"","command":null,"os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":3600,"critical":null,"critical_id":null,"duration":0},{"id":1193892,"guid":"DD50A410C94811EB81304B53C42D64BD","previous_id":1190631,"previous_guid":"45A22A00C42D11EB89CA0FE703E6F300","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"65EF1919A72A4BA697DA87303C4FA8DD","order_id":1,"type_id":6,"title":"Section","source":{"title":"Appendix Compare mutation lists"}},{"id":1054724,"guid":"E3B1486E81024FA286BCB21B468A03B4","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Perl scripts for comparing related mutant genomes.<\/span><\/div><div class = \"text-block\">#!\/usr\/bin\/perl<\/div><div class = \"text-block\">use strict;<\/div><div class = \"text-block\">open(IN, $ARGV[0] );<\/div><div class = \"text-block\">while(){<\/div><div class = \"text-block\">    if (\/BCSQ=\/){<\/div><div class = \"text-block\">\ts\/.+BCSQ=\/\/g;  ## remove first part of the line<\/div><div class = \"text-block\">\ts\/\\s+.+\/\/g;   ## remove second part of the line<\/div><div class = \"text-block\">\tmy ($type, $id) = split( \/\\|\/, $_ );  ## split by \"|\" symbol<\/div><div class = \"text-block\">\tunless($type eq \"synonymous\" || $type eq \"intron\" ){<\/div><div class = \"text-block\">\t    print \"$id\\n\";<\/div><div class = \"text-block\">\t}<\/div><div class = \"text-block\">    }<\/div><div class = \"text-block\">}<\/div><div class = \"text-block\">close(IN);<\/div><\/div>"}},{"id":1054725,"guid":"A8CF3230C9A511EB88A955BC61CA66C8","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dsscbj57f.pl","placeholder":"","original_name":"extract_genes.pl"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#d0021b","section_duration":900,"critical":null,"critical_id":null,"duration":900},{"id":1194196,"guid":"D14FF050C99111EBA5028916D8C813B5","previous_id":1193892,"previous_guid":"DD50A410C94811EB81304B53C42D64BD","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"62EAE1769B704486A86CF3229CA12E34","order_id":1,"type_id":6,"title":"Section","source":{"title":"Appendix Compare mutation lists"}},{"id":1054724,"guid":"6B1DA2FCD7C7440080939140D438D941","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">#!\/usr\/bin\/perl<\/div><div class = \"text-block\">use strict;<\/div><div class = \"text-block\">my $usage = \"<\/div><div class = \"text-block\">checks for common entries in the lists<\/div><div class = \"text-block\">> program list1.txt list2.txt [-a\/-n]\\n \";<\/div><div class = \"text-block\">if( $#ARGV == -1 ){ print $usage; exit 0;}<\/div><div class = \"text-block\">my @list1 = `less $ARGV[0]`;<\/div><div class = \"text-block\">my $list2;<\/div><div class = \"text-block\">my $printCom = 1;<\/div><div class = \"text-block\">my $all = 0;<\/div><div class = \"text-block\">$printCom = 0  if( $ARGV[2] eq \"-n\" );<\/div><div class = \"text-block\">$all = 1  if( $ARGV[2] eq \"-a\" );<\/div><div class = \"text-block\">open( IN , $ARGV[1]);<\/div><div class = \"text-block\">while(my $l = ){<\/div><div class = \"text-block\">\t$l =~ s\/\\s+\/\/g;<\/div><div class = \"text-block\">\t$list2->{ $l } = 1;<\/div><div class = \"text-block\">}<\/div><div class = \"text-block\">my $commons = 0;<\/div><div class = \"text-block\">$list2 =~ s\/\\t\/ \/g; <\/div><div class = \"text-block\">foreach my $element (@list1){<\/div><div class = \"text-block\">\tchomp $element;<\/div><div class = \"text-block\">\t$element =  $element; <\/div><div class = \"text-block\">\t#print \"$element\\n\";<\/div><div class = \"text-block\">\tmy $found = 0;<\/div><div class = \"text-block\">\t$found = 1 if( exists $list2 ->{$element} ) ;<\/div><div class = \"text-block\">\tunless( $all ){<\/div><div class = \"text-block\">\t    if( exists $list2 ->{$element} ){<\/div><div class = \"text-block\">\t\t$commons++;<\/div><div class = \"text-block\">\t\tprint $element.\"\\n\" if( $printCom ); <\/div><div class = \"text-block\">\t    }<\/div><div class = \"text-block\">\t    else{<\/div><div class = \"text-block\">\t\tprint $element.\"\\n\"  unless( $printCom );\t<\/div><div class = \"text-block\">\t    }\t<\/div><div class = \"text-block\">\t}<\/div><div class = \"text-block\">\tif( $all ){<\/div><div class = \"text-block\">\t\tprint \"$element\\t$found\\n\";<\/div><div class = \"text-block\">\t}<\/div><div class = \"text-block\">}<\/div><div class = \"text-block\">print STDERR \"non-coms $printCom\\n \" unless( $printCom );<\/div><div class = \"text-block\">print STDERR \"Commons: $commons\\n\";<\/div><\/div>"}},{"id":1054725,"guid":"8CBAEEE0C9A511EB88A955BC61CA66C8","order_id":2,"type_id":23,"title":"file","source":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dssbbj57f.pl","placeholder":"","original_name":"compare_lists.pl"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#d0021b","section_duration":900,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>With whole genome sequencing becoming more affordable and accessible every year, more diverse research groups will be capable of overcoming barriers to entry to utilize sequencing as a powerful tool for their research. The combination of mutagenesis experiments and sequencing of genomes of model organisms provide researchers a means to study mutations responsible for observed developmental phenotypes or behaviors. Sequencing of genomes tends to produce exorbitantly large data files that require specialized tools such as Burrows-Wheeler Aligner (BWA), Samtools, and Bcftools for processing. As the amount of sequencing in labs increases, the demand for bioinformatics skill also increases. Fortunately, existing computational workflows can minimize the amount of computer-knowledge required by individuals to handle whole genome reads. Nevertheless, these workflows require individuals to manually input each command from start to finish. Depending on the size of the files or the commands used, the time required to complete individual steps can take from a few seconds to several hours; with the entire workflow potentially requiring 8 or more hours on an average laptop computer. In this protocol, we provide a method to automate a workflow designed for mapping and finding candidate suppressor mutations in the nematode <\/span><span style = \"font-style:italic;\">Pristionchus pacificus<\/span><span style = \"font-style:italic;\">.<\/span><\/div><div class = \"text-block\"><span>This protocol is a automated workflow adapted from \"A simplified workflow for the analysis of whole-genome sequencing data from mutant lines with an application to the nematode <\/span><span style = \"font-style:italic;\">Pristionchus pacificus<\/span><span>\" by Christian R\u00f6delsperger. <\/span><a href=\"https:\/\/doi.org\/10.1101\/2020.11.12.379388\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/doi.org\/10.1101\/2020.11.12.379388<\/span><\/a><span style = \":;\"><\/span><\/div><\/div>","changed_on":1623302217}