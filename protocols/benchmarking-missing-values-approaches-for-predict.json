{"id":42632,"title":"Benchmarking missing-values approaches for predictive models on health databases","title_html":"<p>Benchmarking missing-values approaches for predictive models on health databases<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dx7bbgh87.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dx7bbgh87.jpg"},"doi":null,"doi_status":0,"uri":"benchmarking-missing-values-approaches-for-predict-bmvgk63w","type_id":1,"template_id":1,"published_on":1625665980,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":"0","code":"bmvgk63w","parent_id":0,"parent_uri":null,"is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":false},"created_on":1601405583,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Alexandre Perez-Lebel","affiliation":null,"affiliations":[{"affiliation":"","url":"","is_default":1}],"username":"alexandre-perezlebel","note":null,"link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/9a4372abcfe0ba1427ae2a22f62be5d0422cfc9942baadd3ebfd56e24dfa848f\/ck99bgh87.jpeg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/9a4372abcfe0ba1427ae2a22f62be5d0422cfc9942baadd3ebfd56e24dfa848f\/ck99bgh87.jpeg"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":null,"journal_name":null,"journal_link":null,"article_citation":null,"has_versions":0,"link":null,"total_collections":0,"number_of_steps":16,"authors":[{"name":"Alexandre Perez-Lebel","affiliation":"Inria, Palaiseau, France","affiliations":[],"username":"alexandre-perezlebel","note":"","link":null,"image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/9a4372abcfe0ba1427ae2a22f62be5d0422cfc9942baadd3ebfd56e24dfa848f\/ck99bgh87.jpeg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/public\/9a4372abcfe0ba1427ae2a22f62be5d0422cfc9942baadd3ebfd56e24dfa848f\/ck99bgh87.jpeg"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Ga\u00ebl Varoquaux","affiliation":"Inria, Palaiseau, France","affiliations":[],"username":null,"note":"","link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Marine Le Morvan","affiliation":"Inria, Palaiseau, France","affiliations":[],"username":null,"note":"","link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Julie Josse","affiliation":"Inria, Montpellier, France","affiliations":[],"username":null,"note":"","link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},{"name":"Jean-Baptiste Poline","affiliation":"McGill University, Montreal, Canada","affiliations":[],"username":null,"note":"","link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[{"id":10081,"uri":"missing-values-analysis","title":"Missing values analysis","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"request":{"id":10081,"uri":"missing-values-analysis","title":"Missing values analysis","image":{"source":"https:\/\/www.protocols.io\/img\/group_placeholder.png","placeholder":"https:\/\/www.protocols.io\/img\/group_placeholder.png"},"tech_support":{"email":null,"phone":null,"hide_contact":0,"use_email":0,"url":null},"is_member":1,"description":null,"research_interests":null,"website":null,"location":null,"affiliation":null,"status":{"is_visible":true,"access_level":0},"stats":{"files":[],"total_members":0,"total_followers":0,"total_child_groups":0,"total_parent_groups":0,"has_collaborations":0},"user_status":{"is_member":true,"is_confirmed":true,"is_invited":false,"is_owner":true,"is_admin":false,"is_following":false},"join_link":null,"token":null,"owner":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"is_protocol_requested":0,"is_group_requested":0,"is_my":false,"is_request":false,"is_confirmed":1,"is_declined":0,"requester":{"name":" ","affiliation":null,"affiliation_url":null,"username":null,"link":null},"protocol":{"id":0,"title":"Benchmarking missing-values approaches for predictive models on health databases","title_html":"Benchmarking missing-values approaches for predictive models on health databases","image":{"source":null,"placeholder":null},"doi":null,"doi_status":0,"uri":"benchmarking-missing-values-approaches-for-predict-bmvgk63w","type_id":1,"template_id":0,"published_on":null,"stats":{"number_of_views":0,"number_of_steps":0,"number_of_bookmarks":0,"number_of_comments":0,"number_of_exports":0,"number_of_runs":0,"number_of_votes":0,"is_voted":0},"parent_protocols":[],"parent_collections":[],"cited_protocols":[]},"created_on":1625665981,"resolve_on":0,"resolved_user":{"name":" ","affiliation":null,"affiliations":[],"username":null,"note":null,"link":null,"image":{"source":null,"placeholder":null},"badges":[],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"shared":false}}],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/benchmarking-missing-values-approaches-for-predict-bmvgk63w","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":1,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":1,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"FBD12B20028411EB9002BF561DCB7B88","state_version_id":3485,"steps":[{"id":1041781,"guid":"01108D60028511EB9002BF561DCB7B88","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"1931ACF160F440FE807E15286F9DE76E","order_id":1,"type_id":6,"title":"Section","source":{"title":"Introduction"}},{"id":1054724,"guid":"064450C820E44CF084B2FC9A768B7903","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span>This protocol details the experiments run in the article <\/span><span style = \"font-style:italic;\">Benchmarking missing-values approaches for predictive models on health databases<\/span><span>, Perez-Lebel et al. 2021. Documented code is available on GitHub:<\/span><\/div><div class = \"text-block\">And can be installed through the following steps:<\/div><div class = \"text-block\">We benchmarked two sets of 9 supervised predictive methods on 13 prediction tasks taken from 4 health databases.<\/div><\/div>"}},{"id":1054725,"guid":"D4DF4500028511EB9BD06762C633C9D3","order_id":2,"type_id":8,"title":"software","source":{"name":"Benchmarking missing-values approaches for predictive models...","developer":"Alexandre Perez-Lebel","repository":"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches","link":"","os_name":null,"os_version":null}},{"id":1054726,"guid":"74748020DE6411EB948159362D7696E5","order_id":3,"type_id":15,"title":"command","source":{"id":9023,"name":"git clone https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches.git\npython3 -m venv venv\nsource venv\/bin\/activate\npip install -r requirements.txt","command_name":"Install","command":"Download and install the code reproducing the experiments.","os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1041796,"guid":"2833F180028911EBADC4BFCC6A9AB8E3","previous_id":1209246,"previous_guid":"0D5FF320DF0311EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"DDE11DA761D74396B5CE20F7CEF2BD15","order_id":1,"type_id":6,"title":"Section","source":{"title":"Prediction"}},{"id":1054724,"guid":"C8805F1EB1BC4C1A974D543198266F3E","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Scale<\/span><\/div><div class = \"text-block\">To study the influence of the scale on the results, we decided to work on 4 sizes of the training set: 2 500, 10 000, 25 000 and 100 000. For each one of these sizes are run the following operations.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">Outer cross-validation<\/span><\/div><div class = \"text-block\">First, 5 train sets are randomly selected with the appropriate number of samples (2 500, 10 000, 25 000 or 100 000). For each train set, the test set is composed of all the remaining examples. Note that the size of the test set is considerably larger with a train set of 2 500 samples than with 100 000. <\/div><div class = \"text-block\">For each of the 5 folds, the methods are fitted on the train set and tested on the test set. For imputation-based methods, missing values of both train and test sets are first imputed with the imputer fitted on the training set only. Then, a cross-validated hyper-parameter tuning of the predictive model's parameters is performed on the imputed train set. Once the best model is obtained, it is tested against the imputed test set and its score is reported (accuracy or R\u00b2). Methods that do not require imputation follow the same pipeline with the imputation step skipped.<\/div><div class = \"text-block\"><span>To draw the 5 folds, we used <\/span><span style = \"font-style:italic;\">StratifiedShuffleSplit<\/span><span> (resp. <\/span><span style = \"font-style:italic;\">ShuffleSplit<\/span><span>) from scikit-learn for classifications (resp. regressions).<\/span><\/div><div class = \"text-block\">Evaluating a method on a prediction task is done by running:<\/div><div class = \"text-block\">Be careful to replace placeholders {task_name}, {method_id} and {T} by the name of the task, the ID or name of the method and the trial ID (0 to 4) respectively.<\/div><div class = \"text-block\">Example:<\/div><div class = \"text-block\"><span>Results are dumped in the <\/span><span style = \"font-style:italic;\">results\/<\/span><span> folder.<\/span><\/div><\/div>"}},{"id":1054725,"guid":"9EFAC7A0DF1311EBAEA2FF381FAEA508","order_id":2,"type_id":15,"title":"command","source":{"id":9042,"name":"python main.py predict {task_name} {method_id} --T {T}","command_name":"Prediction","command":"Benchmark a method on a prediction task","os_name":null,"os_version":""}},{"id":1054726,"guid":"542198C0DF1411EBAEA2FF381FAEA508","order_id":3,"type_id":15,"title":"command","source":{"id":9043,"name":"python main.py predict TB\/death_pvals 0 --T 0","command_name":"Prediction example","command":"Benchmark method with ID 0 on the task TB\/death_pvals on the trial 0.","os_name":null,"os_version":null}},{"id":1054727,"guid":"39AC09F0DF1711EBAEA2FF381FAEA508","order_id":4,"type_id":4,"title":"duration","source":{"duration":43200000,"title":"CPU hours to run the full benchmark"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#E57785","section_duration":43200000,"critical":[{"id":10,"title":"Computational Step","icon":"ComputationalIcon"},{"id":40,"title":"Overnight Step","icon":"Overnight"}],"critical_id":null,"duration":43200000},{"id":1041812,"guid":"4FDD2770028D11EBADC4BFCC6A9AB8E3","previous_id":1041796,"previous_guid":"2833F180028911EBADC4BFCC6A9AB8E3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"B36A108AE8714B90AC9D49D6BD71DCD5","order_id":1,"type_id":6,"title":"Section","source":{"title":"Prediction"}},{"id":1054724,"guid":"C5CBC8DE339D4313A2F4F253F2E6D19D","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Imputation<\/span><\/div><div class = \"text-block\">4 imputation methods are available:<\/div><div class = \"text-block\"><ul style = \"list-style-type:disc;\"><li style = \"counter-reset:ol0;list-style-type:disc;\">Imputation with the mean.<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">Imputation with the median.<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">Iterative imputation.<\/li><li style = \"counter-reset:ol0;list-style-type:disc;\">Imputation with the nearest neighbors.<\/li><\/ul><\/div><div class = \"text-block\">For each of them, new binary features can be added to the data. This binary mask encodes whether a value was originally missing or not.<\/div><div class = \"text-block\">The imputer is fitted on the train set only and both the train and test sets are then imputed with the fitted imputer. Doing so avoids leaking information from the train set to the test set and then helps to avoid overfitting.<\/div><div class = \"text-block\"><span>We used <\/span><span style = \"font-style:italic;\">SimpleImputer<\/span><span>, <\/span><span style = \"font-style:italic;\">IterativeImputer<\/span><span> and <\/span><span style = \"font-style:italic;\">KNNImputer<\/span><span> from scikit-learn.<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#E57785","section_duration":43200000,"critical":null,"critical_id":null,"duration":0},{"id":1041813,"guid":"6740DB00028D11EBADC4BFCC6A9AB8E3","previous_id":1041812,"previous_guid":"4FDD2770028D11EBADC4BFCC6A9AB8E3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"BC2141AEBFA947CFA7C35D816D73C4DF","order_id":1,"type_id":6,"title":"Section","source":{"title":"Prediction"}},{"id":1054724,"guid":"9A955BBB132F429BBDC69C1DFE0FF6E5","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Cross-validated hyper-parameters tuning<\/span><\/div><div class = \"text-block\">Hyper-parameters of the predictive models are tuned in a cross-validated manner on the train set (imputed or not).<\/div><div class = \"text-block\"><span>We used <\/span><span style = \"font-style:italic;\">GridSearchCV<\/span><span> from scikit-learn to perform the cross-validated hyper-parameters tuning. The cross-validation folds are drawn with <\/span><span style = \"font-style:italic;\">StratifiedShuffleSplit<\/span><span> (resp. <\/span><span style = \"font-style:italic;\">ShuffleSplit<\/span><span>) from scikit-learn for classifications (resp. regressions).<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#E57785","section_duration":43200000,"critical":null,"critical_id":null,"duration":0},{"id":1208701,"guid":"6ACD6180DE6511EB948159362D7696E5","previous_id":1041781,"previous_guid":"01108D60028511EB9002BF561DCB7B88","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"EBA18A1060DC4C89AF9284EAA07321DF","order_id":1,"type_id":6,"title":"Section","source":{"title":"Data"}},{"id":1054724,"guid":"F8823D61C1E9402C84F49AD8F5B90E25","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Each one of the 4 databases needs to be downloaded separately from their respective source project. Access to Traumabase, UK BioBank and MIMIC-III, requires an application. NHIS is freely available. Once downloaded, data path of each database can be updated in the <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches\/blob\/196e33cfd6151a91aa7ab62ca0f1c59db7f61b83\/database\/TB.py#L15\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">TB.py<\/span><\/a><\/div><div class = \"text-block\">, <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches\/blob\/196e33cfd6151a91aa7ab62ca0f1c59db7f61b83\/database\/UKBB.py#L14\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">UKBB.py,<\/span><\/a><\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches\/blob\/196e33cfd6151a91aa7ab62ca0f1c59db7f61b83\/database\/MIMIC.py#L14\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">MIMIC.py<\/span><\/a><\/div><div class = \"text-block\"> and <\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches\/blob\/196e33cfd6151a91aa7ab62ca0f1c59db7f61b83\/database\/NHIS.py#L13\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">NHIS.py<\/span><\/a><\/div><div class = \"text-block\"><span> files which are in the <\/span><span style = \"font-style:italic;\">database\/<\/span><span> folder of the project.<\/span><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208702,"guid":"7996EF10DE6511EB948159362D7696E5","previous_id":1208708,"previous_guid":"EAA69BF0DE6611EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"F54924502871483DABA804F9259EBCD9","order_id":1,"type_id":6,"title":"Section","source":{"title":"Prediction tasks"}},{"id":1054724,"guid":"59CEB66AD8BE40A1BEC6FD2AE1021958","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">From these databases, we defined 13 prediction tasks. That is, a set of input features and an outcome to predict. All features of each task belong to the same database.<\/div><div class = \"text-block\">Available tasks can be obtained with:<\/div><div class = \"text-block\">Names of the available tasks are:<\/div><\/div>"}},{"id":1054725,"guid":"3260DB80DEFE11EB948159362D7696E5","order_id":2,"type_id":15,"title":"command","source":{"id":9036,"name":"python main.py info available -t","command_name":"Available tasks","command":"List the names of all the available tasks.","os_name":null,"os_version":null}},{"id":1054726,"guid":"A85700B7F670489B91CF59DEC8278ADF","order_id":3,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div class = \"text-block\">TB\/death_pvals<\/div><div class = \"text-block\">TB\/platelet_pvals<\/div><div class = \"text-block\">TB\/hemo<\/div><div class = \"text-block\">TB\/hemo_pvals<\/div><div class = \"text-block\">TB\/septic_pvals<\/div><div class = \"text-block\">UKBB\/breast_25<\/div><div class = \"text-block\">UKBB\/breast_pvals<\/div><div class = \"text-block\">UKBB\/skin_pvals<\/div><div class = \"text-block\">UKBB\/parkinson_pvals<\/div><div class = \"text-block\">UKBB\/fluid_pvals<\/div><div class = \"text-block\">MIMIC\/septic_pvals<\/div><div class = \"text-block\">MIMIC\/hemo_pvals<\/div><div class = \"text-block\">NHIS\/bmi_pvals<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#84CE84","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208705,"guid":"CB058860DE6611EB948159362D7696E5","previous_id":1208701,"previous_guid":"6ACD6180DE6511EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"A394BD679FC1407C93F8662F7F64D1BE","order_id":1,"type_id":6,"title":"Section","source":{"title":"Data"}},{"id":1054724,"guid":"91366E7752A443AF8F72E46C13B23717","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The Traumabase Group (TB) is a collaboration studying major trauma. The database gathers information from 20 French trauma centers on more than 20 000 trauma cases from admission until discharge from critical care. Data collection started in 2010 and is still ongoing in 2020. We used records spanning from 2010 to 2019. We defined 5 prediction tasks on this database, 4 classifications and 1 regression. <\/div><div class = \"text-block\">Data can be obtained by <\/div><div class = \"text-block\"><a href=\"http:\/\/www.traumabase.eu\/en_US\/contact\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">contacting the team on the Traumabase website<\/span><\/a><\/div><div class = \"text-block\">.<\/div><\/div>"}},{"id":1054725,"guid":"CE770413DE6611EBBB040A58A9FEAC02","order_id":2,"type_id":9,"title":"dataset","source":{"name":"Traumabase","link":"http:\/\/www.traumabase.eu\/en_US"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208706,"guid":"D2187220DE6611EB948159362D7696E5","previous_id":1208705,"previous_guid":"CB058860DE6611EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"E9C6615DC74340339D63C183B5951EB3","order_id":1,"type_id":6,"title":"Section","source":{"title":"Data"}},{"id":1054724,"guid":"F944B04AE89B435093741DA1213E3ADC","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">UK Biobank (UKBB) is a major prospective epidemiology cohort with biomedical measurements. It provides health information on more than 500 000 United-Kingdom participants aged between 40 to 69 years from 2006 to 2010. We defined 5 tasks on this database, 4 classifications and 1 regression.<\/div><div class = \"text-block\">The data are available upon application <\/div><div class = \"text-block\"><a href=\"https:\/\/www.ukbiobank.ac.uk\/register-apply\/\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">as detailed on the UK BioBank website<\/span><\/a><\/div><div class = \"text-block\">.<\/div><\/div>"}},{"id":1054725,"guid":"DF54F3F5DE6611EBBB040A58A9FEAC02","order_id":2,"type_id":9,"title":"dataset","source":{"name":"UKBB","link":"https:\/\/www.ukbiobank.ac.uk\/"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208707,"guid":"E8C77BB0DE6611EB948159362D7696E5","previous_id":1208706,"previous_guid":"D2187220DE6611EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"4A24F347D7D347B88FE36AB1320EB889","order_id":1,"type_id":6,"title":"Section","source":{"title":"Data"}},{"id":1054724,"guid":"011A3BD97BAB4289A016DF2E20EF956A","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The Medical Information Mart for Intensive Care (MIMIC) database is an Intensive Care Unit (ICU) dataset developed by the MIT Lab for Computational Physiology. It comprises deidentified health data associated with about 60 000 ICU admissions recorded at the Beth Israel Deaconess Medical Center of Boston, United States, between 2001 and 2012. It includes demographics, vital signs, laboratory tests, medications, and more. We defined 2 classification tasks on this database. <\/div><div class = \"text-block\">The data can be accessed via <\/div><div class = \"text-block\"><a href=\"https:\/\/mimic.physionet.org\/gettingstarted\/access\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">an application described on the MIMIC website.<\/span><\/a><\/div><div class = \"text-block\"> Note that, as of the time of writing, the completion of an online MIT course is required for the application. We used the 1.4 version of the data in the project.<\/div><\/div>"}},{"id":1054725,"guid":"E976C383DE6611EBBB040A58A9FEAC02","order_id":2,"type_id":9,"title":"dataset","source":{"name":"MIMIC-III (v1.4)","link":"https:\/\/mimic.physionet.org\/"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208708,"guid":"EAA69BF0DE6611EB948159362D7696E5","previous_id":1208707,"previous_guid":"E8C77BB0DE6611EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2DFC701E2E844391BD9C059408553211","order_id":1,"type_id":6,"title":"Section","source":{"title":"Data"}},{"id":1054724,"guid":"78ECCCCBADE2421294EC8F11024CA962","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">The National Health Interview Survey (NHIS) is a major data collection program of the National Center for Health Statistics (NCHS), part of the Centers for Disease Control and Prevention (CDC) in the United States. It aims to monitor the health of the population. Since 1957, it collects data from United-States population. We used the 2017 edition, summing up to approximately 35 000 households containing about 87 500 persons. We defined 1 regression task on this database.<\/div><div class = \"text-block\">It is <\/div><div class = \"text-block\"><a href=\"https:\/\/www.cdc.gov\/nchs\/nhis\/nhis_2017_data_release.htm\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">freely-accessible on the NHIS website.<\/span><\/a><\/div><\/div>"}},{"id":1054725,"guid":"EF2686A5DE6611EBBB040A58A9FEAC02","order_id":2,"type_id":9,"title":"dataset","source":{"name":"NHIS (2017)","link":"https:\/\/www.cdc.gov\/nchs\/nhis\/nhis_2017_data_release.htm"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#94EBFF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1208800,"guid":"C21F32A0DE7011EB948159362D7696E5","previous_id":1041813,"previous_guid":"6740DB00028D11EBADC4BFCC6A9AB8E3","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"8B1F62210D944AC69E0B986A7FB11034","order_id":1,"type_id":6,"title":"Section","source":{"title":"Results"}},{"id":1054724,"guid":"5DA99C6D468D4D74B29E23DA6EAEA416","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Once the results of all the methods are obtained, they are gathered in a single CSV file using the following command:<\/div><div class = \"text-block\"><span>This creates a <\/span><span style = \"font-style:italic;\">scores.csv<\/span><span> file in the <\/span><span style = \"font-style:italic;\">scores\/<\/span><span> folder.<\/span><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">The aggregated results obtained during our experiment <\/span><\/div><div class = \"text-block\"><a href=\"https:\/\/github.com\/alexprz\/article-benchmark_mv_approaches\/blob\/196e33cfd6151a91aa7ab62ca0f1c59db7f61b83\/scores\/scores.csv\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">are given in our repository.<\/span><\/a><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\"> <\/span><span>This allows to reproduce the figures and tables and to analyze further the results without needing the original data.<\/span><\/div><\/div>"}},{"id":1054725,"guid":"096E24E0DF1611EBAEA2FF381FAEA508","order_id":2,"type_id":15,"title":"command","source":{"id":9044,"name":"python main.py aggregate results\/","command_name":"Aggregate results","command":"Merge all results in a single csv file","os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA94FF","section_duration":0,"critical":[{"id":7,"title":"Analyze","icon":"AnalyzeIcon"}],"critical_id":null,"duration":0},{"id":1208801,"guid":"C6A88B50DE7011EB948159362D7696E5","previous_id":1208800,"previous_guid":"C21F32A0DE7011EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"2378CB81581A4F239E140363A4DBAE60","order_id":1,"type_id":6,"title":"Section","source":{"title":"Figures and tables"}},{"id":1054724,"guid":"509BB5A8AF214EF3ACD43F77CADB1BE3","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">Most of the figures and tables of our article can be easily reproduced without requiring the original data (based on saved results only).<\/div><div class = \"text-block\">Some figures however need the data to be build. <\/div><div class = \"text-block\"><span>All figures and tables are saved in the <\/span><span style = \"font-style:italic;\">graphics\/ <\/span><span>folder of the repository.<\/span><\/div><div class = \"text-block\">The main figure can be reproduced with:<\/div><\/div>"}},{"id":1054725,"guid":"C179B480DF1811EBAEA2FF381FAEA508","order_id":2,"type_id":15,"title":"command","source":{"id":9045,"name":"python main.py figs -h","command_name":"Reproduce figures and tables from aggregated scores","command":"Helper to the command that reproduces the figures and tables of our article based on the aggregated scores.","os_name":null,"os_version":null}},{"id":1054726,"guid":"64587FB0DF1911EBAEA2FF381FAEA508","order_id":3,"type_id":15,"title":"command","source":{"id":9046,"name":"python main.py datastats -h","command_name":"Reproduce figures about databases","command":"Helper to the command that reproduces the figures about databases' statistics","os_name":null,"os_version":null}},{"id":1054727,"guid":"42B2CD10DF1A11EB9647DF4868A9AFB4","order_id":4,"type_id":15,"title":"command","source":{"id":9047,"name":"python main.py figs scores","command_name":"Main figure","command":"Reproduce the main figure of the article.","os_name":null,"os_version":null}},{"id":1054728,"guid":"78B5EEA769B3434B9CCA55F28B7DC167","order_id":5,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/dx7dbgh87.jpg\" \/><\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":[{"id":7,"title":"Analyze","icon":"AnalyzeIcon"}],"critical_id":null,"duration":0},{"id":1209243,"guid":"7AB39BB0DEFF11EB948159362D7696E5","previous_id":1208702,"previous_guid":"7996EF10DE6511EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"437E8D80468E4428AD2B8379B552DE30","order_id":1,"type_id":6,"title":"Section","source":{"title":"Predictive methods"}},{"id":1054724,"guid":"3F77370436D249EE87F41D6E3A0017DE","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">36 predictive methods are available. The list of their IDs and names can be obtained running:<\/div><div class = \"text-block\">IDs and names of the available methods are: <\/div><\/div>"}},{"id":1054725,"guid":"CEC2ED00DEFF11EB948159362D7696E5","order_id":2,"type_id":15,"title":"command","source":{"id":9037,"name":"python main.py info available -m","command_name":"Available models","command":"List the IDs and names of all the available methods.","os_name":null,"os_version":null}},{"id":1054726,"guid":"55855D94655C47E88A6F3B14C31BBF80","order_id":3,"type_id":17,"title":"result","source":{"body":"<div class = \"text-blocks\"><div class = \"text-block\">0: Classification<\/div><div class = \"text-block\">1: Classification_Logit<\/div><div class = \"text-block\">2: Regression<\/div><div class = \"text-block\">3: Regression_Ridge<\/div><div class = \"text-block\">4: Classification_imputed_Mean<\/div><div class = \"text-block\">5: Classification_Logit_imputed_Mean<\/div><div class = \"text-block\">6: Regression_imputed_Mean<\/div><div class = \"text-block\">7: Regression_Ridge_imputed_Mean<\/div><div class = \"text-block\">8: Classification_imputed_Mean+mask<\/div><div class = \"text-block\">9: Classification_Logit_imputed_Mean+mask<\/div><div class = \"text-block\">10: Regression_imputed_Mean+mask<\/div><div class = \"text-block\">11: Regression_Ridge_imputed_Mean+mask<\/div><div class = \"text-block\">12: Classification_imputed_Med<\/div><div class = \"text-block\">13: Classification_Logit_imputed_Med<\/div><div class = \"text-block\">14: Regression_imputed_Med<\/div><div class = \"text-block\">15: Regression_Ridge_imputed_Med<\/div><div class = \"text-block\">16: Classification_imputed_Med+mask<\/div><div class = \"text-block\">17: Classification_Logit_imputed_Med+mask<\/div><div class = \"text-block\">18: Regression_imputed_Med+mask<\/div><div class = \"text-block\">19: Regression_Ridge_imputed_Med+mask<\/div><div class = \"text-block\">20: Classification_imputed_Iterative<\/div><div class = \"text-block\">21: Classification_Logit_imputed_Iterative<\/div><div class = \"text-block\">22: Regression_imputed_Iterative<\/div><div class = \"text-block\">23: Regression_Ridge_imputed_Iterative<\/div><div class = \"text-block\">24: Classification_imputed_Iterative+mask<\/div><div class = \"text-block\">25: Classification_Logit_imputed_Iterative+mask<\/div><div class = \"text-block\">26: Regression_imputed_Iterative+mask<\/div><div class = \"text-block\">27: Regression_Ridge_imputed_Iterative+mask<\/div><div class = \"text-block\">28: Classification_imputed_KNN<\/div><div class = \"text-block\">29: Classification_Logit_imputed_KNN<\/div><div class = \"text-block\">30: Regression_imputed_KNN<\/div><div class = \"text-block\">31: Regression_Ridge_imputed_KNN<\/div><div class = \"text-block\">32: Classification_imputed_KNN+mask<\/div><div class = \"text-block\">33: Classification_Logit_imputed_KNN+mask<\/div><div class = \"text-block\">34: Regression_imputed_KNN+mask<\/div><div class = \"text-block\">35: Regression_Ridge_imputed_KNN+mask<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#FFED92","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1209244,"guid":"76AFF850DF0011EB948159362D7696E5","previous_id":1209243,"previous_guid":"7AB39BB0DEFF11EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"41A3EF09426045B6B07002AE18C12EDC","order_id":1,"type_id":6,"title":"Section","source":{"title":"Feature selection"}},{"id":1054724,"guid":"BBC7FF1FACEB42C08EB74C25BAED8AD1","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">11 tasks have their features automatically selected with a simple ANOVA-based univariate test of the link of each feature to the outcome (task name ends with \"_pvals\" in the code and \"_screening\" in the article). <\/div><div class = \"text-block\">The 2 remaining tasks have their feature manually defined following the choices of experts in prior studies. <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":[{"id":10,"title":"Computational Step","icon":"ComputationalIcon"}],"critical_id":null,"duration":0},{"id":1209245,"guid":"EFBE5910DF0211EB948159362D7696E5","previous_id":1209244,"previous_guid":"76AFF850DF0011EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"DEA2289A60AA4F5DBE7E7771628AD402","order_id":1,"type_id":6,"title":"Section","source":{"title":"Feature selection"}},{"id":1054724,"guid":"A685469988A14277A0268F5ED4369023","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">ANOVA-based feature selection<\/span><\/div><div class = \"text-block\">Categorical features are first one-hot encoded. Then, the ANOVA-based univariate test is performed on one third of the samples which are then discarded. We kept the 100 encoded features having the smallest 100 p-values. Once the features are selected, the cross-validated prediction is performed on the remaining two thirds of the samples. <\/div><div class = \"text-block\">For these tasks, there are 5 trials during which the samples on which the selection test is performed are redrawn, and the prediction each time fitted on the new remaining samples and the new selected features.<\/div><div class = \"text-block\"><span>We used <\/span><span style = \"font-style:italic;\">f_classif<\/span><span> and <\/span><span style = \"font-style:italic;\">f_regression<\/span><span> from the <\/span><span style = \"font-style:italic;\">feature_selection<\/span><span> module of scikit-learn.<\/span><\/div><div class = \"text-block\">For each of these tasks, p-values of the test can be computed for each each trial by running:<\/div><div class = \"text-block\">Be careful to replace placeholders {task_name} and {T} by the name of the task and the trial ID (0 to 4) respectively.<\/div><div class = \"text-block\">Example:<\/div><\/div>"}},{"id":1054725,"guid":"65A54FB9DF0B11EBBB040A58A9FEAC02","order_id":2,"type_id":15,"title":"command","source":{"id":9041,"name":"python main.py select {task_name} --T {T}","command_name":"Feature selection","command":"Compute p-values of ANOVA-based test to select features","os_name":null,"os_version":null}},{"id":1054726,"guid":"BD17C7B0DF1D11EBAAC78D4B9C52DA16","order_id":3,"type_id":15,"title":"command","source":{"id":9048,"name":"python main.py select TB\/death_pvals --T 0","command_name":"Example of feature selection","command":"Compute p-values of ANOVA-based test to select features of the task TB\/death_pvals on the first trial.","os_name":null,"os_version":null}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1209246,"guid":"0D5FF320DF0311EB948159362D7696E5","previous_id":1209245,"previous_guid":"EFBE5910DF0211EB948159362D7696E5","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3A26997790B44AF784AC7C4A5B99BA2C","order_id":1,"type_id":6,"title":"Section","source":{"title":"Feature selection"}},{"id":1054724,"guid":"4F6C9287ECE3470FAF3CF98DCB8A78DF","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\"><span style = \"font-weight:bold;\">Manual selection following experts<\/span><\/div><div class = \"text-block\">Features for the hemorrhagic shock prediction (task named TB\/hemo) in the Traumabase database are defined following Jiang et al.:<\/div><div class = \"text-block\">Features for the breast cancer prediction (task named UKBB\/breast_25) are defined following L\u00e4ll et al.:<\/div><div class = \"text-block\">There is only 1 trial for these tasks.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#EA9F6C","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">BACKGROUND<\/div><div class = \"text-block\">As databases grow larger, it becomes harder to fully control their collection, and they frequently come with missing values: incomplete observations. These large databases are well suited to train machine-learning models, for instance for forecasting or to extract biomarkers in biomedical settings. Such predictive approaches can use discriminative --rather than generative-- modeling, and thus open the door to new missing-values strategies. Yet existing empirical evaluations of strategies to handle missing values have focused on inferential statistics.<\/div><div class = \"text-block\">RESULTS<\/div><div class = \"text-block\">Here we conduct a systematic benchmark of missing-values strategies in predictive models with a focus on health databases: two electronic health record datasets, a population brain imaging one, and a health survey. Using gradient-boosted trees, we compare native support for missing values with simple and state-of-the-art imputation prior to learning. We investigate prediction accuracy and computational time. For prediction after imputation, we find that adding an indicator to express which values have been imputed is important, suggesting that the data are missing not at random. Elaborate missing values imputation can improve prediction compared to simple strategies but requires longer computational time on large data. Learning trees that model missing values --with missing incorporated attribute-- leads to robust, fast, and well-performing predictive modeling.<\/div><div class = \"text-block\">CONCLUSIONS<\/div><div class = \"text-block\">Native support for missing values in supervised machine learning predicts better than state-of-the-art imputation with much less computational cost. When using imputation, it is important to add indicator columns expressing which values have been imputed.<\/div><\/div>","changed_on":1625665980}