{"access":{"can_view":true,"can_edit":false,"can_remove":true,"can_add":false,"can_publish":false,"can_get_doi":true,"can_share":true,"can_move":true,"can_move_outside":true,"can_transfer":true,"can_download":true,"is_locked":false},"authors":[{"name":"Scott  Ferguson","affiliation":"Australian National University","affiliation_url":"scott.ferguson@anu.edu.au","username":"scott-ferguson","link":"","image":{"source":"/img/avatars/017.png","placeholder":"/img/avatars/017.png","webp_source":""},"note":"","is_verified_author":true,"is_verified_user":true},{"name":"Ashley  Jones","affiliation":"Australian National University","affiliation_url":"","username":"ashley-jones","link":"","image":{"source":"https://s3.amazonaws.com/protocols-files/files/dzan222e.jpg","placeholder":"https://s3.amazonaws.com/protocols-files/files/dzan222e.jpg","webp_source":"https://s3.amazonaws.com/protocols-files/files/dzam222e.webp"},"note":"","is_verified_author":true,"is_verified_user":true},{"name":"Justin  Borevitz","affiliation":"Australian National University","affiliation_url":null,"username":"w213b403p2t2","link":null,"image":{"source":"/img/avatars/014.png","placeholder":"/img/avatars/014.png","webp_source":""},"note":"","is_verified_author":true,"is_verified_user":false}],"before_start":"","book_chapter":null,"can_accept_authorship":false,"can_be_copied":true,"can_claim_authorship":false,"can_remove_fork":false,"can_sign":false,"child_steps":{},"cited_protocols":[],"collection_items":[],"created_on":1628045957,"creator":{"name":"Scott Ferguson","affiliation":"Australian National University","affiliation_url":"scott.ferguson@anu.edu.au","username":"scott-ferguson","link":"","image":{"source":"/img/avatars/017.png","placeholder":"/img/avatars/017.png","webp_source":""},"badges":[{"id":3,"name":"Power author!","image":{"source":"/img/badges/silver.svg","placeholder":"/img/badges/silver.svg"}}],"affiliations":[{"affiliation":"Australian National University","url":"scott.ferguson@anu.edu.au","is_default":true}]},"description":"{\"blocks\":[{\"key\":\"8jpoq\",\"text\":\"With the introduction of long-read, third generation sequencing (e.g. Oxford Nanopore Technologies (ONT) and Pacific Biosciences (PacBio) and associated bioinformatics tools, we can now affordably assemble complex plant genomes with an accuracy and contiguity that was previously incredibly expensive to obtain. Long-read sequencing technology has dramatically improved our ability to generate de novo genome assemblies. In particular plant genomes, due to their large proportion of repetitive sequences, have highly benefited from long-read sequencing. Despite these improvements, challenges still remain in performing de novo assembly, namely in developing a reliable workflow and in tool choice. Here we present the assembly scaffolding proportion of our long-read plant genome assembly, scaffolding, and annotation workflow. We have developed and tested this workflow on many complex plant genomes. By using this workflow with a sufficient coverage of long-reads, a highly contiguous and accurate plant genome can be assembled.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","disclaimer":"","document":"","documents":[],"doi":null,"doi_status":0,"fork_id":null,"fork_info":null,"forks":[],"funders":[],"groups":[],"guid":"F1F64BB0F4CF11EB87EC8F918375E84E","guidelines":"","has_references":false,"has_versions":true,"id":52093,"image":{"source":"https://s3.amazonaws.com/protocols-files/files/gc89bmnvf.jpg","webp_source":"https://s3.amazonaws.com/protocols-files/files/gc88bmnvf.webp","placeholder":"","webp_placeholder":""},"image_attribution":"","in_trash":true,"is_bookmarked":false,"is_contact_suspended":false,"is_content_confidential":false,"is_content_warning":false,"is_in_transfer":false,"is_owner":true,"is_retracted":false,"is_shared_directly":false,"is_subprotocol":null,"is_unlisted":false,"item_id":817324,"journal":null,"journals":[],"keywords":null,"last_modified":1642054331,"link":"","location":null,"manuscript_citation":"","materials":[],"materials_text":"","ownership_history":null,"parent_collections":[],"parent_protocols":[],"peer_reviewed":false,"public":true,"public_fork_note":"","published_on":1642054331,"references":[],"related_equipments":[],"retraction_reason":null,"shared_access_id":1,"show_comparison":true,"sign_info":null,"state_version_id":435,"stats":{"is_voted":false,"number_of_views":32,"number_of_steps":7,"number_of_bookmarks":0,"number_of_comments":0,"number_of_bookmarked_comments":0,"number_of_steps_comments":0,"number_of_protocol_comments":0,"number_of_exports":1,"number_of_runs":0,"number_of_votes":0,"number_of_reagents":0,"number_of_equipments":0,"number_of_collections":0,"number_of_forks":{"private":0,"public":0},"number_of_accessible_forks":0},"status":{"id":1,"info":"We use this protocol and it’s working"},"steps":[{"id":1226705,"guid":"7C5F6400F50511EB82D829EBA5593B08","previous_id":0,"previous_guid":null,"section":"\u003cp\u003eGenome scaffolding\u003c/p\u003e","section_color":"#A492FF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"494pt\",\"text\":\"Currently your genome will not exist as full chromosomes, rather as fragmented sections of chromosomes. To increase the utility of your genome scaffolding is performed. Scaffolding attempts to find how your sequences should be joined to form full chromosomes and joins them. There are a number of ways of scaffolding genome assemblies, here we focus on a synteny based approach and Hi-C.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c167u\",\"text\":\"Hi-C is the recommended method, but obtaining good quality Hi-C data can be difficult and expensive.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"1","cases":[],"critical":null},{"id":1226707,"guid":"7C60C391F50511EB82D829EBA5593B08","previous_id":1226705,"previous_guid":"7C5F6400F50511EB82D829EBA5593B08","section":"\u003cp\u003eHi-C: Quality control\u003c/p\u003e","section_color":"#94EBFF","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6t1li\",\"text\":\"The first step in scaffolding with Hi-C is to determine if your Hi-C provides sufficient information for scaffolding. The two tools we like to use to determine library quality are hic_qc from Phase Genomics and Juicer.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1a8j2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"bdefo\",\"text\":\"Phase QC: generates a pdf report. See https://phasegenomics.github.io/2019/09/19/hic-alignment-and-qc.html to aid in reading of report\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":1,\"offset\":38,\"length\":68}],\"data\":{}},{\"key\":\"5ua50\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"63tpp\",\"text\":\"Interpretation of Hi-C quality results can be difficult. The main things we are looking for are:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"40l9v\",\"text\":\"A large number of sequenced read pairs\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"83eib\",\"text\":\"A large number of inter-chromosomal read pairs\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"782gr\",\"text\":\"A large number of intra-chromosomal read pairs\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6tm1r\",\"text\":\"Low percent of PCR duplicates\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bnd7v\",\"text\":\"Low percent of unmapped reads\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74bs9\",\"text\":\"Phase Genomics library statistic (Phase Genomics website contains details about these results)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9184,\"name\":\"label=\\\"XXX\\\"\\nR1=\\\"/path to reads/XX_R1.fastq.gz\\\"\\nR2=\\\"/path to reads/XX_R2.fastq.gz\\\"\\ngenome=\\\"/path to genome/plasmid-filtered.fasta\\\"\\ncpus=XX\\n\\n# first align Hi-C reads to your genome\\nmkdir ${label}~phase\\ncd ${label}~phase\\n\\nbwa index $genome\\nbwa mem -t $cpus -5SP $genome $R1 $R2 \\u003e aligned.sam\\n\\ncat aligned.sam | samblaster \\u003e tmp.sam\\nsamtools view -@ $cpus -S -h -b -F 2316 tmp.sam \\u003e blaster.bam\\nrm *.sam\\n\\n# Now generate QC report\\npython hic_qc.py -b blaster.bam -o blaster\",\"os_name\":null,\"os_version\":null,\"command_name\":\"Phase genomics QC report (pdf)\",\"description\":null,\"can_edit\":1,\"guid\":\"47B9F430F50611EB82D829EBA5593B08\"}},\"1\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"90A54B21F50611EBAB810A58A9FEAC02\",\"url\":\"https://phasegenomics.github.io/2019/09/19/hic-alignment-and-qc.html\"}},\"2\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9185,\"name\":\"label=\\\"XXX\\\"\\nR1=\\\"/path to reads/XX_R1.fastq.gz\\\"\\nR2=\\\"/path to reads/XX_R2.fastq.gz\\\"\\ngenome=\\\"/path to genome/plasmid-filtered.fasta\\\"\\ncpus=XX\\nenzyme=\\\"DpnII\\\"\\njuicerPath=\\\"\\\"\\n\\nmkdir ${label}~juice\\nmkdir ${label}~juice/fastq\\ncd ${label}~juice\\n\\nln $R1 fastq/\\nln $R2 fastq/\\nln $genome .\\n\\npython3 ${juicerPath}/misc/generate_site_positions.py $enzyme $label $(basename fnaFile)\\nbwa index $fnaFile\\ngne-file.sh $genome\\n\\n${juicerPath}/scripts/juicer.sh -g $label -z $genome -p $(basename $genome .fasta).genome -y  ${label}_${enzyme}.txt -D ${juicerPath} -t ${PBS_NCPUS}\\n${juicerPath}/CPU/common/cleanup.sh\",\"os_name\":null,\"os_version\":null,\"command_name\":\"Juicer QC\",\"description\":null,\"can_edit\":1,\"guid\":\"6B66A4F0F50611EB82D829EBA5593B08\"}}}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"2","cases":[],"critical":null},{"id":1226716,"guid":"7C699D31F50511EB82D829EBA5593B08","previous_id":1226707,"previous_guid":"7C60C391F50511EB82D829EBA5593B08","section":"\u003cp\u003eHi-C: Scaffolding with 3D-DNA\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"6f63q\",\"text\":\"Your Hi-C library contains adequate read pairs to anchor sequences and build pseudo-chromosomes; you are now ready to scaffold. 3D-DNA runs in two parts: initial scaffolding is done and results can be viewed and modified/fixed by the user, before a final run of 3D-DNA produces a final scaffolded genome. 3D-DNA requires output from Juicer.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dcvqq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fosvj\",\"text\":\"3D-DNA has a lot parameters that can be user configured, and improve scaffolding results. The best place to find information and help on how to set these can be found here: https://groups.google.com/g/3d-genomics and the Genome Assembly Cookbook linked here: https://github.com/aidenlab/3d-dna\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":173,\"length\":39},{\"key\":1,\"offset\":259,\"length\":34}],\"data\":{}},{\"key\":\"8bltd\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":2,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"eb34e\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"8D1C22CB315E11EC88600A58A9FEAC02\",\"url\":\"https://groups.google.com/g/3d-genomics\"}},\"1\":{\"type\":\"link\",\"mutability\":\"\",\"data\":{\"guid\":\"ACDA998E315E11EC88600A58A9FEAC02\",\"url\":\"https://github.com/aidenlab/3d-dna\"}},\"2\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9186,\"name\":\"nodups=\\\"/path to juicer output/aligned/merged_nodups.txt\\\"\\ngenome=\\\"/path to genome/plasmid-filtered.fasta\\\"\\nminSeqSize=1000\\nDNAPath=\\\"\\\"\\n\\nbash ${DNAPath}/run-asm-pipeline.sh -i $minSeqSize $assembly $nodups\",\"os_name\":null,\"os_version\":null,\"command_name\":\"3D-DNA: initial scaffolding\",\"description\":null,\"can_edit\":1,\"guid\":\"D97ED930F50611EB82D829EBA5593B08\"}}}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"3","cases":[],"critical":null},{"id":1226717,"guid":"7C6AFCC1F50511EB82D829EBA5593B08","previous_id":1226716,"previous_guid":"7C699D31F50511EB82D829EBA5593B08","section":"\u003cp\u003eHi-C: Scaffolding with 3D-DNA\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"8rn53\",\"text\":\"3D-DNA will generate two files of interest: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eh0mm\",\"text\":\"XX.rawchrom.assembly\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64nc7\",\"text\":\"XX.rawchrom.hic.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"48bnu\",\"text\":\"These two files can be viewed in Juicebox. Juicebox will show you how your sequences have been ordered and rotated to make your pseudo-chromosomes and show the evidence use for the joining in the form of a heat map (see https://github.com/aidenlab/Juicebox/wiki for help). After editing (or not) your Hi-C results save your new hic and assembly files and proceed to finalising your genome scaffolding with 3D-DNA.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9gt4k\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"2eks\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9187,\"name\":\"run-asm-pipeline-post-review.sh -r juicebox_edited.assembly /path to juicer output/aligned/merged_nodups.txt\",\"os_name\":null,\"os_version\":null,\"command_name\":\"3D-DNA: Finialise scaffolding\",\"description\":null,\"can_edit\":1,\"guid\":\"475F5BA0F50711EB82D829EBA5593B08\"}}}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"4","cases":[],"critical":null},{"id":1226718,"guid":"7C6C5C51F50511EB82D829EBA5593B08","previous_id":1227158,"previous_guid":"B00D3020F58211EBB67211A13AEE9C73","section":"\u003cp\u003eScaffold: Synteny\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"9614m\",\"text\":\"If Hi-C, genetic maps or other data is not available to anchor sequences together and create pseudo-chromosomes synteny information from a closely related species can be used. The tool we prefer to use here is RagTag (formally RaGOO) which uses minimp2 to align your contigs against the scaffolding genome, and anchor and orient the contigs into pseudo-chromosomes.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ahb1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4mvqm\",\"text\":\"The first step in scaffolding is to remove all unplaced sequences that exist within the scaffolding reference, i.e. remove sequences that are not part of a chromosome.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"490s1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"9rf1i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9188,\"name\":\"scaffoldGenome=\\\"/path to scaffolding genome/sppXXX.fasta\\\"\\ngenome=\\\"/path to genome/plasmid-filtered.fasta\\\"\\n\\nbioawk -c fastx '{print $name}' $scaffoldGenome \\u003e scaffold.lst\",\"os_name\":null,\"os_version\":null,\"command_name\":\"Get list of sequence names in syntenic reference\",\"description\":null,\"can_edit\":1,\"guid\":\"D98CED10F58111EBB67211A13AEE9C73\"}}}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"6","cases":[],"critical":null},{"id":1227157,"guid":"63A3E0D0F58211EBB67211A13AEE9C73","previous_id":1226718,"previous_guid":"7C6C5C51F50511EB82D829EBA5593B08","section":"\u003cp\u003eScaffold: Synteny\u003c/p\u003e","section_color":"#FFED92","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"3ql3n\",\"text\":\"Open scaffold.lst in a text editor (eg. nano) and remove all sequence names that are not chromosomes, ie. reduce scaffolds.lst to only chromosomes. Once you have a list of chromosome sequence names scaffolding is performed.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ddm9i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"46ftp\",\"text\":\"RagTag will append “_ragtag” to the end of scaffold names, we use sed to remove this.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbhk1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"data\":{}},{\"key\":\"11jeo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9l9q6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"command\",\"mutability\":\"\",\"data\":{\"id\":9189,\"name\":\"cpus=XXX\\n\\nseqtk subseq $scaffoldGenome scaffold.lst \\u003e reference.fasta\\npython3 ragoo.py -m /path to minimap2/minimap2 -C -t $cpus $contigs reference.fasta\\n\\nsed -e 's/_ragtag//g' ragoo_output/ragoo.fasta \\u003e scaffold.fasta\\nrm scaffold.lst reference.fasta\",\"os_name\":null,\"os_version\":null,\"command_name\":\"Scaffold genome\",\"description\":null,\"can_edit\":1,\"guid\":\"6F8A64A2F58211EBB5580A58A9FEAC02\"}}}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"7","cases":[],"critical":null},{"id":1227158,"guid":"B00D3020F58211EBB67211A13AEE9C73","previous_id":1226717,"previous_guid":"7C6AFCC1F50511EB82D829EBA5593B08","section":"\u003cp\u003eHi-C: Scaffolding with 3D-DNA\u003c/p\u003e","section_color":"#84CE84","section_duration":0,"is_substep":false,"step":"{\"blocks\":[{\"key\":\"334md\",\"text\":\"After scaffolding with Hi-C you can also scaffold with synteny using a close relative, as per steps 7-8. Whether you wish to do this or not will depend on the quality of the syntenic reference, phylogenetic distance, and how successful your Hi-C scaffolding was. This process will not break up your scaffolded sequences, only order and orient them according to how they align to the scaffolding reference.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8gcna\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e69qj\",\"text\":\"A additional benefit of this method is that it will name your scaffolds according to the naming scheme established from the scaffolding reference, i.e. if the scaffolding reference has chromosomes 1 to 4, your syntenic scaffolded reference will also contain sequences called chromosome 1 to 4.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","data":null,"protocol_id":52093,"case_id":0,"critical_ids":"","duration":0,"original_id":0,"number":"5","cases":[],"critical":null}],"template_id":5,"title":"Long-read plant genome assembly and annotation: scaffolding","title_html":"\u003cp\u003eLong-read plant genome assembly and annotation: scaffolding\u003c/p\u003e","type_id":1,"units":[{"id":1,"type_id":3,"name":"µL","can_manage":0},{"id":2,"type_id":3,"name":"mL","can_manage":0},{"id":3,"type_id":3,"name":"L","can_manage":0},{"id":4,"type_id":3,"name":"µg","can_manage":0},{"id":5,"type_id":3,"name":"mg","can_manage":0},{"id":6,"type_id":3,"name":"g","can_manage":0},{"id":7,"type_id":3,"name":"kg","can_manage":0},{"id":8,"type_id":3,"name":"ng","can_manage":0},{"id":9,"type_id":3,"name":"Hz","can_manage":0},{"id":10,"type_id":24,"name":"°C","can_manage":0},{"id":11,"type_id":24,"name":"°К","can_manage":0},{"id":12,"type_id":24,"name":"°F","can_manage":0},{"id":13,"type_id":25,"name":"Mass Percent","can_manage":0},{"id":14,"type_id":25,"name":"% volume","can_manage":0},{"id":15,"type_id":25,"name":"Mass / % volume","can_manage":0},{"id":16,"type_id":25,"name":"Parts per Million (PPM)","can_manage":0},{"id":17,"type_id":25,"name":"Parts per Billion (PPB)","can_manage":0},{"id":18,"type_id":25,"name":"Parts per Trillion (PPT)","can_manage":0},{"id":19,"type_id":25,"name":"Mole Fraction","can_manage":0},{"id":20,"type_id":25,"name":"Mole Percent","can_manage":0},{"id":21,"type_id":25,"name":"Molarity (M)","can_manage":0},{"id":22,"type_id":25,"name":"Molarity (m)","can_manage":0},{"id":23,"type_id":25,"name":"Genome copies per ml","can_manage":0},{"id":24,"type_id":3,"name":"μV","can_manage":0},{"id":25,"type_id":3,"name":"ms","can_manage":0},{"id":26,"type_id":3,"name":"pg","can_manage":0},{"id":27,"type_id":25,"name":"Molarity dilutions","can_manage":0},{"id":28,"type_id":25,"name":"Milimolar (mM)","can_manage":0},{"id":29,"type_id":25,"name":"Micromolar (µM)","can_manage":0},{"id":30,"type_id":25,"name":"Nanomolar (nM)","can_manage":0},{"id":31,"type_id":25,"name":"Picomolar (pM)","can_manage":0},{"id":32,"type_id":24,"name":"Room temperature","can_manage":0},{"id":33,"type_id":30,"name":"rpm","can_manage":0},{"id":34,"type_id":30,"name":"x g","can_manage":0},{"id":165,"type_id":24,"name":"On ice","can_manage":0},{"id":200,"type_id":32,"name":"cm","can_manage":0},{"id":201,"type_id":32,"name":"mm","can_manage":0},{"id":202,"type_id":32,"name":"µm","can_manage":0},{"id":203,"type_id":32,"name":"nm","can_manage":0},{"id":204,"type_id":25,"name":"mg/mL","can_manage":0},{"id":205,"type_id":25,"name":"µg/µL","can_manage":0},{"id":206,"type_id":25,"name":"% (v/v)","can_manage":0},{"id":1324,"type_id":30,"name":"rcf","can_manage":0},{"id":1359,"type_id":35,"name":"Bar","can_manage":0},{"id":1360,"type_id":35,"name":"Pa","can_manage":0}],"uri":"long-read-plant-genome-assembly-and-annotation-sca-bw45pgy6","url":"https://www.protocols.io/view/long-read-plant-genome-assembly-and-annotation-sca-bw45pgy6","version_class":52093,"version_data":{"id":0,"code":"bw45pgy6","version_class":52093,"parent_id":null,"parent_uri":null,"is_same_owner":false,"is_parent_public":false,"has_pending_merge_request":false,"has_approved_merge_request":false,"merge_request":null},"version_id":0,"version_uri":"long-read-plant-genome-assembly-and-annotation-sca-ewov14bz7vr2/v1","versions":[{"id":59656,"title":"Plant assemble - Plant de novo genome assembly: scaffolding","title_html":"\u003cp\u003ePlant assemble - Plant de novo genome assembly: scaffolding\u003c/p\u003e","image":{"source":"https://s3.amazonaws.com/protocols-files/files/gypabmnvf.jpg","webp_source":null,"placeholder":"https://s3.amazonaws.com/protocols-files/files/gypabmnvf.jpg","webp_placeholder":null},"doi":"dx.doi.org/10.17504/protocols.io.ewov14bz7vr2/v2","uri":"plant-assemble-plant-de-novo-genome-assembly-scaff-b6hgrb3w","published_on":1647906608,"modified_on":1647906608,"version_class":52093,"version_id":1,"version_code":"b6hgrb3w","version_uri":"plant-assemble-plant-de-novo-genome-assembly-scaff-ewov14bz7vr2/v2","created_on":1647825425,"categories":null,"creator":{"name":"Scott Ferguson","affiliation":"Australian National University","affiliation_url":"scott.ferguson@anu.edu.au","username":"scott-ferguson","link":"","image":{"source":"/img/avatars/017.png","placeholder":"/img/avatars/017.png","webp_source":""}},"stats":{"number_of_comments":0,"last_comment_time":0}}],"warning":""}