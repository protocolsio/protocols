{"id":42855,"title":"Deep SRE,\u00a0Identification of Sterol Responsive Elements and Nuclear transcription factors Y proximity in human DNA by Convolutional Neural Network analysis.","title_html":"<p>Deep SRE,\u00a0Identification of Sterol Responsive Elements and Nuclear transcription factors Y proximity in human DNA by Convolutional Neural Network analysis.<\/p>","image":{"source":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x4bgp7p.jpg","placeholder":"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x4bgp7p.jpg"},"doi":"dx.doi.org\/10.17504\/protocols.io.bm4fk8tn","doi_status":2,"uri":"deep-sre-identification-of-sterol-responsive-eleme-bm4fk8tn","type_id":1,"template_id":5,"published_on":1614960361,"parent_protocols":[],"parent_collections":[],"cited_protocols":[],"version_id":0,"version_data":{"id":"0","code":"bm4fk8tn","parent_id":0,"parent_uri":null,"is_same_owner":false,"has_pending_merge_request":false,"has_approved_merge_request":false},"created_on":1602059072,"modified_on":null,"categories":null,"public":1,"is_unlisted":0,"creator":{"name":"Davide Noto","affiliation":null,"affiliations":[],"username":"m4ule132u1u4yle1","note":null,"link":"https:\/\/doi.org\/10.1371\/journal.pone.0247402","image":{"source":"\/img\/avatars\/004.png","placeholder":"\/img\/avatars\/004.png"},"badges":[{"id":2,"image":{"source":"\/img\/badges\/bronze.svg","placeholder":"\/img\/badges\/bronze.svg"},"name":"Author"}],"verified":0,"is_verified_user":false,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false},"journal":"PLOS One","journal_name":"PLOS One","journal_link":"https:\/\/doi.org\/10.1371\/journal.pone.0247402","article_citation":"Noto D,  Giammanco A,  Spina R,  Fayer F,  Cefal\u00f9 AB,  Averna MR (2021) DeepSRE: Identification of sterol responsive elements and nuclear transcription factors Y proximity in human DNA by Convolutional Neural Network analysis. PLoS ONE  16(3): e0247402. doi: <a target=\"_blank\" href=\"https:\/\/dx.doi.org\/10.1371\/journal.pone.0247402\">10.1371\/journal.pone.0247402<\/a> ","has_versions":0,"link":"https:\/\/doi.org\/10.1371\/journal.pone.0247402","total_collections":0,"number_of_steps":7,"authors":[{"name":"Davide Noto","affiliation":"Antonina Giammanco, Rossella Spina, Francesca Fayer, Angelo B Cefal\u00f9, Maurizio R Averna","affiliations":[],"username":"m4ule132u1u4yle1","note":null,"link":null,"image":{"source":"\/img\/avatars\/004.png","placeholder":"\/img\/avatars\/004.png"},"badges":[],"verified":1,"is_verified_user":true,"research_interests":null,"blocked_by_you":false,"blocked_you":false,"hide_following":false}],"versions":[],"groups":[],"is_owner":1,"has_subprotocols":0,"is_subprotocol":0,"is_bookmarked":0,"can_claim_authorship":0,"can_accept_authorship":0,"can_be_copied":1,"can_remove_fork":1,"fork_id":null,"url":"https:\/\/www.protocols.io\/view\/deep-sre-identification-of-sterol-responsive-eleme-bm4fk8tn","forks_count":{"private":0,"public":0},"access":{"can_view":1,"can_remove":0,"can_add":0,"can_edit":0,"can_publish":0,"can_get_doi":0,"can_share":1,"can_move":1,"can_move_outside":1,"can_transfer":1,"can_download":1,"is_locked":0},"guid":"8045E700087611EB9E5C31DA05DC9D66","state_version_id":152,"steps":[{"id":1046212,"guid":"CE5E9E90087711EB9E5C31DA05DC9D66","previous_id":1046213,"previous_guid":"5EFFE090087711EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"593DCC8F5792421182C85B6592F6BD8F","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"2B81A801A1144A76B6E4E61C07D08133","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">STEPS 1 to 5<\/div><div class = \"text-block\">The first steps of the procedure are depicted in Figure 4. First, positive and negative TFChIP peaks are selected and stored in the .\/neg and .\/pos subdirs. Then peaks of SRE and NFY are extracted and compared to each other to check for a \u201cSRE \u2013 250 bp \u2013 NFY\u201d couple where peaks are located within 250 bp of distance. Random peaks for other TF represent the negative controls, but the control peaks are checked for not containing any SRE peak within 1000 bp of distance. In that case the peak is discarded. Positive peaks are augmented by base mutations according to phylogenetic base conservation, meaning that most conserved bases are less prone to be mutated. Peaks are then converted to numerical matrix, reversed complemented and subjected to CNN1D training. These steps are performed by the 1 to 5 R files.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x6bgp7p.jpg\" \/><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">1_extract TF peaks<\/span><\/div><div class = \"text-block\">This procedure extract both negative and positive TF peaks locations, check for SRE-NFY couples and clean the negative TF peaks. Positive SRE-NFY couples are stored in the \u201cENCODE_SREBF&NFY_peak.txt\u201d file, while negative peaks in the \u201cENCODE_negative_peak.txt\u201d file.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">2_retrieve sequences of TF peaks<\/span><\/div><div class = \"text-block\">This file recover the peak info from the above files and retrieve fragments of DNA sequence of 500 bp around the peaks and store them in the .\/negseq and .\/posseq dirs.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">3_extract_phylogenetic matrices for positive sequences<\/span><\/div><div class = \"text-block\">This routine load the positive peaks DNA coordinates and retrieves the corresponding phylogenic scores from the D:\/chrs\/Phylo files in wigFix format and, for each .seq file, saves the corresponding .phy file in the .\/phylo subdir for augmentation procedure.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">4_augmentation_positive _sequences<\/span><\/div><div class = \"text-block\">This is the augmentation procedure. It creates multiple copies of .\/posseq sequences mutating the bases according to the inverse of the phylogenetic score, so that important conserved bases are not easily mutated. The augmented sequences are stored in the .\/augm dir with a _[1..100].seq suffix.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">5_DeepSRE6_train <\/span><\/div><div class = \"text-block\">This is the core of the procedure. A CNN1D model contained in the \u201cSRE_models\u201d file is loaded by keras. The sequence files are handled by a custom generator contained in the \u201cDeepSRE6_generator\u201d file. The generator loads the sequence, complements it and appends the reverse sequence to the forward sequence. Then, the generator converts the sequences to numerical matrices, hot encodes them and fed them to the model in batches of 512 samples.  The model fitting is divided in three steps of decreasing epochs with and early callback procedure that stops the current step if no improvements are recorded after a predetermined number of epochs. The best fitting result is saved in .h5 format.<\/div><\/div>"}},{"id":1054725,"guid":"574DBF6523DB4DCFA6E1CA1C2C53F215","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x6bgp7p.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046213,"guid":"5EFFE090087711EB9E5C31DA05DC9D66","previous_id":1046214,"previous_guid":"AC932660087611EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"CDB7745CC9074E8ABE790CB6DB41153F","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"31A04A832F1B425B8C16DFE51B3AAE35","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">WORKFLOW<\/div><div class = \"text-block\">The procedure is composed of a series of steps included in consecutive R files. The R files must be executed in order, from 1 to 9 as shown in Figure 3. Some files contain R functions to support the main files.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x8bgp7p.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"6B16C714719C4F0EA61E9F38234CE76A","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5x8bgp7p.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046214,"guid":"AC932660087611EB9E5C31DA05DC9D66","previous_id":1046215,"previous_guid":"86DCEA00087611EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"481633DCC7CF49399BDD481E03E459AF","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"D7CC378C68444E4FA4C1E6559D8E7E21","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">DIRECTORIES STRUCTURE<\/div><div class = \"text-block\">The procedure requires a series of files located in appropriate directories to work. The scheme of the directories is presented in Figure 1.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5ycbgp7p.jpg\" \/><\/div><div class = \"text-block\">The \u201cchrs\u201d dir list all the chromosomal sequences in FASTA and all transcripts start-stop in BED format, all obtained from <\/div><div class = \"text-block\"><a href=\"https:\/\/hgdownload.soe.ucsc.edu\/goldenPath\/hg38\/chromosomes\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/hgdownload.soe.ucsc.edu\/goldenPath\/hg38\/chromosomes\/<\/span><\/a><\/div><div class = \"text-block\">, UCSC genome resources. The \u201cPhylo\u201d subdirectory contains the list of phylogenetic conservation scores in wigFIX format, from <\/div><div class = \"text-block\"><a href=\"http:\/\/hgdownload.cse.ucsc.edu\/goldenpath\/hg38\/phyloP100way\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">http:\/\/hgdownload.cse.ucsc.edu\/goldenpath\/hg38\/phyloP100way\/<\/span><\/a><\/div><div class = \"text-block\">. The first 500 bases of each promoter are extracted and stored in the \u201cDeep_promoters\/prom_seq\u201d dir. <\/div><div class = \"text-block\">The \u201cDeepSRE7\u201d is the main dir. The content of subdirs is shown in Figure 2<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yabgp7p.jpg\" \/><\/div><div class = \"text-block\">All of the subdirs are populated during the execution of the program with the exception of the .\/neg and .\/pos dirs., that present the TFChIP peaks data obtained from <\/div><div class = \"text-block\"><a href=\"http:\/\/genome.ucsc.edu\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">http:\/\/genome.ucsc.edu\/<\/span><\/a><\/div><div class = \"text-block\"> and converted in text format. .\/neg are control TFChIP peaks, .\/pos are SRE and NFY peaks.<\/div><\/div>"}},{"id":1054725,"guid":"276534665508469484F60A1C3C32E8BD","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5ycbgp7p.jpg\" \/><\/div>"}},{"id":1054726,"guid":"5DA857970CCB48BB826FB27B0CD0A2BD","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yabgp7p.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046215,"guid":"86DCEA00087611EB9E5C31DA05DC9D66","previous_id":null,"previous_guid":null,"modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"06B835A821654C59A43796DC9E351B79","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"9691B4E5A1BD498DA38886F638AE9FE8","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">INTRODUCTION<\/div><div class = \"text-block\">DeepSRE is a procedure that uses Deep Learning to identify possible SRE-NFY co-occurrence in gene promoters. The Deep Learning model consist of a Convolutional Neural Network 1-D model that is trained on SRE and NFY putative sequences contained in peaks identified by Transcription Factor Chromatin Immuno Precipitation (TF-ChIP) experiments. The peaks are identified by chromosomal coordinates listed in the ENCODE network database interrogated by the UCSC genome browser Table tool.<\/div><div class = \"text-block\">The procedure do not represent a fully operational software, but it is a simple list of R language routines that must be executed sequentially within the Rstudio environment to produce the desired output. Working directories, working files requires by the procedures, are to be set manually, so an \u201ca-priori\u201d knowledge of R language and RStudio functionalities are also required.<\/div><div class = \"text-block\">DeepSRE requires Reticulate, Keras and Tensorflow packages to work. Anaconda 3 was used to create a R python environment named \u201cr-tensorflow\u201d, that contains Tensorflow 1.14. The program has not been tested in Tensorflow 2.0. The complete procedure to install Keras and Tensorflow in RStudio is explained in the dedicated \u201cR interface to Keras\u201d site at <\/div><div class = \"text-block\"><a href=\"https:\/\/keras.rstudio.com\/.\" style = \"text-decoration:underline;color:blue;cursor:pointer;\"><span style = \":;\">https:\/\/keras.rstudio.com\/.<\/span><\/a><\/div><div class = \"text-block\"> An intermediate knowledge of Keras is also suggested.<\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046218,"guid":"A19BEBA0087811EB9E5C31DA05DC9D66","previous_id":1046212,"previous_guid":"CE5E9E90087711EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"38BA8AB8A16B4812A33F9B346A8581BD","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"471A439735B8467788C3EAB2E6FCC647","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">STEPS 6 to 8<\/div><div class = \"text-block\">These steps apply the trained model to the gene promoters in search of SRY-NFY couples. The idea shown in Figure 5 is to let the model predict what it considers a SRE-NFY iterating over 100-bp overlapping fragments obtaining by fractionating the first 500 bp of all the promoters contained in the \u201cDeep_promoters\u201d dir. Then all the positive promoters are defined as those with at leat 3 consecutive probabilities > 0.9. In the next steps the genes are grouped according to Gene Ontology terms expressing <\/div><div class = \"text-block\">the biological process (i.e. cholesterol synthesis, or DNA repair etc.) A procedure calculates if a GO group contains an excess of genes with a SRE-NFY patter detected by the model and it produces a Odds ratio with confidence intervals.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yebgp7p.jpg\" \/><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">6_DeepSRE6_evaluate<\/span><\/div><div class = \"text-block\">Every fragment is handled by the custom generator, as for the training sequences, and a model probability is produced. A matrix collects all the probabities of all the fragments of every promoter and stores it in the \u201cevalSRE7.csv\u201d file. Since positive promoters used to train the model show at least three or more fragments with model probability > 0.9, the routine screens all the promoters for such pattern and stores it in the same \u201cevalSRE7.csv\u201d file. <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">7_smooth_promoter _probs<\/span><\/div><div class = \"text-block\">To avoid probability oscillations in consecutive fragments, the consecutive probabilities are smoothed following a custom rule. The procedure takes 5 consecutive probabilities, cut the 2 extremes and averages the remaining three, then the procedure steps forward by one probability and repeats the smoothing until the probability list is completed. The resulting smoothed probabilities are stored in the \u201caveraged_mean_5_probs_SRE7.csv\u201d file.  <\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">8_DeepSRE6_calcORxGOterms<\/span><\/div><div class = \"text-block\">This procedures retrieves the list of promoter probabilities from the \u201cevalSRE7.csv\u201d file, the list of GO terms and relative genes from \"AllGOprocesslabel.csv\" and the list of all the genes linked to all the relative GO terms in from the \"listGOterms_correct.txt\" file. If this file does not exist the procedure creates it for the first time.  The procedure applies the rules of the 3 consecutive probabilities above 0.9 to all the promoters and stores the resulting matrix to the \u201clethrmedia3prob09_full_stride10.csv\" file. Then every GO groups is compared with all the remaining genes to have more genes with SRE-NFY couples detected. The enrichment in promoters with SRE-NRY couples is expressed as the Odds ratio with confidence intervals and a list of corresponding statistical p-values calculated by the \u201cepitools::oddsratio.fisher\u201d function. The results are stored in the \u201cOddsRatiosGoterms_f64k3_prox3prob09_full_strid10.csv\u201d file.  Then, the GO groups are ranked for decreasing Odds ratio and the first 30 GO groups are analyzed in details for SRE-NFY occurrence. The results are stored in the .\/GOgroups dir.<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">9_DeepSRE6_plot_prom_results<\/span><\/div><div class = \"text-block\">This routine collects all the data produced until now to create a graph for a chosen promoter, as in figure 6 for the LSS gene,  in which is shown: 1) Individual probabilities of overlapping fragments as dots and red line, 2) smoothed probabilities as a gray line, 3) TFChIP ENCODE SRE peaks as blue bars, 4) TFChIP ENCODE NFY peaks as red bar, 5) green bars if that peak has been used to train the model, 6) SRE peaks from an independent source as blue shaded bar, 7) NFY peaks from an independent source as red shaded bar.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5ygbgp7p.jpg\" \/><\/div><\/div>"}},{"id":1054725,"guid":"B4DA3F9E45F54A6FBFCF29D61013259A","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yebgp7p.jpg\" \/><\/div>"}},{"id":1054726,"guid":"CC9D82A4F535445B832A33D5BB030D20","order_id":3,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5ygbgp7p.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046219,"guid":"1B9A63A0087911EB9E5C31DA05DC9D66","previous_id":1046218,"previous_guid":"A19BEBA0087811EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"F0C032EC2ADD49ACACCEDBC1A3049740","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"20C814C679064B59889ED0C4C43C2A89","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">STEP 10<\/div><div class = \"text-block\">The last part of the program is aimed to understand which bases are considered relevant to the model to predict the occurrence of a SRE-NFY couple in a promoter. To accomplish this task the procedure again chops the promoter in 100-bases overlapping fragments and perform the task on every single fragment. The procedure first predicts the base probability of a SRE-NFY couple for that fragment. Then the procedure \u201cobscures\u201d or \u201coccludes\u201d the first base by zeroing it and recalculates the probability. Then, it steps forward one base and repeats the calculation. At the end of the iterations, a list of 100 probabilities is obtained by occluding every consecutive base.A base is considered important for the model if its occlusion produces a relevant drop in model probability. Since fragments are overlapping, all the fragments plots are averaged position-wise and a final plot is produced for the whole 500 bp promoter.<\/div><div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yibgp7p.jpg\" \/><\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">10_DeepSRE6_promoter_occlusion<\/span><\/div><div class = \"text-block\">This procedure works for single promoters stores in the \u201cDeep_promoters\u201ddirectory<\/div><div class = \"text-block\"><span style = \"font-weight:bold;\">10b_DeepSRE6_ENCODEpeak_occlusion<\/span><\/div><div class = \"text-block\">This procedure works for training or control peaks stored in the .\/posseq or .\/negseq dirs.<\/div><\/div>"}},{"id":1054725,"guid":"8E1B6120CAEF41D2A4903C4040025503","order_id":2,"type_id":1,"title":"description","source":{"description":"<div style = \"text-align :; float : ;\"><img style = \"\" src = \"https:\/\/s3.amazonaws.com\/protocols-files\/files\/c5yibgp7p.jpg\" \/><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0},{"id":1046242,"guid":"381B87A0087B11EB9E5C31DA05DC9D66","previous_id":1046219,"previous_guid":"1B9A63A0087911EB9E5C31DA05DC9D66","modified_on":0,"protocol_id":0,"components":[{"id":1054723,"guid":"3B7E13DF1A1942469B6B04B7A5975483","order_id":1,"type_id":6,"title":"Section","source":{"title":"Deep SRE"}},{"id":1054724,"guid":"2AD7D2FC97EE4303BE57F1A7146A56ED","order_id":1,"type_id":1,"title":"description","source":{"description":"<div class = \"text-blocks\"><div class = \"text-block\">All described R files  files have been loaded as ZIP file in the Description Section <\/div><\/div>"}}],"cases":[],"data":null,"html":null,"section":null,"section_color":"#A492FF","section_duration":0,"critical":null,"critical_id":null,"duration":0}],"document":"","materials":[],"description":"<div class = \"text-blocks\"><div class = \"text-block\">The paper presents a novel strategy to identify putative binding sites for the SREBP1 and SREBP2 cholesterol sensors using Convolutional Neural Networks and Deep Learning. The canonical binding sites are very heterogenous in different promoters, since different elements, as SRE, NF-Y and SP1 sequences, can be assembled in different configurations to make a functional binding site. Elements can be spaced differently, can be encoded in different DNA strands or even in inverted form in the same strand, so that the identification of a complete SREBP binding site is a hard task. CNN is able to overcome these problems because it can detect relevant features irrespective of their position in a DNA sequence, and then the polymorphic structure of the binding site can be detected in many configurations. We trained the model with DNA sequences containing SRE and NF-Y sites in close proximity (less than 250 bp) using the data derived from the ENCODE chromatin immunoprecipitation experiments. Once trained, the model predicted the presence of a SRE-NFY couple in all the known promoters. Then, all the genes were grouped according to their biological process (GO term) and we found that some processes are enriched in genes responsive to cholesterol even if not directly linked to cholesterol metabolism, as \u201cmismatch repair or \u201cregulation of RNA metabolism\u201d. Finally, we used the \u201cocclusion\u201d method to find the short sequences that the model considered relevant to make its predictions. Besides short SRE and NFY sequences that the model correctly considered important to the prediction, also other non-canonical binding elements, as RXR-A and ZNF423, seem to be important in absence of canonical SRE elements. <\/div><\/div>","changed_on":1614960361}